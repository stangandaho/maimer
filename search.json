[{"path":"https://stangandaho.github.io/maimer/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 maimer authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://stangandaho.github.io/maimer/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Stanislas Mahussi Gandaho. Author, maintainer.            Laboratory Applied Ecology, University Abomey-Calavi, Benin (LAE/UAC)","code":""},{"path":"https://stangandaho.github.io/maimer/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Gandaho S (2025). maimer: Handle Camera Trap Data. R package version 0.2.0, https://stangandaho.github.io/maimer/.","code":"@Manual{,   title = {maimer: Handle Camera Trap Data},   author = {Stanislas Mahussi Gandaho},   year = {2025},   note = {R package version 0.2.0},   url = {https://stangandaho.github.io/maimer/}, }"},{"path":[]},{"path":"https://stangandaho.github.io/maimer/index.html","id":"introduction","dir":"","previous_headings":"","what":"Introduction","title":"Handle Camera Trap Data","text":"Camera traps essential tool wildlife monitoring ecological research. generate vast amounts data require careful processing, cleaning, analysis extract meaningful insights. Researchers use camera trap data tasks species identification, biodiversity assessment, activity pattern analysis, occupancy modeling. However, handling analyzing data can complex time-consuming.","code":""},{"path":"https://stangandaho.github.io/maimer/index.html","id":"the-need-for-simplification","dir":"","previous_headings":"","what":"The Need for Simplification","title":"Handle Camera Trap Data","text":"Processing analyzing camera trap data R often requires multiple steps, cleaning raw data statistical modeling visualization. maimer R package addresses challenges providing modern, tidyverse-friendly workflow camera trap data analysis. Using tidy evaluation principles, enables users efficiently manipulate transform datasets. Additionally, integrates seamlessly ggplot2, allowing users generate highly customizable visualizations.","code":""},{"path":"https://stangandaho.github.io/maimer/index.html","id":"key-features-of-maimer","dir":"","previous_headings":"","what":"Key Features of maimer","title":"Handle Camera Trap Data","text":"Data Management & Standardization: Functions like mm_read(), mm_standardize(), mm_stack_df() help streamline data preparation. Manage media files: functions mm_remove_hs(), mm_get_hs(), mm_create_hs(), mm_app(), etc help read write image metadata. Data Cleaning & Validation: Ensure data integrity mm_check_name(), mm_check_location(). Flexible Data Transformation: Convert raw camera trap data formats suited different analyses (mm_to_community(), mm_to_occupancy(), mm_to_time()). Diversity Metrics: Calculate alpha beta diversity mm_alpha_diversity() mm_dissimilarity(), etc. Species Activity Overlap: Estimate visualize species overlap using mm_overlap_estimates(), mm_overlap_matrix(), mm_plot_overlap(). Temporal Analysis: Explore species activity shifts time mm_temporal_shift(). current complete list functions .","code":""},{"path":"https://stangandaho.github.io/maimer/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation:","title":"Handle Camera Trap Data","text":"can install ‘maimer’ directly GitHub using following command:","code":"# Install devtools package if you haven't already if(!'remotes' %in% rownames(installed.packages())){   install.packages(\"remotes\") }  # Install maimer from GitHub remotes::install_github(\"stangandaho/maimer\")"},{"path":"https://stangandaho.github.io/maimer/index.html","id":"meta","dir":"","previous_headings":"","what":"Meta","title":"Handle Camera Trap Data","text":"welcome contributions including bug reports. License: MIT Get citation information maimer R citation(\"maimer\"). Please note project released Contributor Code Conduct. participating project agree abide terms.","code":""},{"path":"https://stangandaho.github.io/maimer/reference/bootstrap.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate bootstrap estimates of overlap — mm_bootstrap","title":"Generate bootstrap estimates of overlap — mm_bootstrap","text":"bootstrap takes two sets times observations calculates bootstrap estimates chosen estimator overlap. Alternatively, bootstrap estimates can calculated 2-stage process: (1) create matrix bootstrap samples data set, using mm_resample(); (2) pass matrices mm_boot_estimates() obtain bootstrap estimates. vector bootstrap estimates can used produce confidence intervals mm_boot_ci().","code":""},{"path":"https://stangandaho.github.io/maimer/reference/bootstrap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate bootstrap estimates of overlap — mm_bootstrap","text":"","code":"mm_bootstrap(   A,   B,   nb,   smooth = TRUE,   kmax = 3,   adjust = NA,   n_grid = 128,   type = c(\"Dhat1\", \"Dhat4\", \"Dhat5\"),   cores = 1 )  mm_resample(x, nb, smooth = TRUE, kmax = 3, adjust = 1, n_grid = 512)  mm_boot_estimates(   Amat,   Bmat,   kmax = 3,   adjust = c(0.8, 1, 4),   n_grid = 128,   type = c(\"all\", \"Dhat1\", \"Dhat4\", \"Dhat5\"),   cores = 1 )"},{"path":"https://stangandaho.github.io/maimer/reference/bootstrap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate bootstrap estimates of overlap — mm_bootstrap","text":"numeric vector time--day observations (radians) species . B numeric vector time--day observations (radians) species B. nb number bootstrap samples required smooth TRUE, smoothed bootstrap samples produced. kmax integer indicating maximum number modes allowed activity pattern. Default 3. adjust numeric value adjust bandwidth kernel density estimation. Default 1. n_grid integer specifying number grid points density estimation. Default 128. type name estimator use, \"\" produce three estimates. See mm_overlap_estimates() recommendations use. cores number cores use parallel processing. NA, one available cores used. Parallel processing may take longer serial processing bootstrap runs quickly. x numeric vector time--capture data radians, ie. [0, \\(2\\pi\\)] scale Amat, Bmat matrices resampled data species produced resample; see Value .","code":""},{"path":"https://stangandaho.github.io/maimer/reference/bootstrap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate bootstrap estimates of overlap — mm_bootstrap","text":"function mm_bootstrap() returns vector bootstrap estimates. estimation fails bootstrap sample, corresponding value NA. function mm_resample() returns numeric matrix column corresponding bootstrap sample. Times radians. may return matrix NAs smooth = TRUE bandwidth estimation fails. Function mm_boot_estimates type = \"\" returns numeric matrix three columns, one estimator overlap, otherwise vector bootstrap estimates.","code":""},{"path":"https://stangandaho.github.io/maimer/reference/bootstrap.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Generate bootstrap estimates of overlap — mm_bootstrap","text":"Ridout & Linkie (2009) Estimating overlap daily activity patterns camera trap data. Journal Agricultural, Biological, Environmental Statistics 14:322-337","code":""},{"path":[]},{"path":"https://stangandaho.github.io/maimer/reference/bootstrap.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generate bootstrap estimates of overlap — mm_bootstrap","text":"Mike Meredith, Martin Ridout.","code":""},{"path":"https://stangandaho.github.io/maimer/reference/bootstrap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate bootstrap estimates of overlap — mm_bootstrap","text":"","code":"# Generate random data for two species set.seed(42) species_A <- runif(100, 1.2, 2 * pi) species_B <- runif(100, 0.23, 2 * pi)  est <- mm_overlap_estimates(species_A, species_B, type=\"Dhat4\")  boots <- mm_bootstrap(species_A, species_B, 1000, type=\"Dhat4\", cores=1) mean(boots) #> [1] 0.8304592 hist(boots)  mm_boot_ci(est, boots) #>            lower     upper #> norm   0.7975707 0.9708611 #> norm0  0.7706923 0.9439828 #> basic  0.8051838 0.9740576 #> basic0 0.7674959 0.9363697 #> perc   0.7406175 0.9094913  # alternatively: species_A_gen <- mm_resample(species_A, 1000) species_B_gen <- mm_resample(species_B, 1000) boots <- mm_boot_estimates(species_A_gen, species_B_gen, type=\"Dhat4\", cores=1) mean(boots) #> [1] 0.8338819"},{"path":"https://stangandaho.github.io/maimer/reference/calc_active_periods.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate active periods for camera trap data — calc_active_periods","title":"Calculate active periods for camera trap data — calc_active_periods","text":"Internal helper function calculate continuous active periods based gap detection.","code":""},{"path":"https://stangandaho.github.io/maimer/reference/calc_active_periods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate active periods for camera trap data — calc_active_periods","text":"","code":"calc_active_periods(data, threshold, time_unit)"},{"path":"https://stangandaho.github.io/maimer/reference/calc_active_periods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate active periods for camera trap data — calc_active_periods","text":"data data frame containing datetime column. threshold numeric value indicating minimum gap considered break (default 10). time_unit unit threshold. Supported values include \"secs\", \"mins\", \"hours\", \"days\", \"weeks\".","code":""},{"path":"https://stangandaho.github.io/maimer/reference/calc_active_periods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate active periods for camera trap data — calc_active_periods","text":"tibble period_start period_end columns.","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_alpha_diversity.html","id":null,"dir":"Reference","previous_headings":"","what":"Alpha diversity index — mm_alpha_diversity","title":"Alpha diversity index — mm_alpha_diversity","text":"Calculate index diversity within particular area ecosystem; usually expressed number species (.e., species richness) ecosystem.","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_alpha_diversity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Alpha diversity index — mm_alpha_diversity","text":"","code":"mm_alpha_diversity(   data,   to_community = TRUE,   index = \"shannon\",   site_column,   species_column,   size_column = NULL,   margin = 1 )"},{"path":"https://stangandaho.github.io/maimer/reference/mm_alpha_diversity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Alpha diversity index — mm_alpha_diversity","text":"data data frame containing species observation data. to_community Logical; TRUE, function first transforms data community matrix format sites rows species columns computing indices. Default TRUE. index character vector specifying diversity index calculate. Accepted values \"shannon\", \"simpson\", \"invsimpson\", \"evenness\", \"pielou\". Multiple indices can computed simultaneously providing vector. site_column column name data represents site location species recorded. species_column column(s) data representing species taxa. can single column name, range column indices (e.g., 2:5), selection helper (e.g., dplyr::starts_with(\"sp_\")). size_column (Optional) column data containing count abundance individuals per species. NULL, function assumes row represents one individual. margin integer specifying whether diversity calculations performed row (margin = 1) column (margin = 2). Default 1 (row-wise).","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_alpha_diversity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Alpha diversity index — mm_alpha_diversity","text":"tibble diversity index values site. first column corresponds site_column, followed one columns containing computed diversity indices, depending values specified index argument.","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_alpha_diversity.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Alpha diversity index — mm_alpha_diversity","text":"Simpson diversity index Simpson (1949) introduced diversity index quantifies likelihood two randomly chosen individuals belonging species. probability increases diversity decreases; scenario diversity (one species), probability reaches 1. Simpson's Index computed using following formula: $$D = \\sum_{=1}^{S} \\left( \\frac{n_{}}{N} \\right)^2$$ \\(n_{}\\) number individuals species , N = total number individuals species, \\(\\frac{n_{}}{N} = pi\\) (proportion individuals species ), S = species richness. value Simpson’s D ranges 0 1, 0 representing infinite diversity 1 representing diversity, larger value D, lower diversity. reason, Simpson’s index often complement (1-D). Simpson's Dominance Index inverse Simpson's Index (\\(1/D\\)). Shannon-Weiner Diversity Index Shannon-Weiner Diversity Index measure diversity takes account species richness evenness, introduced Claude Shannon 1948. Commonly referred Shannon's Diversity Index, based concept uncertainty. instance, community low diversity, high level certainty (low uncertainty) identity randomly selected organism. Conversely, highly diverse community, uncertainty increases, making harder predict species randomly chosen organism belong (low certainty high uncertainty). $$H = -\\sum_{=1}^{S} p_{} * \\ln p_{}$$ \\(p_{}\\) = proportion individuals species , ln natural logarithm,  S = species richness. value H ranges 0 Hmax. Hmax different community depends species richness. (Note: Shannon-Weiner often denoted H' ). Pielou Evenness diversity index Species evenness refers relative abundance species within environment. example, 40 foxes 1000 dogs, community uneven one species dominates. However, 40 foxes 42 dogs, community much even, species balanced number. degree evenness community can quantified using Pielou's evenness index (Pielou, 1966): $$J=\\frac{H}{H_{\\max }}$$ value J ranges 0 1. Higher values indicate higher levels evenness. maximum evenness, J = 1. J D can used measures species dominance (opposite diversity) community. Low J indicates 1 species dominate community.","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_alpha_diversity.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Alpha diversity index — mm_alpha_diversity","text":"Pielou, E.C. (1966). measurement diversity different types biological collections. Journal Theoretical Biology, 13, pp. 131–144. doi:10.1016/0022-5193(66)90013-0. Simpson, E.H. (1949). Measurement diversity. Nature, 163, pp. 688. doi:10.1038/163688a0 Shannon, C.E. (1948). mathematical theory communication. Bell System Technical Journal, 27, pp. 379-423.https://doi.org/10.1002/j.1538-7305.1948.tb01338.x","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_alpha_diversity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Alpha diversity index — mm_alpha_diversity","text":"","code":"cam_data <- read.csv(system.file('penessoulou_season1.csv', package = 'maimer'))  # Transform data to community format and compute diversity indices alpha1 <- cam_data %>%   mm_alpha_diversity(     to_community = TRUE,     size_column = number,     site_column = camera,     species_column = species,     index = c(\"shannon\", \"evenness\", \"invsimpson\")   )  # Alternative method using a manually transformed community matrix alpha2 <- cam_data %>%   mm_to_community(site_column = camera, species_column = species,                   size_column = number, values_fill = 0) %>%   mm_alpha_diversity(     to_community = FALSE,     site_column = camera,     species_column = 2:11,     index = c(\"shannon\", \"evenness\", \"invsimpson\")   ) alpha2 #> # A tibble: 13 × 4 #>    camera          shannon evenness invsimpson #>    <chr>             <dbl>    <dbl>      <dbl> #>  1 CAMERA 10         0.103    0.045       1.04 #>  2 CAMERA 3          0.974    0.423       2.46 #>  3 CAMERA 5          0.893    0.388       2.18 #>  4 CAMERA 8          0.224    0.097       1.12 #>  5 CAMERA 2          0.509    0.221       1.34 #>  6 CAMERA 1          1.14     0.497       2.73 #>  7 CAMERA 12         0        0           1    #>  8 CAMERA 4          1.31     0.57        3.55 #>  9 CAMERA 11         0        0           1    #> 10 CAMERA 3 - Bait   0.562    0.244       1.6  #> 11 CAMERA 1 - Bait   0        0           1    #> 12 CAMERA 19         0.637    0.276       1.80 #> 13 FCPEN             0.131    0.057       1.06 # Compare results all(alpha1 == alpha2) # TRUE #> [1] TRUE"},{"path":"https://stangandaho.github.io/maimer/reference/mm_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Run App — mm_app","title":"Run App — mm_app","text":"Launch maimer GUI image/video management","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run App — mm_app","text":"","code":"mm_app()"},{"path":"https://stangandaho.github.io/maimer/reference/mm_boot_ci.html","id":null,"dir":"Reference","previous_headings":"","what":"Bootstrap confidence intervals — mm_boot_ci","title":"Bootstrap confidence intervals — mm_boot_ci","text":"Confidence interval calculation bootstrap samples.","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_boot_ci.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bootstrap confidence intervals — mm_boot_ci","text":"","code":"mm_boot_ci(t0, bt, conf = 0.95)"},{"path":"https://stangandaho.github.io/maimer/reference/mm_boot_ci.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bootstrap confidence intervals — mm_boot_ci","text":"t0 statistic estimated original sample, usually output mm_overlap_estimates() bt vector bootstrap statistics, usually output mm_boot_estimates() conf (single!) confidence interval estimate.","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_check_location.html","id":null,"dir":"Reference","previous_headings":"","what":"Interactive camera trap location adjustment — mm_check_location","title":"Interactive camera trap location adjustment — mm_check_location","text":"function launches shiny application allows users visualize manually adjust geographic coordinates camera trap locations. Users can drag points interactive map update positions camera traps, updated dataset saved global environment.","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_check_location.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interactive camera trap location adjustment — mm_check_location","text":"","code":"mm_check_location(   data,   longitude,   latitude,   location_name,   coord_system = c(\"geographic\", \"projected\"),   crs,   new_data_name )"},{"path":"https://stangandaho.github.io/maimer/reference/mm_check_location.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interactive camera trap location adjustment — mm_check_location","text":"data data frame containing camera trap data processed. longitude string representing column name longitude dataset. latitude string representing column name latitude dataset. location_name string representing column name location name unique identifier camera trap point. coord_system string specifying coordinate system input data. Choices \"geographic\" longitude latitude, \"projected\" projected coordinates. crs integer representing coordinate reference system (CRS) EPSG format. Required coord_system = \"projected\". new_data_name string specifying name new dataset updated coordinates created global environment.","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_check_location.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interactive camera trap location adjustment — mm_check_location","text":"shiny application launched display map allow manual coordinate adjustments. modified dataset saved global environment name provided new_data_name.","code":""},{"path":[]},{"path":"https://stangandaho.github.io/maimer/reference/mm_check_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Check species name and retrieve Taxonomic Serial Number (TSN) from ITIS — mm_check_name","title":"Check species name and retrieve Taxonomic Serial Number (TSN) from ITIS — mm_check_name","text":"function queries Integrated Taxonomic Information System (ITIS) find taxonomic details given species name.  can search using either scientific name common name return relevant taxonomic information, including TSN.","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_check_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check species name and retrieve Taxonomic Serial Number (TSN) from ITIS — mm_check_name","text":"","code":"mm_check_name(species_name, search_type, ask = FALSE)"},{"path":"https://stangandaho.github.io/maimer/reference/mm_check_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check species name and retrieve Taxonomic Serial Number (TSN) from ITIS — mm_check_name","text":"species_name character string specifying species name search . single name allowed. search_type character string specifying type search. Options: \"sientific_name\": Search scientific name. \"common_name\": Search common name. ask logical value (TRUE FALSE). TRUE, allows interactive selection multiple matches found.","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_check_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check species name and retrieve Taxonomic Serial Number (TSN) from ITIS — mm_check_name","text":"tibble containing taxonomic details: search: original species name queried. tsn: Taxonomic Serial Number (TSN) ITIS. common_name: common name species (available). scientific_name: scientific name species. author: author classified species. itis_url: direct link species report ITIS. taxon_status: taxonomic status species.","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_check_name.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check species name and retrieve Taxonomic Serial Number (TSN) from ITIS — mm_check_name","text":"necessary packages (httr2, xml2) installed, function prompts user install . multiple results found ask = TRUE, user prompted select correct match. exact match found, results displayed manual selection.","code":""},{"path":[]},{"path":"https://stangandaho.github.io/maimer/reference/mm_check_name.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check species name and retrieve Taxonomic Serial Number (TSN) from ITIS — mm_check_name","text":"","code":"if (FALSE) { # \\dontrun{ # Search for a species by scientific name mm_check_name(\"Panthera leo\", search_type = \"sientific_name\")  # Search by common name with interactive selection mm_check_name(\"Lion\", search_type = \"common_name\", ask = TRUE) } # }"},{"path":"https://stangandaho.github.io/maimer/reference/mm_ci.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate confidence interval — mm_ci","title":"Calculate confidence interval — mm_ci","text":"Calculates confidence interval mean numeric vector using t-distribution.","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_ci.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate confidence interval — mm_ci","text":"","code":"mm_ci(x, alpha = 0.05, side = \"all\")"},{"path":"https://stangandaho.github.io/maimer/reference/mm_ci.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate confidence interval — mm_ci","text":"x numeric vector data values. alpha Significance level confidence interval. Default 0.05 (95% confidence). side character string indicating type interval: \"\" Two-sided confidence interval (default). \"left\" One-sided lower bound. \"right\" One-sided upper bound.","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_ci.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate confidence interval — mm_ci","text":"numeric vector containing confidence interval bounds: side = \"\", returns vector length 2: c(lower, upper). side = \"left\" \"right\", returns single numeric value.","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_ci.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate confidence interval — mm_ci","text":"","code":"x <- c(10, 12, 11, 14, 13, 15) mm_ci(x) #> [1] 10.53669 14.46331 mm_ci(x, alpha = 0.01) #> [1]  9.4204 15.5796 mm_ci(x, side = \"left\") #> [1] 10.53669"},{"path":"https://stangandaho.github.io/maimer/reference/mm_correct_datetime.html","id":null,"dir":"Reference","previous_headings":"","what":"Correct camera trap datetime records — mm_correct_datetime","title":"Correct camera trap datetime records — mm_correct_datetime","text":"function corrects datetime stamps camera trap data using reference correction table. applies time adjustments based known timing errors camera deployment.","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_correct_datetime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Correct camera trap datetime records — mm_correct_datetime","text":"","code":"mm_correct_datetime(data, datetime, deployment, corrector, format = NULL)"},{"path":"https://stangandaho.github.io/maimer/reference/mm_correct_datetime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Correct camera trap datetime records — mm_correct_datetime","text":"data data.frame tibble containing camera trap records datetime information needs correction. datetime Column name (unquoted) data containing datetime values corrected. Can character POSIXct format. deployment Column name (unquoted) data corrector identifies unique camera deployments (e.g., camera ID, site name, deployment identifier). corrector data.frame containing correction information columns: deployment column matching deployment parameter sign - character indicating correction direction (\"+\" \"-\") datetimes - reference datetime showing correct time format Optional datetime format specification. Can : NULL (default) - attempts multiple common formats Single format string - used data corrector datetimes Vector 2 format strings - first data, second corrector","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_correct_datetime.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Correct camera trap datetime records — mm_correct_datetime","text":"data.frame original data plus additional columns: corrected_datetime - corrected datetime POSIXct correction_applied - sign correction applied time_offset_seconds - magnitude correction seconds corrector_reference - reference datetime used correction","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_correct_datetime.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Correct camera trap datetime records — mm_correct_datetime","text":"","code":"# Load camera trap data library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union  camtrap_data <- read.csv(maimer:::table_files()[1]) %>%   dplyr::filter(project == \"Last\")  # Create correction table # CAMERA 1 was running slow (+), CAMERA 2 was running fast (-) crtor <- data.frame(   camera = c(\"CAMERA 1\", \"CAMERA 2\"),   sign = c(\"+\", \"-\"),   datetimes = c(\"2025-03-14 8:17:00\", \"2024-11-14 10:02:03\") )  # Apply datetime corrections mm_correct_datetime(   data = camtrap_data,   datetime = datetimes,   deployment = camera,   corrector = crtor ) #>     project   camera              species       image_name number     Make #> 1      Last CAMERA 1   Erythrocebus patas     DSCF0001.JPG      1 GardePro #> 2      Last CAMERA 1   Erythrocebus patas     DSCF0002.JPG      1 GardePro #> 3      Last CAMERA 1   Erythrocebus patas     DSCF0003.JPG      1 GardePro #> 4      Last CAMERA 1      Syncerus caffer     DSCF0005.JPG      1 GardePro #> 5      Last CAMERA 1      Syncerus caffer     DSCF0006.JPG      1 GardePro #> 6      Last CAMERA 1      Syncerus caffer     DSCF0007.JPG      1 GardePro #> 7      Last CAMERA 1      Syncerus caffer     DSCF0009.JPG      1 GardePro #> 8      Last CAMERA 1      Syncerus caffer     DSCF0010.JPG      1 GardePro #> 9      Last CAMERA 1      Syncerus caffer     DSCF0011.JPG      1 GardePro #> 10     Last CAMERA 1      Syncerus caffer     DSCF0013.JPG      2 GardePro #> 11     Last CAMERA 1      Syncerus caffer     DSCF0014.JPG      2 GardePro #> 12     Last CAMERA 1      Syncerus caffer     DSCF0015.JPG      2 GardePro #> 13     Last CAMERA 1        Canis adustus     DSCF0017.JPG      1 GardePro #> 14     Last CAMERA 1        Canis adustus     DSCF0018.JPG      1 GardePro #> 15     Last CAMERA 1        Canis adustus     DSCF0019.JPG      1 GardePro #> 16     Last CAMERA 1      Syncerus caffer     DSCF0021.JPG      4 GardePro #> 17     Last CAMERA 1      Syncerus caffer     DSCF0022.JPG      4 GardePro #> 18     Last CAMERA 1      Syncerus caffer     DSCF0023.JPG      4 GardePro #> 19     Last CAMERA 1      Syncerus caffer     DSCF0025.JPG      3 GardePro #> 20     Last CAMERA 1      Syncerus caffer     DSCF0026.JPG      3 GardePro #> 21     Last CAMERA 1      Syncerus caffer     DSCF0027.JPG      4 GardePro #> 22     Last CAMERA 1      Syncerus caffer     DSCF0029.JPG      5 GardePro #> 23     Last CAMERA 1      Syncerus caffer     DSCF0030.JPG      5 GardePro #> 24     Last CAMERA 1      Syncerus caffer     DSCF0031.JPG      5 GardePro #> 25     Last CAMERA 1      Syncerus caffer     DSCF0033.JPG      2 GardePro #> 26     Last CAMERA 1      Syncerus caffer     DSCF0034.JPG      2 GardePro #> 27     Last CAMERA 1      Syncerus caffer     DSCF0035.JPG      2 GardePro #> 28     Last CAMERA 1   Erythrocebus patas DSCF0037 (2).JPG      1 GardePro #> 29     Last CAMERA 1   Erythrocebus patas     DSCF0038.JPG      1 GardePro #> 30     Last CAMERA 1   Erythrocebus patas     DSCF0039.JPG      1 GardePro #> 31     Last CAMERA 1   Erythrocebus patas     DSCF0041.JPG      1 GardePro #> 32     Last CAMERA 1   Erythrocebus patas     DSCF0042.JPG      1 GardePro #> 33     Last CAMERA 1   Erythrocebus patas     DSCF0043.JPG      1 GardePro #> 34     Last CAMERA 1        Canis adustus     DSCF0045.JPG      1 GardePro #> 35     Last CAMERA 1        Canis adustus     DSCF0046.JPG      1 GardePro #> 36     Last CAMERA 1        Canis adustus     DSCF0047.JPG      1 GardePro #> 37     Last CAMERA 1        Canis adustus     DSCF0049.JPG      1 GardePro #> 38     Last CAMERA 1        Canis adustus     DSCF0050.JPG      1 GardePro #> 39     Last CAMERA 1        Canis adustus     DSCF0051.JPG      1 GardePro #> 40     Last CAMERA 1        Canis adustus     DSCF0053.JPG      1 GardePro #> 41     Last CAMERA 1        Canis adustus     DSCF0054.JPG      1 GardePro #> 42     Last CAMERA 1        Canis adustus     DSCF0055.JPG      1 GardePro #> 43     Last CAMERA 1        Canis adustus     DSCF0057.JPG      1 GardePro #> 44     Last CAMERA 1        Canis adustus     DSCF0058.JPG      1 GardePro #> 45     Last CAMERA 1        Canis adustus     DSCF0059.JPG      1 GardePro #> 46     Last CAMERA 1        Canis adustus     DSCF0061.JPG      1 GardePro #> 47     Last CAMERA 1        Canis adustus     DSCF0062.JPG      1 GardePro #> 48     Last CAMERA 1        Canis adustus     DSCF0063.JPG      1 GardePro #> 49     Last CAMERA 1        Canis adustus     DSCF0065.JPG      1 GardePro #> 50     Last CAMERA 1        Canis adustus     DSCF0066.JPG      1 GardePro #> 51     Last CAMERA 1        Canis adustus     DSCF0067.JPG      1 GardePro #> 52     Last CAMERA 1      Syncerus caffer DSCF0069 (2).JPG      1 GardePro #> 53     Last CAMERA 1      Syncerus caffer DSCF0070 (2).JPG      1 GardePro #> 54     Last CAMERA 1      Syncerus caffer DSCF0071 (2).JPG      1 GardePro #> 55     Last CAMERA 1      Syncerus caffer DSCF0077 (2).JPG      2 GardePro #> 56     Last CAMERA 1      Syncerus caffer DSCF0078 (2).JPG      2 GardePro #> 57     Last CAMERA 1      Syncerus caffer DSCF0079 (2).JPG      2 GardePro #> 58     Last CAMERA 1        Canis adustus     DSCF0081.JPG      1 GardePro #> 59     Last CAMERA 1        Canis adustus     DSCF0082.JPG      1 GardePro #> 60     Last CAMERA 1        Canis adustus     DSCF0083.JPG      1 GardePro #> 61     Last CAMERA 1      Syncerus caffer DSCF0085 (2).JPG      1 GardePro #> 62     Last CAMERA 1      Syncerus caffer DSCF0086 (2).JPG      1 GardePro #> 63     Last CAMERA 1      Syncerus caffer DSCF0087 (2).JPG      1 GardePro #> 64     Last CAMERA 1      Syncerus caffer DSCF0089 (2).JPG      1 GardePro #> 65     Last CAMERA 1      Syncerus caffer DSCF0090 (2).JPG      1 GardePro #> 66     Last CAMERA 1      Syncerus caffer DSCF0091 (2).JPG      1 GardePro #> 67     Last CAMERA 1      Syncerus caffer     DSCF0093.JPG      1 GardePro #> 68     Last CAMERA 1      Syncerus caffer     DSCF0094.JPG      1 GardePro #> 69     Last CAMERA 1      Syncerus caffer     DSCF0095.JPG      1 GardePro #> 70     Last CAMERA 1      Syncerus caffer     DSCF0097.JPG      2 GardePro #> 71     Last CAMERA 1      Syncerus caffer     DSCF0098.JPG      2 GardePro #> 72     Last CAMERA 1      Syncerus caffer     DSCF0099.JPG      1 GardePro #> 73     Last CAMERA 1      Syncerus caffer     DSCF0101.JPG      4 GardePro #> 74     Last CAMERA 1      Syncerus caffer     DSCF0102.JPG      4 GardePro #> 75     Last CAMERA 1      Syncerus caffer     DSCF0103.JPG      4 GardePro #> 76     Last CAMERA 1      Syncerus caffer     DSCF0105.JPG      3 GardePro #> 77     Last CAMERA 1      Syncerus caffer     DSCF0106.JPG      4 GardePro #> 78     Last CAMERA 1      Syncerus caffer     DSCF0107.JPG      3 GardePro #> 79     Last CAMERA 1      Syncerus caffer DSCF0109 (2).JPG      4 GardePro #> 80     Last CAMERA 1      Syncerus caffer DSCF0110 (2).JPG      3 GardePro #> 81     Last CAMERA 1      Syncerus caffer DSCF0111 (2).JPG      3 GardePro #> 82     Last CAMERA 1      Syncerus caffer DSCF0113 (2).JPG      2 GardePro #> 83     Last CAMERA 1      Syncerus caffer DSCF0114 (2).JPG      2 GardePro #> 84     Last CAMERA 1      Syncerus caffer DSCF0115 (2).JPG      2 GardePro #> 85     Last CAMERA 1   Erythrocebus patas DSCF0121 (2).JPG      1 GardePro #> 86     Last CAMERA 1   Erythrocebus patas DSCF0122 (2).JPG      1 GardePro #> 87     Last CAMERA 1   Erythrocebus patas DSCF0123 (2).JPG      1 GardePro #> 88     Last CAMERA 1        Canis adustus     DSCF0125.JPG      1 GardePro #> 89     Last CAMERA 1        Canis adustus     DSCF0126.JPG      1 GardePro #> 90     Last CAMERA 1        Canis adustus     DSCF0127.JPG      1 GardePro #> 91     Last CAMERA 1        Canis adustus     DSCF0129.JPG      1 GardePro #> 92     Last CAMERA 1        Canis adustus     DSCF0130.JPG      1 GardePro #> 93     Last CAMERA 1        Canis adustus     DSCF0131.JPG      1 GardePro #> 94     Last CAMERA 1   Erythrocebus patas     DSCF0141.JPG      2 GardePro #> 95     Last CAMERA 1   Erythrocebus patas     DSCF0145.JPG      1 GardePro #> 96     Last CAMERA 1   Erythrocebus patas     DSCF0146.JPG      1 GardePro #> 97     Last CAMERA 1   Erythrocebus patas     DSCF0153.JPG      1 GardePro #> 98     Last CAMERA 1   Erythrocebus patas     DSCF0155.JPG      1 GardePro #> 99     Last CAMERA 1   Erythrocebus patas     DSCF0157.JPG      1 GardePro #> 100    Last CAMERA 1   Erythrocebus patas     DSCF0158.JPG      1 GardePro #> 101    Last CAMERA 1   Erythrocebus patas     DSCF0159.JPG      1 GardePro #> 102    Last CAMERA 1   Erythrocebus patas     DSCF0161.JPG      1 GardePro #> 103    Last CAMERA 1   Erythrocebus patas     DSCF0165.JPG      2 GardePro #> 104    Last CAMERA 1   Erythrocebus patas     DSCF0166.JPG      1 GardePro #> 105    Last CAMERA 1   Erythrocebus patas     DSCF0171.JPG      1 GardePro #> 106    Last CAMERA 1   Erythrocebus patas     DSCF0173.JPG      1 GardePro #> 107    Last CAMERA 1   Erythrocebus patas     DSCF0181.JPG      3 GardePro #> 108    Last CAMERA 1   Erythrocebus patas     DSCF0182.JPG      1 GardePro #> 109    Last CAMERA 1   Erythrocebus patas     DSCF0183.JPG      1 GardePro #> 110    Last CAMERA 1   Erythrocebus patas     DSCF0185.JPG      1 GardePro #> 111    Last CAMERA 1   Erythrocebus patas     DSCF0186.JPG      1 GardePro #> 112    Last CAMERA 1   Erythrocebus patas     DSCF0187.JPG      1 GardePro #> 113    Last CAMERA 1   Erythrocebus patas     DSCF0189.JPG      2 GardePro #> 114    Last CAMERA 1   Erythrocebus patas     DSCF0190.JPG      2 GardePro #> 115    Last CAMERA 1   Erythrocebus patas     DSCF0191.JPG      2 GardePro #> 116    Last CAMERA 1   Erythrocebus patas     DSCF0193.JPG      1 GardePro #> 117    Last CAMERA 1   Erythrocebus patas     DSCF0197.JPG      1 GardePro #> 118    Last CAMERA 1   Erythrocebus patas     DSCF0198.JPG      1 GardePro #> 119    Last CAMERA 1   Erythrocebus patas     DSCF0201.JPG      1 GardePro #> 120    Last CAMERA 1   Erythrocebus patas     DSCF0205.JPG      1 GardePro #> 121    Last CAMERA 1   Erythrocebus patas     DSCF0209.JPG      1 GardePro #> 122    Last CAMERA 1   Erythrocebus patas     DSCF0213.JPG      1 GardePro #> 123    Last CAMERA 1   Erythrocebus patas     DSCF0217.JPG      1 GardePro #> 124    Last CAMERA 1   Erythrocebus patas     DSCF0218.JPG      1 GardePro #> 125    Last CAMERA 1   Erythrocebus patas     DSCF0219.JPG      1 GardePro #> 126    Last CAMERA 1   Erythrocebus patas     DSCF0225.JPG      1 GardePro #> 127    Last CAMERA 1   Erythrocebus patas     DSCF0233.JPG      1 GardePro #> 128    Last CAMERA 1   Erythrocebus patas     DSCF0235.JPG      1 GardePro #> 129    Last CAMERA 1   Erythrocebus patas     DSCF0237.JPG      1 GardePro #> 130    Last CAMERA 1   Erythrocebus patas     DSCF0241.JPG      1 GardePro #> 131    Last CAMERA 1   Erythrocebus patas     DSCF0242.JPG      1 GardePro #> 132    Last CAMERA 1   Erythrocebus patas     DSCF0243.JPG      1 GardePro #> 133    Last CAMERA 1   Erythrocebus patas     DSCF0249.JPG      1 GardePro #> 134    Last CAMERA 1   Erythrocebus patas     DSCF0253.JPG      1 GardePro #> 135    Last CAMERA 1   Erythrocebus patas     DSCF0261.JPG      2 GardePro #> 136    Last CAMERA 1   Erythrocebus patas     DSCF0262.JPG      1 GardePro #> 137    Last CAMERA 1   Erythrocebus patas     DSCF0269.JPG      1 GardePro #> 138    Last CAMERA 1   Erythrocebus patas     DSCF0270.JPG      1 GardePro #> 139    Last CAMERA 1   Erythrocebus patas     DSCF0271.JPG      1 GardePro #> 140    Last CAMERA 1   Erythrocebus patas     DSCF0273.JPG      2 GardePro #> 141    Last CAMERA 1   Erythrocebus patas     DSCF0274.JPG      2 GardePro #> 142    Last CAMERA 1   Erythrocebus patas     DSCF0275.JPG      2 GardePro #> 143    Last CAMERA 1   Erythrocebus patas     DSCF0277.JPG      3 GardePro #> 144    Last CAMERA 1   Erythrocebus patas     DSCF0278.JPG      2 GardePro #> 145    Last CAMERA 1   Erythrocebus patas     DSCF0279.JPG      1 GardePro #> 146    Last CAMERA 1   Erythrocebus patas     DSCF0281.JPG      1 GardePro #> 147    Last CAMERA 1   Erythrocebus patas     DSCF0282.JPG      1 GardePro #> 148    Last CAMERA 1   Erythrocebus patas     DSCF0283.JPG      1 GardePro #> 149    Last CAMERA 1   Erythrocebus patas     DSCF0285.JPG      1 GardePro #> 150    Last CAMERA 1   Erythrocebus patas     DSCF0286.JPG      2 GardePro #> 151    Last CAMERA 1   Erythrocebus patas     DSCF0287.JPG      1 GardePro #> 152    Last CAMERA 1   Erythrocebus patas     DSCF0289.JPG      1 GardePro #> 153    Last CAMERA 1   Erythrocebus patas     DSCF0290.JPG      1 GardePro #> 154    Last CAMERA 1   Erythrocebus patas     DSCF0291.JPG      1 GardePro #> 155    Last CAMERA 1 Tragelaphus scriptus     DSCF0293.JPG      2 GardePro #> 156    Last CAMERA 1 Tragelaphus scriptus     DSCF0294.JPG      2 GardePro #> 157    Last CAMERA 1 Tragelaphus scriptus     DSCF0295.JPG      2 GardePro #> 158    Last CAMERA 1      Syncerus caffer     DSCF0297.JPG      1 GardePro #> 159    Last CAMERA 1      Syncerus caffer     DSCF0298.JPG      1 GardePro #> 160    Last CAMERA 1      Syncerus caffer     DSCF0299.JPG      1 GardePro #> 161    Last CAMERA 1      Syncerus caffer     DSCF0301.JPG      2 GardePro #> 162    Last CAMERA 1      Syncerus caffer     DSCF0302.JPG      2 GardePro #> 163    Last CAMERA 1      Syncerus caffer     DSCF0303.JPG      2 GardePro #> 164    Last CAMERA 1   Mellivora capensis     DSCF0305.JPG      1 GardePro #> 165    Last CAMERA 1   Mellivora capensis     DSCF0306.JPG      1 GardePro #> 166    Last CAMERA 1   Mellivora capensis     DSCF0307.JPG      1 GardePro #> 167    Last CAMERA 1   Erythrocebus patas     DSCF0309.JPG      1 GardePro #> 168    Last CAMERA 1   Erythrocebus patas     DSCF0310.JPG      1 GardePro #> 169    Last CAMERA 1   Erythrocebus patas     DSCF0311.JPG      1 GardePro #> 170    Last CAMERA 1   Erythrocebus patas     DSCF0313.JPG      1 GardePro #> 171    Last CAMERA 1   Erythrocebus patas     DSCF0314.JPG      1 GardePro #> 172    Last CAMERA 1   Erythrocebus patas     DSCF0315.JPG      1 GardePro #> 173    Last CAMERA 1   Erythrocebus patas     DSCF0321.JPG      1 GardePro #> 174    Last CAMERA 1   Erythrocebus patas     DSCF0322.JPG      1 GardePro #> 175    Last CAMERA 1   Erythrocebus patas     DSCF0323.JPG      1 GardePro #> 176    Last CAMERA 1   Erythrocebus patas     DSCF0325.JPG      2 GardePro #> 177    Last CAMERA 1   Erythrocebus patas     DSCF0329.JPG      1 GardePro #> 178    Last CAMERA 1   Erythrocebus patas     DSCF0330.JPG      1 GardePro #> 179    Last CAMERA 1   Erythrocebus patas     DSCF0331.JPG      1 GardePro #> 180    Last CAMERA 1   Erythrocebus patas     DSCF0333.JPG      1 GardePro #> 181    Last CAMERA 1   Erythrocebus patas     DSCF0335.JPG      1 GardePro #> 182    Last CAMERA 1   Erythrocebus patas     DSCF0341.JPG      1 GardePro #> 183    Last CAMERA 1   Erythrocebus patas     DSCF0342.JPG      1 GardePro #> 184    Last CAMERA 1   Erythrocebus patas     DSCF0345.JPG      1 GardePro #> 185    Last CAMERA 1   Erythrocebus patas     DSCF0346.JPG      1 GardePro #> 186    Last CAMERA 1   Erythrocebus patas     DSCF0349.JPG      1 GardePro #> 187    Last CAMERA 1        Canis adustus     DSCF0353.JPG      1 GardePro #> 188    Last CAMERA 1        Canis adustus     DSCF0354.JPG      1 GardePro #> 189    Last CAMERA 1        Canis adustus     DSCF0355.JPG      1 GardePro #> 190    Last CAMERA 1        Canis adustus     DSCF0357.JPG      1 GardePro #> 191    Last CAMERA 1        Canis adustus     DSCF0358.JPG      1 GardePro #> 192    Last CAMERA 1        Canis adustus     DSCF0359.JPG      1 GardePro #> 193    Last CAMERA 1        Canis adustus     DSCF0013.JPG      1 GardePro #> 194    Last CAMERA 1        Canis adustus     DSCF0014.JPG      1 GardePro #> 195    Last CAMERA 1        Canis adustus     DSCF0015.JPG      1 GardePro #> 196    Last CAMERA 1      Syncerus caffer     DSCF0017.JPG      1 GardePro #> 197    Last CAMERA 1      Syncerus caffer     DSCF0018.JPG      1 GardePro #> 198    Last CAMERA 1      Syncerus caffer     DSCF0019.JPG      1 GardePro #> 199    Last CAMERA 1   Erythrocebus patas     DSCF0025.JPG      1 GardePro #> 200    Last CAMERA 1   Erythrocebus patas     DSCF0026.JPG      1 GardePro #> 201    Last CAMERA 1   Erythrocebus patas     DSCF0027.JPG      1 GardePro #> 202    Last CAMERA 1   Erythrocebus patas     DSCF0033.JPG      1 GardePro #> 203    Last CAMERA 1   Erythrocebus patas     DSCF0037.JPG      2 GardePro #> 204    Last CAMERA 1   Erythrocebus patas     DSCF0045.JPG      1 GardePro #> 205    Last CAMERA 1   Erythrocebus patas     DSCF0046.JPG      1 GardePro #> 206    Last CAMERA 1   Erythrocebus patas     DSCF0049.JPG      1 GardePro #> 207    Last CAMERA 1 Tragelaphus scriptus     DSCF0053.JPG      1 GardePro #> 208    Last CAMERA 1 Tragelaphus scriptus     DSCF0054.JPG      1 GardePro #> 209    Last CAMERA 1 Tragelaphus scriptus     DSCF0055.JPG      1 GardePro #> 210    Last CAMERA 1      Syncerus caffer     DSCF0057.JPG      1 GardePro #> 211    Last CAMERA 1      Syncerus caffer     DSCF0058.JPG      1 GardePro #> 212    Last CAMERA 1      Syncerus caffer     DSCF0059.JPG      1 GardePro #> 213    Last CAMERA 1      Syncerus caffer     DSCF0061.JPG      2 GardePro #> 214    Last CAMERA 1      Syncerus caffer     DSCF0062.JPG      3 GardePro #> 215    Last CAMERA 1      Syncerus caffer     DSCF0063.JPG      3 GardePro #> 216    Last CAMERA 1      Syncerus caffer     DSCF0065.JPG      4 GardePro #> 217    Last CAMERA 1      Syncerus caffer     DSCF0066.JPG      3 GardePro #> 218    Last CAMERA 1      Syncerus caffer     DSCF0067.JPG      3 GardePro #> 219    Last CAMERA 1      Syncerus caffer     DSCF0069.JPG      1 GardePro #> 220    Last CAMERA 1      Syncerus caffer     DSCF0070.JPG      1 GardePro #> 221    Last CAMERA 1      Syncerus caffer     DSCF0071.JPG      1 GardePro #> 222    Last CAMERA 1      Syncerus caffer     DSCF0073.JPG      2 GardePro #> 223    Last CAMERA 1      Syncerus caffer     DSCF0074.JPG      2 GardePro #> 224    Last CAMERA 1      Syncerus caffer     DSCF0075.JPG      2 GardePro #> 225    Last CAMERA 1      Syncerus caffer     DSCF0077.JPG      1 GardePro #> 226    Last CAMERA 1      Syncerus caffer     DSCF0078.JPG      1 GardePro #> 227    Last CAMERA 1      Syncerus caffer     DSCF0079.JPG      1 GardePro #> 228    Last CAMERA 1      Syncerus caffer     DSCF0081.JPG      1 GardePro #> 229    Last CAMERA 1      Syncerus caffer     DSCF0082.JPG      1 GardePro #> 230    Last CAMERA 1      Syncerus caffer     DSCF0083.JPG      1 GardePro #> 231    Last CAMERA 1      Syncerus caffer     DSCF0085.JPG      1 GardePro #> 232    Last CAMERA 1      Syncerus caffer     DSCF0086.JPG      1 GardePro #> 233    Last CAMERA 1      Syncerus caffer     DSCF0087.JPG      1 GardePro #> 234    Last CAMERA 1      Syncerus caffer     DSCF0089.JPG      1 GardePro #> 235    Last CAMERA 1      Syncerus caffer     DSCF0090.JPG      1 GardePro #> 236    Last CAMERA 1      Syncerus caffer     DSCF0091.JPG      1 GardePro #> 237    Last CAMERA 1        Canis adustus     DSCF0093.JPG      1 GardePro #> 238    Last CAMERA 1        Canis adustus     DSCF0094.JPG      1 GardePro #> 239    Last CAMERA 1        Canis adustus     DSCF0095.JPG      1 GardePro #> 240    Last CAMERA 1      Syncerus caffer     DSCF0109.JPG      1 GardePro #> 241    Last CAMERA 1      Syncerus caffer     DSCF0110.JPG      1 GardePro #> 242    Last CAMERA 1      Syncerus caffer     DSCF0111.JPG      1 GardePro #> 243    Last CAMERA 1      Syncerus caffer     DSCF0113.JPG      1 GardePro #> 244    Last CAMERA 1      Syncerus caffer     DSCF0114.JPG      1 GardePro #> 245    Last CAMERA 1      Syncerus caffer     DSCF0115.JPG      1 GardePro #> 246    Last CAMERA 1   Erythrocebus patas     DSCF0121.JPG      1 GardePro #> 247    Last CAMERA 1   Erythrocebus patas     DSCF0122.JPG      1 GardePro #> 248    Last CAMERA 1   Erythrocebus patas     DSCF0123.JPG      1 GardePro #> 249    Last CAMERA 1 Tragelaphus scriptus     DSCF0125.JPG      1 GardePro #> 250    Last CAMERA 1 Tragelaphus scriptus     DSCF0126.JPG      1 GardePro #> 251    Last CAMERA 1 Tragelaphus scriptus     DSCF0127.JPG      1 GardePro #> 252    Last CAMERA 1   Erythrocebus patas     DSCF0129.JPG      1 GardePro #> 253    Last CAMERA 1   Erythrocebus patas     DSCF0130.JPG      1 GardePro #> 254    Last CAMERA 1   Erythrocebus patas     DSCF0131.JPG      1 GardePro #> 255    Last CAMERA 1   Erythrocebus patas     DSCF0133.JPG      1 GardePro #> 256    Last CAMERA 1        Canis adustus     DSCF0005.JPG      1 GardePro #> 257    Last CAMERA 1        Canis adustus     DSCF0006.JPG      1 GardePro #> 258    Last CAMERA 1        Canis adustus     DSCF0007.JPG      1 GardePro #> 259    Last CAMERA 1        Canis adustus     DSCF0021.JPG      1 GardePro #> 260    Last CAMERA 1        Canis adustus     DSCF0022.JPG      1 GardePro #> 261    Last CAMERA 1        Canis adustus     DSCF0023.JPG      1 GardePro #> 262    Last CAMERA 1        Canis adustus     DSCF0025.JPG      1 GardePro #> 263    Last CAMERA 1        Canis adustus     DSCF0026.JPG      1 GardePro #> 264    Last CAMERA 1        Canis adustus     DSCF0027.JPG      1 GardePro #> 265    Last CAMERA 2 Chlorocebus aethiops     DSCF0015.JPG      1 GardePro #> 266    Last CAMERA 2   Erythrocebus patas     DSCF0001.JPG      1 GardePro #> 267    Last CAMERA 2 Tragelaphus scriptus     DSCF0005.JPG      1 GardePro #> 268    Last CAMERA 2 Tragelaphus scriptus     DSCF0006.JPG      1 GardePro #> 269    Last CAMERA 2 Tragelaphus scriptus     DSCF0007.JPG      1 GardePro #> 270    Last CAMERA 2 Tragelaphus scriptus     DSCF0009.JPG      1 GardePro #> 271    Last CAMERA 2 Tragelaphus scriptus     DSCF0010.JPG      1 GardePro #> 272    Last CAMERA 2 Tragelaphus scriptus     DSCF0011.JPG      1 GardePro #> 273    Last CAMERA 2 Tragelaphus scriptus     DSCF0013.JPG      1 GardePro #> 274    Last CAMERA 2 Tragelaphus scriptus     DSCF0014.JPG      1 GardePro #> 275    Last CAMERA 2 Tragelaphus scriptus     DSCF0015.JPG      1 GardePro #> 276    Last CAMERA 2 Tragelaphus scriptus     DSCF0017.JPG      1 GardePro #> 277    Last CAMERA 2 Tragelaphus scriptus     DSCF0018.JPG      1 GardePro #> 278    Last CAMERA 2 Tragelaphus scriptus     DSCF0019.JPG      1 GardePro #>     Model      FOV   dates    times FocalLength      diel           datetimes #> 1     A3S 47.40533 3/24/24  8:03:07         6.4 0.1576157  2024-03-24 8:03:07 #> 2     A3S 47.40533 3/24/24  8:03:07         6.4 0.1576157  2024-03-24 8:03:07 #> 3     A3S 47.40533 3/24/24  8:03:08         6.4 0.1576157  2024-03-24 8:03:08 #> 4     A3S 47.40533 3/24/24 20:19:35         6.4 0.1576157 2024-03-24 20:19:35 #> 5     A3S 47.40533 3/24/24 20:19:35         6.4 0.1576157 2024-03-24 20:19:35 #> 6     A3S 47.40533 3/24/24 20:19:35         6.4 0.1576157 2024-03-24 20:19:35 #> 7     A3S 47.40533 3/24/24 20:20:02         6.4 0.1576157 2024-03-24 20:20:02 #> 8     A3S 47.40533 3/24/24 20:20:02         6.4 0.1576157 2024-03-24 20:20:02 #> 9     A3S 47.40533 3/24/24 20:20:03         6.4 0.1576157 2024-03-24 20:20:03 #> 10    A3S 47.40533 3/24/24 20:20:24         6.4 0.1576157 2024-03-24 20:20:24 #> 11    A3S 47.40533 3/24/24 20:20:24         6.4 0.1576157 2024-03-24 20:20:24 #> 12    A3S 47.40533 3/24/24 20:20:24         6.4 0.1576157 2024-03-24 20:20:24 #> 13    A3S 47.40533 3/24/24 22:00:35         6.4 0.1576157 2024-03-24 22:00:35 #> 14    A3S 47.40533 3/24/24 22:00:35         6.4 0.1576157 2024-03-24 22:00:35 #> 15    A3S 47.40533 3/24/24 22:00:35         6.4 0.1576157 2024-03-24 22:00:35 #> 16    A3S 47.40533 3/25/24  3:18:58         6.4 0.1576157  2024-03-25 3:18:58 #> 17    A3S 47.40533 3/25/24  3:18:59         6.4 0.1576157  2024-03-25 3:18:59 #> 18    A3S 47.40533 3/25/24  3:18:59         6.4 0.1576157  2024-03-25 3:18:59 #> 19    A3S 47.40533 3/25/24  3:19:19         6.4 0.1576157  2024-03-25 3:19:19 #> 20    A3S 47.40533 3/25/24  3:19:20         6.4 0.1576157  2024-03-25 3:19:20 #> 21    A3S 47.40533 3/25/24  3:19:20         6.4 0.1576157  2024-03-25 3:19:20 #> 22    A3S 47.40533 3/25/24  3:19:38         6.4 0.1576157  2024-03-25 3:19:38 #> 23    A3S 47.40533 3/25/24  3:19:39         6.4 0.1576157  2024-03-25 3:19:39 #> 24    A3S 47.40533 3/25/24  3:19:39         6.4 0.1576157  2024-03-25 3:19:39 #> 25    A3S 47.40533 3/25/24  3:19:56         6.4 0.1576157  2024-03-25 3:19:56 #> 26    A3S 47.40533 3/25/24  3:19:56         6.4 0.1576157  2024-03-25 3:19:56 #> 27    A3S 47.40533 3/25/24  3:19:56         6.4 0.1576157  2024-03-25 3:19:56 #> 28    A3S 47.40533 3/25/24 10:02:35         6.4 0.1576157 2024-03-25 10:02:35 #> 29    A3S 47.40533 3/25/24 10:02:35         6.4 0.1576157 2024-03-25 10:02:35 #> 30    A3S 47.40533 3/25/24 10:02:36         6.4 0.1576157 2024-03-25 10:02:36 #> 31    A3S 47.40533 3/25/24 10:33:20         6.4 0.1576157 2024-03-25 10:33:20 #> 32    A3S 47.40533 3/25/24 10:33:20         6.4 0.1576157 2024-03-25 10:33:20 #> 33    A3S 47.40533 3/25/24 10:33:21         6.4 0.1576157 2024-03-25 10:33:21 #> 34    A3S 47.40533 3/27/24  0:30:33         6.4 0.1576157  2024-03-27 0:30:33 #> 35    A3S 47.40533 3/27/24  0:30:33         6.4 0.1576157  2024-03-27 0:30:33 #> 36    A3S 47.40533 3/27/24  0:30:33         6.4 0.1576157  2024-03-27 0:30:33 #> 37    A3S 47.40533 3/27/24  0:30:47         6.4 0.1576157  2024-03-27 0:30:47 #> 38    A3S 47.40533 3/27/24  0:30:47         6.4 0.1576157  2024-03-27 0:30:47 #> 39    A3S 47.40533 3/27/24  0:30:47         6.4 0.1576157  2024-03-27 0:30:47 #> 40    A3S 47.40533 3/27/24  0:31:02         6.4 0.1576157  2024-03-27 0:31:02 #> 41    A3S 47.40533 3/27/24  0:31:02         6.4 0.1576157  2024-03-27 0:31:02 #> 42    A3S 47.40533 3/27/24  0:31:02         6.4 0.1576157  2024-03-27 0:31:02 #> 43    A3S 47.40533 3/27/24  0:33:51         6.4 0.1576157  2024-03-27 0:33:51 #> 44    A3S 47.40533 3/27/24  0:33:51         6.4 0.1576157  2024-03-27 0:33:51 #> 45    A3S 47.40533 3/27/24  0:33:51         6.4 0.1576157  2024-03-27 0:33:51 #> 46    A3S 47.40533 3/27/24  1:21:58         6.4 0.1576157  2024-03-27 1:21:58 #> 47    A3S 47.40533 3/27/24  1:21:58         6.4 0.1576157  2024-03-27 1:21:58 #> 48    A3S 47.40533 3/27/24  1:21:58         6.4 0.1576157  2024-03-27 1:21:58 #> 49    A3S 47.40533 3/27/24  1:27:02         6.4 0.1576157  2024-03-27 1:27:02 #> 50    A3S 47.40533 3/27/24  1:27:02         6.4 0.1576157  2024-03-27 1:27:02 #> 51    A3S 47.40533 3/27/24  1:27:02         6.4 0.1576157  2024-03-27 1:27:02 #> 52    A3S 47.40533 3/27/24  5:02:27         6.4 0.1576157  2024-03-27 5:02:27 #> 53    A3S 47.40533 3/27/24  5:02:27         6.4 0.1576157  2024-03-27 5:02:27 #> 54    A3S 47.40533 3/27/24  5:02:27         6.4 0.1576157  2024-03-27 5:02:27 #> 55    A3S 47.40533 3/27/24 17:17:47         6.4 0.1576157 2024-03-27 17:17:47 #> 56    A3S 47.40533 3/27/24 17:17:47         6.4 0.1576157 2024-03-27 17:17:47 #> 57    A3S 47.40533 3/27/24 17:17:48         6.4 0.1576157 2024-03-27 17:17:48 #> 58    A3S 47.40533 3/27/24 22:24:47         6.4 0.1576157 2024-03-27 22:24:47 #> 59    A3S 47.40533 3/27/24 22:24:47         6.4 0.1576157 2024-03-27 22:24:47 #> 60    A3S 47.40533 3/27/24 22:24:47         6.4 0.1576157 2024-03-27 22:24:47 #> 61    A3S 47.40533 3/28/24  0:09:05         6.4 0.1576157  2024-03-28 0:09:05 #> 62    A3S 47.40533 3/28/24  0:09:05         6.4 0.1576157  2024-03-28 0:09:05 #> 63    A3S 47.40533 3/28/24  0:09:05         6.4 0.1576157  2024-03-28 0:09:05 #> 64    A3S 47.40533 3/28/24  4:38:16         6.4 0.1576157  2024-03-28 4:38:16 #> 65    A3S 47.40533 3/28/24  4:38:17         6.4 0.1576157  2024-03-28 4:38:17 #> 66    A3S 47.40533 3/28/24  4:38:17         6.4 0.1576157  2024-03-28 4:38:17 #> 67    A3S 47.40533 3/28/24  4:41:43         6.4 0.1576157  2024-03-28 4:41:43 #> 68    A3S 47.40533 3/28/24  4:41:43         6.4 0.1576157  2024-03-28 4:41:43 #> 69    A3S 47.40533 3/28/24  4:41:43         6.4 0.1576157  2024-03-28 4:41:43 #> 70    A3S 47.40533 3/28/24  4:42:15         6.4 0.1576157  2024-03-28 4:42:15 #> 71    A3S 47.40533 3/28/24  4:42:16         6.4 0.1576157  2024-03-28 4:42:16 #> 72    A3S 47.40533 3/28/24  4:42:16         6.4 0.1576157  2024-03-28 4:42:16 #> 73    A3S 47.40533 3/28/24  4:42:30         6.4 0.1576157  2024-03-28 4:42:30 #> 74    A3S 47.40533 3/28/24  4:42:31         6.4 0.1576157  2024-03-28 4:42:31 #> 75    A3S 47.40533 3/28/24  4:42:31         6.4 0.1576157  2024-03-28 4:42:31 #> 76    A3S 47.40533 3/28/24  4:42:46         6.4 0.1576157  2024-03-28 4:42:46 #> 77    A3S 47.40533 3/28/24  4:42:46         6.4 0.1576157  2024-03-28 4:42:46 #> 78    A3S 47.40533 3/28/24  4:42:46         6.4 0.1576157  2024-03-28 4:42:46 #> 79    A3S 47.40533 3/28/24  4:43:00         6.4 0.1576157  2024-03-28 4:43:00 #> 80    A3S 47.40533 3/28/24  4:43:00         6.4 0.1576157  2024-03-28 4:43:00 #> 81    A3S 47.40533 3/28/24  4:43:00         6.4 0.1576157  2024-03-28 4:43:00 #> 82    A3S 47.40533 3/28/24  4:43:14         6.4 0.1576157  2024-03-28 4:43:14 #> 83    A3S 47.40533 3/28/24  4:43:14         6.4 0.1576157  2024-03-28 4:43:14 #> 84    A3S 47.40533 3/28/24  4:43:14         6.4 0.1576157  2024-03-28 4:43:14 #> 85    A3S 47.40533 3/28/24 16:49:43         6.4 0.1576157 2024-03-28 16:49:43 #> 86    A3S 47.40533 3/28/24 16:49:43         6.4 0.1576157 2024-03-28 16:49:43 #> 87    A3S 47.40533 3/28/24 16:49:44         6.4 0.1576157 2024-03-28 16:49:44 #> 88    A3S 47.40533 3/29/24  1:04:54         6.4 0.1576157  2024-03-29 1:04:54 #> 89    A3S 47.40533 3/29/24  1:04:54         6.4 0.1576157  2024-03-29 1:04:54 #> 90    A3S 47.40533 3/29/24  1:04:54         6.4 0.1576157  2024-03-29 1:04:54 #> 91    A3S 47.40533 3/29/24  1:08:57         6.4 0.1576157  2024-03-29 1:08:57 #> 92    A3S 47.40533 3/29/24  1:08:57         6.4 0.1576157  2024-03-29 1:08:57 #> 93    A3S 47.40533 3/29/24  1:08:58         6.4 0.1576157  2024-03-29 1:08:58 #> 94    A3S 47.40533 3/29/24 11:25:41         6.4 0.1576157 2024-03-29 11:25:41 #> 95    A3S 47.40533 3/29/24 11:34:17         6.4 0.1576157 2024-03-29 11:34:17 #> 96    A3S 47.40533 3/29/24 11:34:17         6.4 0.1576157 2024-03-29 11:34:17 #> 97    A3S 47.40533 3/29/24 11:40:06         6.4 0.1576157 2024-03-29 11:40:06 #> 98    A3S 47.40533 3/29/24 11:40:07         6.4 0.1576157 2024-03-29 11:40:07 #> 99    A3S 47.40533 3/29/24 11:55:44         6.4 0.1576157 2024-03-29 11:55:44 #> 100   A3S 47.40533 3/29/24 11:55:45         6.4 0.1576157 2024-03-29 11:55:45 #> 101   A3S 47.40533 3/29/24 11:55:45         6.4 0.1576157 2024-03-29 11:55:45 #> 102   A3S 47.40533 3/29/24 12:00:37         6.4 0.1576157 2024-03-29 12:00:37 #> 103   A3S 47.40533 3/29/24 13:53:40         6.4 0.1576157 2024-03-29 13:53:40 #> 104   A3S 47.40533 3/29/24 13:53:40         6.4 0.1576157 2024-03-29 13:53:40 #> 105   A3S 47.40533 3/29/24 13:53:58         6.4 0.1576157 2024-03-29 13:53:58 #> 106   A3S 47.40533 3/29/24 13:56:54         6.4 0.1576157 2024-03-29 13:56:54 #> 107   A3S 47.40533 3/30/24 17:05:53         6.4 0.1576157 2024-03-30 17:05:53 #> 108   A3S 47.40533 3/30/24 17:05:53         6.4 0.1576157 2024-03-30 17:05:53 #> 109   A3S 47.40533 3/30/24 17:05:54         6.4 0.1576157 2024-03-30 17:05:54 #> 110   A3S 47.40533 3/30/24 17:12:20         6.4 0.1576157 2024-03-30 17:12:20 #> 111   A3S 47.40533 3/30/24 17:12:20         6.4 0.1576157 2024-03-30 17:12:20 #> 112   A3S 47.40533 3/30/24 17:12:21         6.4 0.1576157 2024-03-30 17:12:21 #> 113   A3S 47.40533 3/31/24 15:00:28         6.4 0.1576157 2024-03-31 15:00:28 #> 114   A3S 47.40533 3/31/24 15:00:28         6.4 0.1576157 2024-03-31 15:00:28 #> 115   A3S 47.40533 3/31/24 15:00:29         6.4 0.1576157 2024-03-31 15:00:29 #> 116   A3S 47.40533 3/31/24 15:01:43         6.4 0.1576157 2024-03-31 15:01:43 #> 117   A3S 47.40533 3/31/24 15:05:12         6.4 0.1576157 2024-03-31 15:05:12 #> 118   A3S 47.40533 3/31/24 15:05:12         6.4 0.1576157 2024-03-31 15:05:12 #> 119   A3S 47.40533 3/31/24 15:05:28         6.4 0.1576157 2024-03-31 15:05:28 #> 120   A3S 47.40533 3/31/24 15:08:53         6.4 0.1576157 2024-03-31 15:08:53 #> 121   A3S 47.40533 3/31/24 15:10:29         6.4 0.1576157 2024-03-31 15:10:29 #> 122   A3S 47.40533 3/31/24 15:38:37         6.4 0.1576157 2024-03-31 15:38:37 #> 123   A3S 47.40533 3/31/24 15:52:34         6.4 0.1576157 2024-03-31 15:52:34 #> 124   A3S 47.40533 3/31/24 15:52:35         6.4 0.1576157 2024-03-31 15:52:35 #> 125   A3S 47.40533 3/31/24 15:52:35         6.4 0.1576157 2024-03-31 15:52:35 #> 126   A3S 47.40533 3/31/24 15:57:48         6.4 0.1576157 2024-03-31 15:57:48 #> 127   A3S 47.40533 3/31/24 16:03:15         6.4 0.1576157 2024-03-31 16:03:15 #> 128   A3S 47.40533 3/31/24 16:03:16         6.4 0.1576157 2024-03-31 16:03:16 #> 129   A3S 47.40533 3/31/24 16:05:07         6.4 0.1576157 2024-03-31 16:05:07 #> 130   A3S 47.40533 3/31/24 16:05:23         6.4 0.1576157 2024-03-31 16:05:23 #> 131   A3S 47.40533 3/31/24 16:05:23         6.4 0.1576157 2024-03-31 16:05:23 #> 132   A3S 47.40533 3/31/24 16:05:24         6.4 0.1576157 2024-03-31 16:05:24 #> 133   A3S 47.40533 3/31/24 16:10:56         6.4 0.1576157 2024-03-31 16:10:56 #> 134   A3S 47.40533 3/31/24 16:11:19         6.4 0.1576157 2024-03-31 16:11:19 #> 135   A3S 47.40533 3/31/24 16:21:11         6.4 0.1576157 2024-03-31 16:21:11 #> 136   A3S 47.40533 3/31/24 16:21:11         6.4 0.1576157 2024-03-31 16:21:11 #> 137   A3S 47.40533  4/3/24 14:42:38         6.4 0.1576157 2024-04-03 14:42:38 #> 138   A3S 47.40533  4/3/24 14:42:38         6.4 0.1576157 2024-04-03 14:42:38 #> 139   A3S 47.40533  4/3/24 14:42:39         6.4 0.1576157 2024-04-03 14:42:39 #> 140   A3S 47.40533  4/3/24 14:43:18         6.4 0.1576157 2024-04-03 14:43:18 #> 141   A3S 47.40533  4/3/24 14:43:18         6.4 0.1576157 2024-04-03 14:43:18 #> 142   A3S 47.40533  4/3/24 14:43:19         6.4 0.1576157 2024-04-03 14:43:19 #> 143   A3S 47.40533  4/3/24 14:43:35         6.4 0.1576157 2024-04-03 14:43:35 #> 144   A3S 47.40533  4/3/24 14:43:35         6.4 0.1576157 2024-04-03 14:43:35 #> 145   A3S 47.40533  4/3/24 14:43:36         6.4 0.1576157 2024-04-03 14:43:36 #> 146   A3S 47.40533  4/3/24 14:44:26         6.4 0.1576157 2024-04-03 14:44:26 #> 147   A3S 47.40533  4/3/24 14:44:26         6.4 0.1576157 2024-04-03 14:44:26 #> 148   A3S 47.40533  4/3/24 14:44:27         6.4 0.1576157 2024-04-03 14:44:27 #> 149   A3S 47.40533  4/3/24 14:45:30         6.4 0.1576157 2024-04-03 14:45:30 #> 150   A3S 47.40533  4/3/24 14:45:30         6.4 0.1576157 2024-04-03 14:45:30 #> 151   A3S 47.40533  4/3/24 14:45:31         6.4 0.1576157 2024-04-03 14:45:31 #> 152   A3S 47.40533  4/3/24 14:49:01         6.4 0.1576157 2024-04-03 14:49:01 #> 153   A3S 47.40533  4/3/24 14:49:01         6.4 0.1576157 2024-04-03 14:49:01 #> 154   A3S 47.40533  4/3/24 14:49:02         6.4 0.1576157 2024-04-03 14:49:02 #> 155   A3S 47.40533  4/3/24 21:15:31         6.4 0.1576157 2024-04-03 21:15:31 #> 156   A3S 47.40533  4/3/24 21:15:31         6.4 0.1576157 2024-04-03 21:15:31 #> 157   A3S 47.40533  4/3/24 21:15:31         6.4 0.1576157 2024-04-03 21:15:31 #> 158   A3S 47.40533  4/3/24 22:00:48         6.4 0.1576157 2024-04-03 22:00:48 #> 159   A3S 47.40533  4/3/24 22:00:48         6.4 0.1576157 2024-04-03 22:00:48 #> 160   A3S 47.40533  4/3/24 22:00:48         6.4 0.1576157 2024-04-03 22:00:48 #> 161   A3S 47.40533  4/3/24 22:02:39         6.4 0.1576157 2024-04-03 22:02:39 #> 162   A3S 47.40533  4/3/24 22:02:39         6.4 0.1576157 2024-04-03 22:02:39 #> 163   A3S 47.40533  4/3/24 22:02:39         6.4 0.1576157 2024-04-03 22:02:39 #> 164   A3S 47.40533  4/4/24  4:46:47         6.4 0.1576157  2024-04-04 4:46:47 #> 165   A3S 47.40533  4/4/24  4:46:47         6.4 0.1576157  2024-04-04 4:46:47 #> 166   A3S 47.40533  4/4/24  4:46:47         6.4 0.1576157  2024-04-04 4:46:47 #> 167   A3S 47.40533  4/4/24 13:48:57         6.4 0.1576157 2024-04-04 13:48:57 #> 168   A3S 47.40533  4/4/24 13:48:57         6.4 0.1576157 2024-04-04 13:48:57 #> 169   A3S 47.40533  4/4/24 13:48:58         6.4 0.1576157 2024-04-04 13:48:58 #> 170   A3S 47.40533  4/4/24 13:49:12         6.4 0.1576157 2024-04-04 13:49:12 #> 171   A3S 47.40533  4/4/24 13:49:12         6.4 0.1576157 2024-04-04 13:49:12 #> 172   A3S 47.40533  4/4/24 13:49:13         6.4 0.1576157 2024-04-04 13:49:13 #> 173   A3S 47.40533  4/4/24 13:51:19         6.4 0.1576157 2024-04-04 13:51:19 #> 174   A3S 47.40533  4/4/24 13:51:19         6.4 0.1576157 2024-04-04 13:51:19 #> 175   A3S 47.40533  4/4/24 13:51:20         6.4 0.1576157 2024-04-04 13:51:20 #> 176   A3S 47.40533  4/4/24 13:51:41         6.4 0.1576157 2024-04-04 13:51:41 #> 177   A3S 47.40533  4/4/24 13:51:57         6.4 0.1576157 2024-04-04 13:51:57 #> 178   A3S 47.40533  4/4/24 13:51:57         6.4 0.1576157 2024-04-04 13:51:57 #> 179   A3S 47.40533  4/4/24 13:51:58         6.4 0.1576157 2024-04-04 13:51:58 #> 180   A3S 47.40533  4/4/24 13:53:01         6.4 0.1576157 2024-04-04 13:53:01 #> 181   A3S 47.40533  4/4/24 13:53:02         6.4 0.1576157 2024-04-04 13:53:02 #> 182   A3S 47.40533  4/4/24 13:56:33         6.4 0.1576157 2024-04-04 13:56:33 #> 183   A3S 47.40533  4/4/24 13:56:33         6.4 0.1576157 2024-04-04 13:56:33 #> 184   A3S 47.40533  4/4/24 13:57:38         6.4 0.1576157 2024-04-04 13:57:38 #> 185   A3S 47.40533  4/4/24 13:57:38         6.4 0.1576157 2024-04-04 13:57:38 #> 186   A3S 47.40533  4/4/24 14:05:00         6.4 0.1576157 2024-04-04 14:05:00 #> 187   A3S 47.40533  4/5/24  4:42:25         6.4 0.1576157  2024-04-05 4:42:25 #> 188   A3S 47.40533  4/5/24  4:42:25         6.4 0.1576157  2024-04-05 4:42:25 #> 189   A3S 47.40533  4/5/24  4:42:25         6.4 0.1576157  2024-04-05 4:42:25 #> 190   A3S 47.40533  4/5/24  4:44:48         6.4 0.1576157  2024-04-05 4:44:48 #> 191   A3S 47.40533  4/5/24  4:44:48         6.4 0.1576157  2024-04-05 4:44:48 #> 192   A3S 47.40533  4/5/24  4:44:48         6.4 0.1576157  2024-04-05 4:44:48 #> 193   A3S 47.40533  4/5/24 23:03:23         6.4 0.1576157 2024-04-05 23:03:23 #> 194   A3S 47.40533  4/5/24 23:03:23         6.4 0.1576157 2024-04-05 23:03:23 #> 195   A3S 47.40533  4/5/24 23:03:24         6.4 0.1576157 2024-04-05 23:03:24 #> 196   A3S 47.40533  4/6/24  4:59:23         6.4 0.1576157  2024-04-06 4:59:23 #> 197   A3S 47.40533  4/6/24  4:59:24         6.4 0.1576157  2024-04-06 4:59:24 #> 198   A3S 47.40533  4/6/24  4:59:24         6.4 0.1576157  2024-04-06 4:59:24 #> 199   A3S 47.40533  4/6/24 14:26:03         6.4 0.1576157 2024-04-06 14:26:03 #> 200   A3S 47.40533  4/6/24 14:26:03         6.4 0.1576157 2024-04-06 14:26:03 #> 201   A3S 47.40533  4/6/24 14:26:03         6.4 0.1576157 2024-04-06 14:26:03 #> 202   A3S 47.40533  4/6/24 14:42:17         6.4 0.1576157 2024-04-06 14:42:17 #> 203   A3S 47.40533  4/6/24 14:43:08         6.4 0.1576157 2024-04-06 14:43:08 #> 204   A3S 47.40533  4/6/24 15:17:56         6.4 0.1576157 2024-04-06 15:17:56 #> 205   A3S 47.40533  4/6/24 15:17:56         6.4 0.1576157 2024-04-06 15:17:56 #> 206   A3S 47.40533  4/6/24 15:19:28         6.4 0.1576157 2024-04-06 15:19:28 #> 207   A3S 47.40533  4/6/24 20:44:44         6.4 0.1576157 2024-04-06 20:44:44 #> 208   A3S 47.40533  4/6/24 20:44:45         6.4 0.1576157 2024-04-06 20:44:45 #> 209   A3S 47.40533  4/6/24 20:44:45         6.4 0.1576157 2024-04-06 20:44:45 #> 210   A3S 47.40533  4/6/24 22:31:57         6.4 0.1576157 2024-04-06 22:31:57 #> 211   A3S 47.40533  4/6/24 22:31:57         6.4 0.1576157 2024-04-06 22:31:57 #> 212   A3S 47.40533  4/6/24 22:31:58         6.4 0.1576157 2024-04-06 22:31:58 #> 213   A3S 47.40533  4/6/24 22:32:38         6.4 0.1576157 2024-04-06 22:32:38 #> 214   A3S 47.40533  4/6/24 22:32:38         6.4 0.1576157 2024-04-06 22:32:38 #> 215   A3S 47.40533  4/6/24 22:32:39         6.4 0.1576157 2024-04-06 22:32:39 #> 216   A3S 47.40533  4/6/24 22:32:54         6.4 0.1576157 2024-04-06 22:32:54 #> 217   A3S 47.40533  4/6/24 22:32:55         6.4 0.1576157 2024-04-06 22:32:55 #> 218   A3S 47.40533  4/6/24 22:32:55         6.4 0.1576157 2024-04-06 22:32:55 #> 219   A3S 47.40533  4/6/24 22:33:08         6.4 0.1576157 2024-04-06 22:33:08 #> 220   A3S 47.40533  4/6/24 22:33:09         6.4 0.1576157 2024-04-06 22:33:09 #> 221   A3S 47.40533  4/6/24 22:33:09         6.4 0.1576157 2024-04-06 22:33:09 #> 222   A3S 47.40533  4/6/24 22:33:46         6.4 0.1576157 2024-04-06 22:33:46 #> 223   A3S 47.40533  4/6/24 22:33:47         6.4 0.1576157 2024-04-06 22:33:47 #> 224   A3S 47.40533  4/6/24 22:33:47         6.4 0.1576157 2024-04-06 22:33:47 #> 225   A3S 47.40533  4/6/24 22:49:33         6.4 0.1576157 2024-04-06 22:49:33 #> 226   A3S 47.40533  4/6/24 22:49:34         6.4 0.1576157 2024-04-06 22:49:34 #> 227   A3S 47.40533  4/6/24 22:49:34         6.4 0.1576157 2024-04-06 22:49:34 #> 228   A3S 47.40533  4/6/24 22:49:48         6.4 0.1576157 2024-04-06 22:49:48 #> 229   A3S 47.40533  4/6/24 22:49:49         6.4 0.1576157 2024-04-06 22:49:49 #> 230   A3S 47.40533  4/6/24 22:49:49         6.4 0.1576157 2024-04-06 22:49:49 #> 231   A3S 47.40533  4/9/24  3:58:24         6.4 0.1576157  2024-04-09 3:58:24 #> 232   A3S 47.40533  4/9/24  3:58:25         6.4 0.1576157  2024-04-09 3:58:25 #> 233   A3S 47.40533  4/9/24  3:58:25         6.4 0.1576157  2024-04-09 3:58:25 #> 234   A3S 47.40533  4/9/24  4:04:06         6.4 0.1576157  2024-04-09 4:04:06 #> 235   A3S 47.40533  4/9/24  4:04:06         6.4 0.1576157  2024-04-09 4:04:06 #> 236   A3S 47.40533  4/9/24  4:04:07         6.4 0.1576157  2024-04-09 4:04:07 #> 237   A3S 47.40533  4/9/24  6:38:03         6.4 0.1576157  2024-04-09 6:38:03 #> 238   A3S 47.40533  4/9/24  6:38:04         6.4 0.1576157  2024-04-09 6:38:04 #> 239   A3S 47.40533  4/9/24  6:38:04         6.4 0.1576157  2024-04-09 6:38:04 #> 240   A3S 47.40533  4/9/24 20:45:55         6.4 0.1576157 2024-04-09 20:45:55 #> 241   A3S 47.40533  4/9/24 20:45:55         6.4 0.1576157 2024-04-09 20:45:55 #> 242   A3S 47.40533  4/9/24 20:45:55         6.4 0.1576157 2024-04-09 20:45:55 #> 243   A3S 47.40533  4/9/24 20:46:09         6.4 0.1576157 2024-04-09 20:46:09 #> 244   A3S 47.40533  4/9/24 20:46:10         6.4 0.1576157 2024-04-09 20:46:10 #> 245   A3S 47.40533  4/9/24 20:46:10         6.4 0.1576157 2024-04-09 20:46:10 #> 246   A3S 47.40533 4/10/24 13:32:03         6.4 0.1576157 2024-04-10 13:32:03 #> 247   A3S 47.40533 4/10/24 13:32:03         6.4 0.1576157 2024-04-10 13:32:03 #> 248   A3S 47.40533 4/10/24 13:32:04         6.4 0.1576157 2024-04-10 13:32:04 #> 249   A3S 47.40533 4/10/24 13:34:27         6.4 0.1576157 2024-04-10 13:34:27 #> 250   A3S 47.40533 4/10/24 13:34:27         6.4 0.1576157 2024-04-10 13:34:27 #> 251   A3S 47.40533 4/10/24 13:34:28         6.4 0.1576157 2024-04-10 13:34:28 #> 252   A3S 47.40533 4/10/24 14:14:19         6.4 0.1576157 2024-04-10 14:14:19 #> 253   A3S 47.40533 4/10/24 14:14:19         6.4 0.1576157 2024-04-10 14:14:19 #> 254   A3S 47.40533 4/10/24 14:14:19         6.4 0.1576157 2024-04-10 14:14:19 #> 255   A3S 47.40533 4/10/24 19:40:40         6.4 0.1576157 2024-04-10 19:40:40 #> 256   A3S 47.40533 4/16/24  6:55:23         6.4 0.1576157  2024-04-16 6:55:23 #> 257   A3S 47.40533 4/16/24  6:55:24         6.4 0.1576157  2024-04-16 6:55:24 #> 258   A3S 47.40533 4/16/24  6:55:24         6.4 0.1576157  2024-04-16 6:55:24 #> 259   A3S 47.40533 4/26/24  1:00:20         6.4 0.1576157  2024-04-26 1:00:20 #> 260   A3S 47.40533 4/26/24  1:00:21         6.4 0.1576157  2024-04-26 1:00:21 #> 261   A3S 47.40533 4/26/24  1:00:21         6.4 0.1576157  2024-04-26 1:00:21 #> 262   A3S 47.40533 4/26/24  1:00:51         6.4 0.1576157  2024-04-26 1:00:51 #> 263   A3S 47.40533 4/26/24  1:00:52         6.4 0.1576157  2024-04-26 1:00:52 #> 264   A3S 47.40533 4/26/24  1:00:52         6.4 0.1576157  2024-04-26 1:00:52 #> 265   A3S 47.40533 3/23/24 12:36:25         6.4 0.1576157 2024-03-23 12:36:25 #> 266   A3S 47.40533 3/30/24 12:53:46         6.4 0.1576157 2024-03-30 12:53:46 #> 267   A3S 47.40533 3/30/24 21:27:12         6.4 0.1576157 2024-03-30 21:27:12 #> 268   A3S 47.40533 3/30/24 21:27:12         6.4 0.1576157 2024-03-30 21:27:12 #> 269   A3S 47.40533 3/30/24 21:27:13         6.4 0.1576157 2024-03-30 21:27:13 #> 270   A3S 47.40533 3/30/24 21:27:51         6.4 0.1576157 2024-03-30 21:27:51 #> 271   A3S 47.40533 3/30/24 21:27:51         6.4 0.1576157 2024-03-30 21:27:51 #> 272   A3S 47.40533 3/30/24 21:27:51         6.4 0.1576157 2024-03-30 21:27:51 #> 273   A3S 47.40533  4/1/24  1:22:37         6.4 0.1576157  2024-04-01 1:22:37 #> 274   A3S 47.40533  4/1/24  1:22:37         6.4 0.1576157  2024-04-01 1:22:37 #> 275   A3S 47.40533  4/1/24  1:22:38         6.4 0.1576157  2024-04-01 1:22:38 #> 276   A3S 47.40533  4/1/24  1:22:52         6.4 0.1576157  2024-04-01 1:22:52 #> 277   A3S 47.40533  4/1/24  1:22:52         6.4 0.1576157  2024-04-01 1:22:52 #> 278   A3S 47.40533  4/1/24  1:22:52         6.4 0.1576157  2024-04-01 1:22:52 #>     deltatime longitude latitude     radian  corrected_datetime #> 1           0    342990  1026413 2.10799413 2025-03-14 08:17:00 #> 2           0    342990  1026413 2.10799413 2025-03-14 08:17:00 #> 3           1    342990  1026413 2.10806685 2025-03-14 08:17:01 #> 4       44187    342990  1026413 5.32143617 2025-03-14 20:33:28 #> 5           0    342990  1026413 5.32143617 2025-03-14 20:33:28 #> 6           0    342990  1026413 5.32143617 2025-03-14 20:33:28 #> 7          27    342990  1026413 5.32339966 2025-03-14 20:33:55 #> 8           0    342990  1026413 5.32339966 2025-03-14 20:33:55 #> 9           1    342990  1026413 5.32347238 2025-03-14 20:33:56 #> 10         21    342990  1026413 5.32499955 2025-03-14 20:34:17 #> 11          0    342990  1026413 5.32499955 2025-03-14 20:34:17 #> 12          0    342990  1026413 5.32499955 2025-03-14 20:34:17 #> 13       6011    342990  1026413 5.76213180 2025-03-14 22:14:28 #> 14          0    342990  1026413 5.76213180 2025-03-14 22:14:28 #> 15          0    342990  1026413 5.76213180 2025-03-14 22:14:28 #> 16      19103    342990  1026413 0.86815586 2025-03-15 03:32:51 #> 17          1    342990  1026413 0.86822858 2025-03-15 03:32:52 #> 18          0    342990  1026413 0.86822858 2025-03-15 03:32:52 #> 19         20    342990  1026413 0.86968302 2025-03-15 03:33:12 #> 20          1    342990  1026413 0.86975574 2025-03-15 03:33:13 #> 21          0    342990  1026413 0.86975574 2025-03-15 03:33:13 #> 22         18    342990  1026413 0.87106474 2025-03-15 03:33:31 #> 23          1    342990  1026413 0.87113746 2025-03-15 03:33:32 #> 24          0    342990  1026413 0.87113746 2025-03-15 03:33:32 #> 25         17    342990  1026413 0.87237374 2025-03-15 03:33:49 #> 26          0    342990  1026413 0.87237374 2025-03-15 03:33:49 #> 27          0    342990  1026413 0.87237374 2025-03-15 03:33:49 #> 28      24159    342990  1026413 2.62926580 2025-03-15 10:16:28 #> 29          0    342990  1026413 2.62926580 2025-03-15 10:16:28 #> 30          1    342990  1026413 2.62933852 2025-03-15 10:16:29 #> 31       1844    342990  1026413 2.76343798 2025-03-15 10:47:13 #> 32          0    342990  1026413 2.76343798 2025-03-15 10:47:13 #> 33          1    342990  1026413 2.76351070 2025-03-15 10:47:14 #> 34     136632    342990  1026413 0.13329952 2025-03-17 00:44:26 #> 35          0    342990  1026413 0.13329952 2025-03-17 00:44:26 #> 36          0    342990  1026413 0.13329952 2025-03-17 00:44:26 #> 37         14    342990  1026413 0.13431763 2025-03-17 00:44:40 #> 38          0    342990  1026413 0.13431763 2025-03-17 00:44:40 #> 39          0    342990  1026413 0.13431763 2025-03-17 00:44:40 #> 40         15    342990  1026413 0.13540846 2025-03-17 00:44:55 #> 41          0    342990  1026413 0.13540846 2025-03-17 00:44:55 #> 42          0    342990  1026413 0.13540846 2025-03-17 00:44:55 #> 43        169    342990  1026413 0.14769849 2025-03-17 00:47:44 #> 44          0    342990  1026413 0.14769849 2025-03-17 00:47:44 #> 45          0    342990  1026413 0.14769849 2025-03-17 00:47:44 #> 46       2887    342990  1026413 0.35764705 2025-03-17 01:35:51 #> 47          0    342990  1026413 0.35764705 2025-03-17 01:35:51 #> 48          0    342990  1026413 0.35764705 2025-03-17 01:35:51 #> 49        304    342990  1026413 0.37975456 2025-03-17 01:40:55 #> 50          0    342990  1026413 0.37975456 2025-03-17 01:40:55 #> 51          0    342990  1026413 0.37975456 2025-03-17 01:40:55 #> 52      12925    342990  1026413 1.31968708 2025-03-17 05:16:20 #> 53          0    342990  1026413 1.31968708 2025-03-17 05:16:20 #> 54          0    342990  1026413 1.31968708 2025-03-17 05:16:20 #> 55      44120    342990  1026413 4.52818402 2025-03-17 17:31:40 #> 56          0    342990  1026413 4.52818402 2025-03-17 17:31:40 #> 57          1    342990  1026413 4.52825674 2025-03-17 17:31:41 #> 58      18419    342990  1026413 5.86772422 2025-03-17 22:38:40 #> 59          0    342990  1026413 5.86772422 2025-03-17 22:38:40 #> 60          0    342990  1026413 5.86772422 2025-03-17 22:38:40 #> 61       6258    342990  1026413 0.03963352 2025-03-18 00:22:58 #> 62          0    342990  1026413 0.03963352 2025-03-18 00:22:58 #> 63          0    342990  1026413 0.03963352 2025-03-18 00:22:58 #> 64      16151    342990  1026413 1.21416738 2025-03-18 04:52:09 #> 65          1    342990  1026413 1.21424011 2025-03-18 04:52:10 #> 66          0    342990  1026413 1.21424011 2025-03-18 04:52:10 #> 67        206    342990  1026413 1.22922085 2025-03-18 04:55:36 #> 68          0    342990  1026413 1.22922085 2025-03-18 04:55:36 #> 69          0    342990  1026413 1.22922085 2025-03-18 04:55:36 #> 70         32    342990  1026413 1.23154795 2025-03-18 04:56:08 #> 71          1    342990  1026413 1.23162068 2025-03-18 04:56:09 #> 72          0    342990  1026413 1.23162068 2025-03-18 04:56:09 #> 73         14    342990  1026413 1.23263878 2025-03-18 04:56:23 #> 74          1    342990  1026413 1.23271151 2025-03-18 04:56:24 #> 75          0    342990  1026413 1.23271151 2025-03-18 04:56:24 #> 76         15    342990  1026413 1.23380234 2025-03-18 04:56:39 #> 77          0    342990  1026413 1.23380234 2025-03-18 04:56:39 #> 78          0    342990  1026413 1.23380234 2025-03-18 04:56:39 #> 79         14    342990  1026413 1.23482045 2025-03-18 04:56:53 #> 80          0    342990  1026413 1.23482045 2025-03-18 04:56:53 #> 81          0    342990  1026413 1.23482045 2025-03-18 04:56:53 #> 82         14    342990  1026413 1.23583855 2025-03-18 04:57:07 #> 83          0    342990  1026413 1.23583855 2025-03-18 04:57:07 #> 84          0    342990  1026413 1.23583855 2025-03-18 04:57:07 #> 85      43589    342990  1026413 4.40572009 2025-03-18 17:03:36 #> 86          0    342990  1026413 4.40572009 2025-03-18 17:03:36 #> 87          1    342990  1026413 4.40579281 2025-03-18 17:03:37 #> 88      29710    342990  1026413 0.28317967 2025-03-19 01:18:47 #> 89          0    342990  1026413 0.28317967 2025-03-19 01:18:47 #> 90          0    342990  1026413 0.28317967 2025-03-19 01:18:47 #> 91        243    342990  1026413 0.30085113 2025-03-19 01:22:50 #> 92          0    342990  1026413 0.30085113 2025-03-19 01:22:50 #> 93          1    342990  1026413 0.30092385 2025-03-19 01:22:51 #> 94      37003    342990  1026413 2.99185795 2025-03-19 11:39:34 #> 95        515    342990  1026413 3.02938253 2025-03-19 11:48:10 #> 96          0    342990  1026413 3.02938253 2025-03-19 11:48:10 #> 97        325    342990  1026413 3.05476252 2025-03-19 11:53:59 #> 98          1    342990  1026413 3.05483525 2025-03-19 11:54:00 #> 99        937    342990  1026413 3.12297581 2025-03-19 12:09:37 #> 100         1    342990  1026413 3.12304853 2025-03-19 12:09:38 #> 101         0    342990  1026413 3.12304853 2025-03-19 12:09:38 #> 102       292    342990  1026413 3.14428337 2025-03-19 12:14:30 #> 103      6782    342990  1026413 3.63755705 2025-03-19 14:07:33 #> 104         0    342990  1026413 3.63755705 2025-03-19 14:07:33 #> 105         1    342990  1026413 3.63886605 2025-03-19 14:07:51 #> 106       176    342990  1026413 3.65166513 2025-03-19 14:10:47 #> 107     97690    342990  1026413 4.47626048 2025-03-20 17:19:46 #> 108         0    342990  1026413 4.47626048 2025-03-20 17:19:46 #> 109         1    342990  1026413 4.47633320 2025-03-20 17:19:47 #> 110       386    342990  1026413 4.50440391 2025-03-20 17:26:13 #> 111         0    342990  1026413 4.50440391 2025-03-20 17:26:13 #> 112         1    342990  1026413 4.50447663 2025-03-20 17:26:14 #> 113     78487    342990  1026413 3.92902703 2025-03-21 15:14:21 #> 114         0    342990  1026413 3.92902703 2025-03-21 15:14:21 #> 115         1    342990  1026413 3.92909976 2025-03-21 15:14:22 #> 116        74    342990  1026413 3.93448119 2025-03-21 15:15:36 #> 117       209    342990  1026413 3.94968010 2025-03-21 15:19:05 #> 118         0    342990  1026413 3.94968010 2025-03-21 15:19:05 #> 119        16    342990  1026413 3.95084365 2025-03-21 15:19:21 #> 120       205    342990  1026413 3.96575167 2025-03-21 15:22:46 #> 121        95    342990  1026413 3.97273299 2025-03-21 15:24:22 #> 122      1687    342990  1026413 4.09548781 2025-03-21 15:52:30 #> 123       836    342990  1026413 4.15635617 2025-03-21 16:06:27 #> 124         1    342990  1026413 4.15642889 2025-03-21 16:06:28 #> 125         0    342990  1026413 4.15642889 2025-03-21 16:06:28 #> 126       192    342990  1026413 4.17919089 2025-03-21 16:11:41 #> 127        49    342990  1026413 4.20297100 2025-03-21 16:17:08 #> 128         1    342990  1026413 4.20304373 2025-03-21 16:17:09 #> 129       111    342990  1026413 4.21111587 2025-03-21 16:19:00 #> 130        15    342990  1026413 4.21227943 2025-03-21 16:19:16 #> 131         0    342990  1026413 4.21227943 2025-03-21 16:19:16 #> 132         1    342990  1026413 4.21235215 2025-03-21 16:19:17 #> 133       270    342990  1026413 4.23649587 2025-03-21 16:24:49 #> 134        23    342990  1026413 4.23816848 2025-03-21 16:25:12 #> 135       591    342990  1026413 4.28121993 2025-03-21 16:35:04 #> 136         0    342990  1026413 4.28121993 2025-03-21 16:35:04 #> 137    253286    342990  1026413 3.85121444 2025-03-24 14:56:31 #> 138         0    342990  1026413 3.85121444 2025-03-24 14:56:31 #> 139         1    342990  1026413 3.85128716 2025-03-24 14:56:32 #> 140        39    342990  1026413 3.85412332 2025-03-24 14:57:11 #> 141         0    342990  1026413 3.85412332 2025-03-24 14:57:11 #> 142         1    342990  1026413 3.85419604 2025-03-24 14:57:12 #> 143        16    342990  1026413 3.85535960 2025-03-24 14:57:28 #> 144         0    342990  1026413 3.85535960 2025-03-24 14:57:28 #> 145         1    342990  1026413 3.85543232 2025-03-24 14:57:29 #> 146        50    342990  1026413 3.85906842 2025-03-24 14:58:19 #> 147         0    342990  1026413 3.85906842 2025-03-24 14:58:19 #> 148         1    342990  1026413 3.85914114 2025-03-24 14:58:20 #> 149        63    342990  1026413 3.86372263 2025-03-24 14:59:23 #> 150         0    342990  1026413 3.86372263 2025-03-24 14:59:23 #> 151         1    342990  1026413 3.86379535 2025-03-24 14:59:24 #> 152       210    342990  1026413 3.87906698 2025-03-24 15:02:54 #> 153         0    342990  1026413 3.87906698 2025-03-24 15:02:54 #> 154         1    342990  1026413 3.87913971 2025-03-24 15:02:55 #> 155     23189    342990  1026413 5.56549137 2025-03-24 21:29:24 #> 156         0    342990  1026413 5.56549137 2025-03-24 21:29:24 #> 157         0    342990  1026413 5.56549137 2025-03-24 21:29:24 #> 158      2717    342990  1026413 5.76307719 2025-03-24 22:14:41 #> 159         0    342990  1026413 5.76307719 2025-03-24 22:14:41 #> 160         0    342990  1026413 5.76307719 2025-03-24 22:14:41 #> 161       111    342990  1026413 5.77114934 2025-03-24 22:16:32 #> 162         0    342990  1026413 5.77114934 2025-03-24 22:16:32 #> 163         0    342990  1026413 5.77114934 2025-03-24 22:16:32 #> 164     24248    342990  1026413 1.25132835 2025-03-25 05:00:40 #> 165         0    342990  1026413 1.25132835 2025-03-25 05:00:40 #> 166         0    342990  1026413 1.25132835 2025-03-25 05:00:40 #> 167     32530    342990  1026413 3.61697671 2025-03-25 14:02:50 #> 168         0    342990  1026413 3.61697671 2025-03-25 14:02:50 #> 169         1    342990  1026413 3.61704943 2025-03-25 14:02:51 #> 170        14    342990  1026413 3.61806754 2025-03-25 14:03:05 #> 171         0    342990  1026413 3.61806754 2025-03-25 14:03:05 #> 172         1    342990  1026413 3.61814026 2025-03-25 14:03:06 #> 173        53    342990  1026413 3.62730324 2025-03-25 14:05:12 #> 174         0    342990  1026413 3.62730324 2025-03-25 14:05:12 #> 175         1    342990  1026413 3.62737596 2025-03-25 14:05:13 #> 176        21    342990  1026413 3.62890313 2025-03-25 14:05:34 #> 177        15    342990  1026413 3.63006668 2025-03-25 14:05:50 #> 178         0    342990  1026413 3.63006668 2025-03-25 14:05:50 #> 179         1    342990  1026413 3.63013940 2025-03-25 14:05:51 #> 180        63    342990  1026413 3.63472089 2025-03-25 14:06:54 #> 181         1    342990  1026413 3.63479361 2025-03-25 14:06:55 #> 182       142    342990  1026413 3.65013796 2025-03-25 14:10:26 #> 183         0    342990  1026413 3.65013796 2025-03-25 14:10:26 #> 184        64    342990  1026413 3.65486490 2025-03-25 14:11:31 #> 185         0    342990  1026413 3.65486490 2025-03-25 14:11:31 #> 186       441    342990  1026413 3.68700804 2025-03-25 14:18:53 #> 187     52645    342990  1026413 1.23227517 2025-03-26 04:56:18 #> 188         0    342990  1026413 1.23227517 2025-03-26 04:56:18 #> 189         0    342990  1026413 1.23227517 2025-03-26 04:56:18 #> 190       143    342990  1026413 1.24267443 2025-03-26 04:58:41 #> 191         0    342990  1026413 1.24267443 2025-03-26 04:58:41 #> 192         0    342990  1026413 1.24267443 2025-03-26 04:58:41 #> 193         0    342990  1026413 6.03614850 2025-03-26 23:17:16 #> 194         0    342990  1026413 6.03614850 2025-03-26 23:17:16 #> 195         0    342990  1026413 6.03622122 2025-03-26 23:17:17 #> 196         0    342990  1026413 1.30630622 2025-03-27 05:13:16 #> 197         0    342990  1026413 1.30637895 2025-03-27 05:13:17 #> 198         0    342990  1026413 1.30637895 2025-03-27 05:13:17 #> 199         0    342990  1026413 3.77885600 2025-03-27 14:39:56 #> 200         0    342990  1026413 3.77885600 2025-03-27 14:39:56 #> 201         0    342990  1026413 3.77885600 2025-03-27 14:39:56 #> 202         0    342990  1026413 3.84968728 2025-03-27 14:56:10 #> 203         0    342990  1026413 3.85339610 2025-03-27 14:57:01 #> 204         0    342990  1026413 4.00523975 2025-03-27 15:31:49 #> 205         0    342990  1026413 4.00523975 2025-03-27 15:31:49 #> 206         0    342990  1026413 4.01193017 2025-03-27 15:33:21 #> 207         0    342990  1026413 5.43117374 2025-03-27 20:58:37 #> 208         0    342990  1026413 5.43124647 2025-03-27 20:58:38 #> 209         0    342990  1026413 5.43124647 2025-03-27 20:58:38 #> 210         0    342990  1026413 5.89899471 2025-03-27 22:45:50 #> 211         0    342990  1026413 5.89899471 2025-03-27 22:45:50 #> 212         0    342990  1026413 5.89906743 2025-03-27 22:45:51 #> 213         0    342990  1026413 5.90197631 2025-03-27 22:46:31 #> 214         0    342990  1026413 5.90197631 2025-03-27 22:46:31 #> 215         0    342990  1026413 5.90204903 2025-03-27 22:46:32 #> 216         0    342990  1026413 5.90313986 2025-03-27 22:46:47 #> 217         0    342990  1026413 5.90321258 2025-03-27 22:46:48 #> 218         0    342990  1026413 5.90321258 2025-03-27 22:46:48 #> 219         0    342990  1026413 5.90415797 2025-03-27 22:47:01 #> 220         0    342990  1026413 5.90423069 2025-03-27 22:47:02 #> 221         0    342990  1026413 5.90423069 2025-03-27 22:47:02 #> 222         0    342990  1026413 5.90692141 2025-03-27 22:47:39 #> 223         0    342990  1026413 5.90699413 2025-03-27 22:47:40 #> 224         0    342990  1026413 5.90699413 2025-03-27 22:47:40 #> 225         0    342990  1026413 5.97578919 2025-03-27 23:03:26 #> 226         0    342990  1026413 5.97586191 2025-03-27 23:03:27 #> 227         0    342990  1026413 5.97586191 2025-03-27 23:03:27 #> 228         0    342990  1026413 5.97688002 2025-03-27 23:03:41 #> 229         0    342990  1026413 5.97695275 2025-03-27 23:03:42 #> 230         0    342990  1026413 5.97695275 2025-03-27 23:03:42 #> 231         0    342990  1026413 1.04021623 2025-03-30 04:12:17 #> 232         0    342990  1026413 1.04028896 2025-03-30 04:12:18 #> 233         0    342990  1026413 1.04028896 2025-03-30 04:12:18 #> 234         0    342990  1026413 1.06508718 2025-03-30 04:17:59 #> 235         0    342990  1026413 1.06508718 2025-03-30 04:17:59 #> 236         0    342990  1026413 1.06515990 2025-03-30 04:18:00 #> 237         0    342990  1026413 1.73682077 2025-03-30 06:51:56 #> 238         0    342990  1026413 1.73689349 2025-03-30 06:51:57 #> 239         0    342990  1026413 1.73689349 2025-03-30 06:51:57 #> 240         0    342990  1026413 5.43633701 2025-03-30 20:59:48 #> 241         0    342990  1026413 5.43633701 2025-03-30 20:59:48 #> 242         0    342990  1026413 5.43633701 2025-03-30 20:59:48 #> 243         0    342990  1026413 5.43735512 2025-03-30 21:00:02 #> 244         0    342990  1026413 5.43742784 2025-03-30 21:00:03 #> 245         0    342990  1026413 5.43742784 2025-03-30 21:00:03 #> 246         0    342990  1026413 3.54323655 2025-03-31 13:45:56 #> 247         0    342990  1026413 3.54323655 2025-03-31 13:45:56 #> 248         0    342990  1026413 3.54330927 2025-03-31 13:45:57 #> 249         0    342990  1026413 3.55370852 2025-03-31 13:48:20 #> 250         0    342990  1026413 3.55370852 2025-03-31 13:48:20 #> 251         0    342990  1026413 3.55378125 2025-03-31 13:48:21 #> 252         0    342990  1026413 3.72765967 2025-03-31 14:28:12 #> 253         0    342990  1026413 3.72765967 2025-03-31 14:28:12 #> 254         0    342990  1026413 3.72765967 2025-03-31 14:28:12 #> 255         0    342990  1026413 5.15163018 2025-03-31 19:54:33 #> 256     20678    342990  1026413 1.81245171 2025-04-06 07:09:16 #> 257         1    342990  1026413 1.81252443 2025-04-06 07:09:17 #> 258         0    342990  1026413 1.81252443 2025-04-06 07:09:17 #> 259    842696    342990  1026413 0.26325383 2025-04-16 01:14:13 #> 260         1    342990  1026413 0.26332655 2025-04-16 01:14:14 #> 261         0    342990  1026413 0.26332655 2025-04-16 01:14:14 #> 262        30    342990  1026413 0.26550821 2025-04-16 01:14:44 #> 263         1    342990  1026413 0.26558093 2025-04-16 01:14:45 #> 264         0    342990  1026413 0.26558093 2025-04-16 01:14:45 #> 265         0     34013  1026436 3.30049034 2023-07-31 15:10:47 #> 266    605841     34013  1026436 3.37619399 2023-08-07 15:28:08 #> 267     30806     34013  1026436 5.61646953 2023-08-08 00:01:34 #> 268         0     34013  1026436 5.61646953 2023-08-08 00:01:34 #> 269         1     34013  1026436 5.61654225 2023-08-08 00:01:35 #> 270        38     34013  1026436 5.61930569 2023-08-08 00:02:13 #> 271         0     34013  1026436 5.61930569 2023-08-08 00:02:13 #> 272         0     34013  1026436 5.61930569 2023-08-08 00:02:13 #> 273    100486     34013  1026436 0.36048321 2023-08-09 03:56:59 #> 274         0     34013  1026436 0.36048321 2023-08-09 03:56:59 #> 275         1     34013  1026436 0.36055593 2023-08-09 03:57:00 #> 276        14     34013  1026436 0.36157404 2023-08-09 03:57:14 #> 277         0     34013  1026436 0.36157404 2023-08-09 03:57:14 #> 278         0     34013  1026436 0.36157404 2023-08-09 03:57:14 #>     correction_applied time_offset_seconds corrector_reference #> 1                    +            30672833 2025-03-14 08:17:00 #> 2                    +            30672833 2025-03-14 08:17:00 #> 3                    +            30672833 2025-03-14 08:17:00 #> 4                    +            30672833 2025-03-14 08:17:00 #> 5                    +            30672833 2025-03-14 08:17:00 #> 6                    +            30672833 2025-03-14 08:17:00 #> 7                    +            30672833 2025-03-14 08:17:00 #> 8                    +            30672833 2025-03-14 08:17:00 #> 9                    +            30672833 2025-03-14 08:17:00 #> 10                   +            30672833 2025-03-14 08:17:00 #> 11                   +            30672833 2025-03-14 08:17:00 #> 12                   +            30672833 2025-03-14 08:17:00 #> 13                   +            30672833 2025-03-14 08:17:00 #> 14                   +            30672833 2025-03-14 08:17:00 #> 15                   +            30672833 2025-03-14 08:17:00 #> 16                   +            30672833 2025-03-14 08:17:00 #> 17                   +            30672833 2025-03-14 08:17:00 #> 18                   +            30672833 2025-03-14 08:17:00 #> 19                   +            30672833 2025-03-14 08:17:00 #> 20                   +            30672833 2025-03-14 08:17:00 #> 21                   +            30672833 2025-03-14 08:17:00 #> 22                   +            30672833 2025-03-14 08:17:00 #> 23                   +            30672833 2025-03-14 08:17:00 #> 24                   +            30672833 2025-03-14 08:17:00 #> 25                   +            30672833 2025-03-14 08:17:00 #> 26                   +            30672833 2025-03-14 08:17:00 #> 27                   +            30672833 2025-03-14 08:17:00 #> 28                   +            30672833 2025-03-14 08:17:00 #> 29                   +            30672833 2025-03-14 08:17:00 #> 30                   +            30672833 2025-03-14 08:17:00 #> 31                   +            30672833 2025-03-14 08:17:00 #> 32                   +            30672833 2025-03-14 08:17:00 #> 33                   +            30672833 2025-03-14 08:17:00 #> 34                   +            30672833 2025-03-14 08:17:00 #> 35                   +            30672833 2025-03-14 08:17:00 #> 36                   +            30672833 2025-03-14 08:17:00 #> 37                   +            30672833 2025-03-14 08:17:00 #> 38                   +            30672833 2025-03-14 08:17:00 #> 39                   +            30672833 2025-03-14 08:17:00 #> 40                   +            30672833 2025-03-14 08:17:00 #> 41                   +            30672833 2025-03-14 08:17:00 #> 42                   +            30672833 2025-03-14 08:17:00 #> 43                   +            30672833 2025-03-14 08:17:00 #> 44                   +            30672833 2025-03-14 08:17:00 #> 45                   +            30672833 2025-03-14 08:17:00 #> 46                   +            30672833 2025-03-14 08:17:00 #> 47                   +            30672833 2025-03-14 08:17:00 #> 48                   +            30672833 2025-03-14 08:17:00 #> 49                   +            30672833 2025-03-14 08:17:00 #> 50                   +            30672833 2025-03-14 08:17:00 #> 51                   +            30672833 2025-03-14 08:17:00 #> 52                   +            30672833 2025-03-14 08:17:00 #> 53                   +            30672833 2025-03-14 08:17:00 #> 54                   +            30672833 2025-03-14 08:17:00 #> 55                   +            30672833 2025-03-14 08:17:00 #> 56                   +            30672833 2025-03-14 08:17:00 #> 57                   +            30672833 2025-03-14 08:17:00 #> 58                   +            30672833 2025-03-14 08:17:00 #> 59                   +            30672833 2025-03-14 08:17:00 #> 60                   +            30672833 2025-03-14 08:17:00 #> 61                   +            30672833 2025-03-14 08:17:00 #> 62                   +            30672833 2025-03-14 08:17:00 #> 63                   +            30672833 2025-03-14 08:17:00 #> 64                   +            30672833 2025-03-14 08:17:00 #> 65                   +            30672833 2025-03-14 08:17:00 #> 66                   +            30672833 2025-03-14 08:17:00 #> 67                   +            30672833 2025-03-14 08:17:00 #> 68                   +            30672833 2025-03-14 08:17:00 #> 69                   +            30672833 2025-03-14 08:17:00 #> 70                   +            30672833 2025-03-14 08:17:00 #> 71                   +            30672833 2025-03-14 08:17:00 #> 72                   +            30672833 2025-03-14 08:17:00 #> 73                   +            30672833 2025-03-14 08:17:00 #> 74                   +            30672833 2025-03-14 08:17:00 #> 75                   +            30672833 2025-03-14 08:17:00 #> 76                   +            30672833 2025-03-14 08:17:00 #> 77                   +            30672833 2025-03-14 08:17:00 #> 78                   +            30672833 2025-03-14 08:17:00 #> 79                   +            30672833 2025-03-14 08:17:00 #> 80                   +            30672833 2025-03-14 08:17:00 #> 81                   +            30672833 2025-03-14 08:17:00 #> 82                   +            30672833 2025-03-14 08:17:00 #> 83                   +            30672833 2025-03-14 08:17:00 #> 84                   +            30672833 2025-03-14 08:17:00 #> 85                   +            30672833 2025-03-14 08:17:00 #> 86                   +            30672833 2025-03-14 08:17:00 #> 87                   +            30672833 2025-03-14 08:17:00 #> 88                   +            30672833 2025-03-14 08:17:00 #> 89                   +            30672833 2025-03-14 08:17:00 #> 90                   +            30672833 2025-03-14 08:17:00 #> 91                   +            30672833 2025-03-14 08:17:00 #> 92                   +            30672833 2025-03-14 08:17:00 #> 93                   +            30672833 2025-03-14 08:17:00 #> 94                   +            30672833 2025-03-14 08:17:00 #> 95                   +            30672833 2025-03-14 08:17:00 #> 96                   +            30672833 2025-03-14 08:17:00 #> 97                   +            30672833 2025-03-14 08:17:00 #> 98                   +            30672833 2025-03-14 08:17:00 #> 99                   +            30672833 2025-03-14 08:17:00 #> 100                  +            30672833 2025-03-14 08:17:00 #> 101                  +            30672833 2025-03-14 08:17:00 #> 102                  +            30672833 2025-03-14 08:17:00 #> 103                  +            30672833 2025-03-14 08:17:00 #> 104                  +            30672833 2025-03-14 08:17:00 #> 105                  +            30672833 2025-03-14 08:17:00 #> 106                  +            30672833 2025-03-14 08:17:00 #> 107                  +            30672833 2025-03-14 08:17:00 #> 108                  +            30672833 2025-03-14 08:17:00 #> 109                  +            30672833 2025-03-14 08:17:00 #> 110                  +            30672833 2025-03-14 08:17:00 #> 111                  +            30672833 2025-03-14 08:17:00 #> 112                  +            30672833 2025-03-14 08:17:00 #> 113                  +            30672833 2025-03-14 08:17:00 #> 114                  +            30672833 2025-03-14 08:17:00 #> 115                  +            30672833 2025-03-14 08:17:00 #> 116                  +            30672833 2025-03-14 08:17:00 #> 117                  +            30672833 2025-03-14 08:17:00 #> 118                  +            30672833 2025-03-14 08:17:00 #> 119                  +            30672833 2025-03-14 08:17:00 #> 120                  +            30672833 2025-03-14 08:17:00 #> 121                  +            30672833 2025-03-14 08:17:00 #> 122                  +            30672833 2025-03-14 08:17:00 #> 123                  +            30672833 2025-03-14 08:17:00 #> 124                  +            30672833 2025-03-14 08:17:00 #> 125                  +            30672833 2025-03-14 08:17:00 #> 126                  +            30672833 2025-03-14 08:17:00 #> 127                  +            30672833 2025-03-14 08:17:00 #> 128                  +            30672833 2025-03-14 08:17:00 #> 129                  +            30672833 2025-03-14 08:17:00 #> 130                  +            30672833 2025-03-14 08:17:00 #> 131                  +            30672833 2025-03-14 08:17:00 #> 132                  +            30672833 2025-03-14 08:17:00 #> 133                  +            30672833 2025-03-14 08:17:00 #> 134                  +            30672833 2025-03-14 08:17:00 #> 135                  +            30672833 2025-03-14 08:17:00 #> 136                  +            30672833 2025-03-14 08:17:00 #> 137                  +            30672833 2025-03-14 08:17:00 #> 138                  +            30672833 2025-03-14 08:17:00 #> 139                  +            30672833 2025-03-14 08:17:00 #> 140                  +            30672833 2025-03-14 08:17:00 #> 141                  +            30672833 2025-03-14 08:17:00 #> 142                  +            30672833 2025-03-14 08:17:00 #> 143                  +            30672833 2025-03-14 08:17:00 #> 144                  +            30672833 2025-03-14 08:17:00 #> 145                  +            30672833 2025-03-14 08:17:00 #> 146                  +            30672833 2025-03-14 08:17:00 #> 147                  +            30672833 2025-03-14 08:17:00 #> 148                  +            30672833 2025-03-14 08:17:00 #> 149                  +            30672833 2025-03-14 08:17:00 #> 150                  +            30672833 2025-03-14 08:17:00 #> 151                  +            30672833 2025-03-14 08:17:00 #> 152                  +            30672833 2025-03-14 08:17:00 #> 153                  +            30672833 2025-03-14 08:17:00 #> 154                  +            30672833 2025-03-14 08:17:00 #> 155                  +            30672833 2025-03-14 08:17:00 #> 156                  +            30672833 2025-03-14 08:17:00 #> 157                  +            30672833 2025-03-14 08:17:00 #> 158                  +            30672833 2025-03-14 08:17:00 #> 159                  +            30672833 2025-03-14 08:17:00 #> 160                  +            30672833 2025-03-14 08:17:00 #> 161                  +            30672833 2025-03-14 08:17:00 #> 162                  +            30672833 2025-03-14 08:17:00 #> 163                  +            30672833 2025-03-14 08:17:00 #> 164                  +            30672833 2025-03-14 08:17:00 #> 165                  +            30672833 2025-03-14 08:17:00 #> 166                  +            30672833 2025-03-14 08:17:00 #> 167                  +            30672833 2025-03-14 08:17:00 #> 168                  +            30672833 2025-03-14 08:17:00 #> 169                  +            30672833 2025-03-14 08:17:00 #> 170                  +            30672833 2025-03-14 08:17:00 #> 171                  +            30672833 2025-03-14 08:17:00 #> 172                  +            30672833 2025-03-14 08:17:00 #> 173                  +            30672833 2025-03-14 08:17:00 #> 174                  +            30672833 2025-03-14 08:17:00 #> 175                  +            30672833 2025-03-14 08:17:00 #> 176                  +            30672833 2025-03-14 08:17:00 #> 177                  +            30672833 2025-03-14 08:17:00 #> 178                  +            30672833 2025-03-14 08:17:00 #> 179                  +            30672833 2025-03-14 08:17:00 #> 180                  +            30672833 2025-03-14 08:17:00 #> 181                  +            30672833 2025-03-14 08:17:00 #> 182                  +            30672833 2025-03-14 08:17:00 #> 183                  +            30672833 2025-03-14 08:17:00 #> 184                  +            30672833 2025-03-14 08:17:00 #> 185                  +            30672833 2025-03-14 08:17:00 #> 186                  +            30672833 2025-03-14 08:17:00 #> 187                  +            30672833 2025-03-14 08:17:00 #> 188                  +            30672833 2025-03-14 08:17:00 #> 189                  +            30672833 2025-03-14 08:17:00 #> 190                  +            30672833 2025-03-14 08:17:00 #> 191                  +            30672833 2025-03-14 08:17:00 #> 192                  +            30672833 2025-03-14 08:17:00 #> 193                  +            30672833 2025-03-14 08:17:00 #> 194                  +            30672833 2025-03-14 08:17:00 #> 195                  +            30672833 2025-03-14 08:17:00 #> 196                  +            30672833 2025-03-14 08:17:00 #> 197                  +            30672833 2025-03-14 08:17:00 #> 198                  +            30672833 2025-03-14 08:17:00 #> 199                  +            30672833 2025-03-14 08:17:00 #> 200                  +            30672833 2025-03-14 08:17:00 #> 201                  +            30672833 2025-03-14 08:17:00 #> 202                  +            30672833 2025-03-14 08:17:00 #> 203                  +            30672833 2025-03-14 08:17:00 #> 204                  +            30672833 2025-03-14 08:17:00 #> 205                  +            30672833 2025-03-14 08:17:00 #> 206                  +            30672833 2025-03-14 08:17:00 #> 207                  +            30672833 2025-03-14 08:17:00 #> 208                  +            30672833 2025-03-14 08:17:00 #> 209                  +            30672833 2025-03-14 08:17:00 #> 210                  +            30672833 2025-03-14 08:17:00 #> 211                  +            30672833 2025-03-14 08:17:00 #> 212                  +            30672833 2025-03-14 08:17:00 #> 213                  +            30672833 2025-03-14 08:17:00 #> 214                  +            30672833 2025-03-14 08:17:00 #> 215                  +            30672833 2025-03-14 08:17:00 #> 216                  +            30672833 2025-03-14 08:17:00 #> 217                  +            30672833 2025-03-14 08:17:00 #> 218                  +            30672833 2025-03-14 08:17:00 #> 219                  +            30672833 2025-03-14 08:17:00 #> 220                  +            30672833 2025-03-14 08:17:00 #> 221                  +            30672833 2025-03-14 08:17:00 #> 222                  +            30672833 2025-03-14 08:17:00 #> 223                  +            30672833 2025-03-14 08:17:00 #> 224                  +            30672833 2025-03-14 08:17:00 #> 225                  +            30672833 2025-03-14 08:17:00 #> 226                  +            30672833 2025-03-14 08:17:00 #> 227                  +            30672833 2025-03-14 08:17:00 #> 228                  +            30672833 2025-03-14 08:17:00 #> 229                  +            30672833 2025-03-14 08:17:00 #> 230                  +            30672833 2025-03-14 08:17:00 #> 231                  +            30672833 2025-03-14 08:17:00 #> 232                  +            30672833 2025-03-14 08:17:00 #> 233                  +            30672833 2025-03-14 08:17:00 #> 234                  +            30672833 2025-03-14 08:17:00 #> 235                  +            30672833 2025-03-14 08:17:00 #> 236                  +            30672833 2025-03-14 08:17:00 #> 237                  +            30672833 2025-03-14 08:17:00 #> 238                  +            30672833 2025-03-14 08:17:00 #> 239                  +            30672833 2025-03-14 08:17:00 #> 240                  +            30672833 2025-03-14 08:17:00 #> 241                  +            30672833 2025-03-14 08:17:00 #> 242                  +            30672833 2025-03-14 08:17:00 #> 243                  +            30672833 2025-03-14 08:17:00 #> 244                  +            30672833 2025-03-14 08:17:00 #> 245                  +            30672833 2025-03-14 08:17:00 #> 246                  +            30672833 2025-03-14 08:17:00 #> 247                  +            30672833 2025-03-14 08:17:00 #> 248                  +            30672833 2025-03-14 08:17:00 #> 249                  +            30672833 2025-03-14 08:17:00 #> 250                  +            30672833 2025-03-14 08:17:00 #> 251                  +            30672833 2025-03-14 08:17:00 #> 252                  +            30672833 2025-03-14 08:17:00 #> 253                  +            30672833 2025-03-14 08:17:00 #> 254                  +            30672833 2025-03-14 08:17:00 #> 255                  +            30672833 2025-03-14 08:17:00 #> 256                  +            30672833 2025-03-14 08:17:00 #> 257                  +            30672833 2025-03-14 08:17:00 #> 258                  +            30672833 2025-03-14 08:17:00 #> 259                  +            30672833 2025-03-14 08:17:00 #> 260                  +            30672833 2025-03-14 08:17:00 #> 261                  +            30672833 2025-03-14 08:17:00 #> 262                  +            30672833 2025-03-14 08:17:00 #> 263                  +            30672833 2025-03-14 08:17:00 #> 264                  +            30672833 2025-03-14 08:17:00 #> 265                  -            20381138 2024-11-14 10:02:03 #> 266                  -            20381138 2024-11-14 10:02:03 #> 267                  -            20381138 2024-11-14 10:02:03 #> 268                  -            20381138 2024-11-14 10:02:03 #> 269                  -            20381138 2024-11-14 10:02:03 #> 270                  -            20381138 2024-11-14 10:02:03 #> 271                  -            20381138 2024-11-14 10:02:03 #> 272                  -            20381138 2024-11-14 10:02:03 #> 273                  -            20381138 2024-11-14 10:02:03 #> 274                  -            20381138 2024-11-14 10:02:03 #> 275                  -            20381138 2024-11-14 10:02:03 #> 276                  -            20381138 2024-11-14 10:02:03 #> 277                  -            20381138 2024-11-14 10:02:03 #> 278                  -            20381138 2024-11-14 10:02:03"},{"path":"https://stangandaho.github.io/maimer/reference/mm_create_hs.html","id":null,"dir":"Reference","previous_headings":"","what":"Create or add hierarchical subject values in image metadata — mm_create_hs","title":"Create or add hierarchical subject values in image metadata — mm_create_hs","text":"Create add hierarchical subject values image metadata","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_create_hs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create or add hierarchical subject values in image metadata — mm_create_hs","text":"","code":"mm_create_hs(path, value = c(), intern = TRUE, quiet = TRUE, ...)"},{"path":"https://stangandaho.github.io/maimer/reference/mm_create_hs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create or add hierarchical subject values in image metadata — mm_create_hs","text":"path character vector specifying full path image file. value named character vector specifying new hierarchical subjects add. value must parent specified name, e.g c(\"Species\" = \"Vulture\"). intern TRUE output returned character vector. quiet Suppress output command . ... additional arguments passed system2()","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_create_hs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create or add hierarchical subject values in image metadata — mm_create_hs","text":"","code":"# Image path image_path <- file.path(system.file(\"img\", package = \"maimer\"), \"large.jpeg\")  # Get Hierarchical Subject from the image - Before use mm_create_hs() mm_get_hs(path = image_path) #==> NULL #> [1] \"Species|Vulture\"  mm_create_hs(path = image_path, value = c(\"Species\" = \"Vulture\")) #> Warning: error in running command #> [1]   # Get Hierarchical Subject from the image - Before use mm_create_hs() mm_get_hs(path = image_path) #==> \"Species|Vulture\" #> [1] \"Species|Vulture\""},{"path":"https://stangandaho.github.io/maimer/reference/mm_describe_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Descriptive statistic on dataset — mm_describe_df","title":"Descriptive statistic on dataset — mm_describe_df","text":"function provides summary dataset, including numeric non-numeric variables. numeric variables, calculates basic descriptive statistics minimum, maximum, median, mean, count non-missing values. Additionally, users can pass custom functions via fn argument compute additional statistics numeric variables. non-numeric variables, provides frequency counts proportions unique value.","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_describe_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Descriptive statistic on dataset — mm_describe_df","text":"","code":"mm_describe_df(data, ..., fn = NULL)"},{"path":"https://stangandaho.github.io/maimer/reference/mm_describe_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Descriptive statistic on dataset — mm_describe_df","text":"data data frame containing dataset summarized. ... (Optional) Column include summary. column specifie, columns data included. fn named list functions apply numeric variables. function must accept x vector numeric values return single value named vector. Additional arguments functions can specified list. example: fn = list('sum' = list(na.rm = TRUE), 'sd').","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_describe_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Descriptive statistic on dataset — mm_describe_df","text":"tibble","code":""},{"path":[]},{"path":"https://stangandaho.github.io/maimer/reference/mm_describe_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Descriptive statistic on dataset — mm_describe_df","text":"","code":"mm_describe_df(data = data.frame(x = c(1:3, NA),                                  y = c(3:4, NA, NA),                                  z = c(\"A\", \"A\", \"B\", \"A\")),                y, x, z,                fn = list('sum' = list(na.rm = TRUE), 'sd' = list(na.rm = TRUE))               ) #> # A tibble: 4 × 12 #>   Variable Group  Prop     N   Min   Max Median  Mean `CI Left` `CI Right`   sum #>   <chr>    <chr> <dbl> <int> <dbl> <dbl>  <dbl> <dbl>     <dbl>      <dbl> <int> #> 1 y        NA       NA     2     3     4    3.5   3.5    -2.85        9.85     7 #> 2 x        NA       NA     3     1     3    2     2      -0.484       4.48     6 #> 3 z        A        75     3    NA    NA   NA    NA      NA          NA       NA #> 4 z        B        25     1    NA    NA   NA    NA      NA          NA       NA #> # ℹ 1 more variable: sd <dbl>"},{"path":"https://stangandaho.github.io/maimer/reference/mm_dissimilarity.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate dissimilarity between communities — mm_dissimilarity","title":"Calculate dissimilarity between communities — mm_dissimilarity","text":"function computes dissimilarity indices useful popular community ecologists. indices use quantitative data, although named corresponding binary index, can calculate binary index using appropriate argument. find favourite index , can see can implemented using designdist. Gower, Bray–Curtis, Jaccard Kulczynski indices good detecting underlying ecological gradients (Faith et al. 1987). Morisita, Horn–Morisita, Binomial, Cao Chao indices able handle different sample sizes (Wolda 1981, Krebs 1999, Anderson & Millar 2004), Mountford (1962) Raup-Crick indices presence–absence data able handle unknown (variable) sample sizes. indices discussed Krebs (1999) Legendre & Legendre (2012), properties compared Wolda (1981) Legendre & De Cáceres (2012). Aitchison (1986) distance equivalent Euclidean distance CLR-transformed samples (\"clr\") deals positive compositional data. Robust Aitchison distance Martino et al. (2019) uses robust CLR (\"rlcr\"), making applicable non-negative data including zeroes (unlike standard Aitchison).","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_dissimilarity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate dissimilarity between communities — mm_dissimilarity","text":"","code":"mm_dissimilarity(   data,   to_community = FALSE,   site_column,   species_column,   size_column = NULL,   method = \"bray\",   binary = FALSE,   diag = FALSE,   upper = FALSE,   na.rm = FALSE,   ... )"},{"path":"https://stangandaho.github.io/maimer/reference/mm_dissimilarity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate dissimilarity between communities — mm_dissimilarity","text":"data data frame matrix containing species abundance data. rows represent sites (samples), columns represent species. data can raw transformed format (to_community = TRUE). to_community logical indicating whether input data transformed community data (site row species column). Default FALSE. site_column name column representing site/sample identifiers (used to_community = TRUE). species_column name column representing species identifiers (used to_community = TRUE). size_column name column representing size abundance counts species site (optional, used to_community = TRUE). method character string indicating distance measure use calculating beta diversity. available methods : \"manhattan\", \"euclidean\", \"canberra\", \"bray\", \"kulczynski\", \"gower\", \"morisita\", \"horn\", \"mountford\", \"jaccard\", \"raup\", \"binomial\", \"chao\", \"altGower\", \"cao\", \"mahalanobis\", \"clark\", \"chisq\", \"chord\", \"hellinger\", \"aitchison\", \"robust.aitchison\". default \"bray\". binary logical indicating whether transform data presence/absence (binary data) calculating dissimilarities. Default FALSE. diag logical indicating whether include diagonal output dissimilarity matrix. Default FALSE (diagonal values omitted). upper logical indicating whether return upper triangular part dissimilarity matrix. Default FALSE. na.rm logical indicating whether remove NA values data calculating dissimilarities. Default FALSE. FALSE, error raised missing values data. ... Additional arguments passed functions, transformation functions data scaling standardization.","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_dissimilarity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate dissimilarity between communities — mm_dissimilarity","text":"distance matrix (class dist) containing pairwise dissimilarities sites. dissimilarities calculated according chosen distance metric, various attributes (e.g., method, size, labels) attached result.","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_dissimilarity.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate dissimilarity between communities — mm_dissimilarity","text":"Jaccard (\"jaccard\"), Mountford (\"mountford\"),   Raup–Crick (\"raup\"), Binomial Chao indices discussed   later section.  function also finds indices presence/   absence data setting binary = TRUE. following overview   gives first quantitative version, \\(x_{ij}\\)   \\(x_{ik}\\) refer quantity species (column) \\(\\)   sites (rows) \\(j\\) \\(k\\). binary versions \\(\\)   \\(B\\) numbers species compared sites, \\(J\\)   number species occur compared sites similarly   designdist (many indices produce identical binary   versions):  Jaccard index computed \\(2B/(1+B)\\), \\(B\\)   Bray–Curtis dissimilarity. Binomial index derived Binomial deviance null hypothesis   two compared communities equal. able   handle variable sample sizes. index fixed upper   limit, can vary among sites shared species.   discussion, see Anderson & Millar (2004). Cao index CYd index (Cao et al. 1997) suggested minimally   biased index high beta diversity variable sampling intensity.   Cao index fixed upper limit, can vary among sites   shared species.  index intended count (integer)   data, undefined zero abundances; replaced   arbitrary value \\(0.1\\) following Cao et al. (1997).  Cao et   al. (1997) used \\(\\log_{10}\\), current function uses   natural logarithms values approximately \\(2.30\\)   times higher 10-based logarithms. Anderson & Thompson (2004)   give alternative formulation Cao index highlight   relationship Binomial index (). Mountford index defined \\(M = 1/\\alpha\\) \\(\\alpha\\)   parameter Fisher's logseries assuming compared   communities samples community   (cf. fisherfit, fisher.alpha). index   \\(M\\) found positive root equation \\(\\exp() +   \\exp(bM) = 1 + \\exp[(+b-j)M]\\), \\(j\\) number species occurring   communities, \\(\\) \\(b\\) number species   separate community (index uses presence–absence   information). Mountford index usually misrepresented   literature: indeed Mountford (1962) suggested approximation   used starting value iterations, proper index   defined root equation . function   vegdist solves \\(M\\) Newton method. Please note   either \\(\\) \\(b\\) equal \\(j\\), one   communities subset , dissimilarity   \\(0\\) meaning non-identical objects may regarded   similar index non-metric. Mountford index   range \\(0 \\dots \\log(2)\\). Raup–Crick dissimilarity (method = \"raup\") probabilistic   index based presence/absence data.  defined \\(1 -   prob(j)\\), based probability observing least \\(j\\)   species shared compared communities.  current function uses   analytic result hypergeometric distribution   (phyper) find probabilities.  probability   (index) dependent number species missing   sites, adding -zero species data removing missing   species data influence index.  probability (  index) may almost zero almost one wide range   parameter values.  index nonmetric: two communities   shared species may dissimilarity slightly one, two   identical communities may dissimilarity slightly zero.   index uses equal occurrence probabilities species, Raup   Crick originally suggested sampling probabilities   proportional species frequencies (Chase et al. 2011). simulation   approach unequal species sampling probabilities implemented   raupcrick function following Chase et al. (2011).    index can also used transposed data give probabilistic   dissimilarity index species co-occurrence (identical Veech   2013). Chao index tries take account number unseen species   pairs, similarly method = \"chao\"   specpool. Function vegdist implements   Jaccard, index defined   \\(1-\\frac{U \\times V}{U + V - U \\times V}\\);   types can defined function chaodist. Chao   equation, \\(U = C_j/N_j + (N_k - 1)/N_k \\times a_1/(2 a_2) \\times   S_j/N_j\\),   \\(V\\) similar except site index   \\(k\\). \\(C_j\\) total number individuals   species site \\(j\\) shared site \\(k\\),   \\(N_j\\) total number individuals site \\(j\\),   \\(a_1\\) (\\(a_2\\)) number species   occurring site \\(j\\) one (two) individuals   site \\(k\\), \\(S_j\\) total number individuals   species present site \\(j\\) occur one   individual site \\(k\\) (Chao et al. 2005). Morisita index can used genuine count data (integers) .   Horn–Morisita variant able handle abundance data. Mahalanobis distances Euclidean distances matrix   columns centred, unit variance, uncorrelated.    index commonly used community data, sometimes   used environmental variables. calculation based   transforming data matrix using Euclidean distances   following Mardia et al. (1979). Mahalanobis transformation   usually fails number columns larger number   rows (sampling units). transformation fails,   distances nearly constant except small numeric noise. Users   must check returned Mahalanobis distances meaningful. Euclidean Manhattan dissimilarities good gradient   separation without proper standardization still included   comparison special needs. Chi-square distances (\"chisq\") Euclidean distances   Chi-square transformed data (see decostand).   internal standardization used correspondence analysis   (cca, decorana). Weighted principal   coordinates analysis distances row sums weights   equal correspondence analysis (see Example   wcmdscale). Chi-square distance intended   non-negative data, typical community data. However, can   calculated long margin sums positive, warning   issued negative data entries. Chord distances (\"chord\") Euclidean distance matrix   rows standardized unit norm (sums squares 1)   using decostand. Geometrically standardization   moves row points surface multidimensional unit sphere,   distances chords across hypersphere. Hellinger distances   (\"hellinger\") related Chord distances, data   standardized unit total (row sums 1) using   decostand, square root transformed.   distances upper limit \\(\\sqrt{2}\\). Bray–Curtis Jaccard indices rank-order similar,   indices become identical rank-order similar   standardizations, especially presence/absence transformation   equalizing site totals decostand. Jaccard index   metric, probably preferred instead default   Bray-Curtis semimetric. Aitchison distance (1986) robust Aitchison distance   (Martino et al. 2019) metrics deal   compositional data. Aitchison distance said   outperform Jensen-Shannon divergence Bray-Curtis dissimilarity,   due better stability subsetting aggregation,   proper distance (Aitchison et al., 2000). naming conventions vary. one adopted traditional   rather truthful priority. function finds either   quantitative binary variants indices name,   correctly may refer one alternatives   instance, Bray   index known also Steinhaus, Czekanowski   Sørensen index.   quantitative version Jaccard probably called   Ružička index.   abbreviation \"horn\" Horn–Morisita index   misleading, since separate Horn index. abbreviation   changed index implemented vegan.","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_dissimilarity.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Calculate dissimilarity between communities — mm_dissimilarity","text":"function alternative dist adding   ecologically meaningful indices.  methods produce similar   types objects can interchanged method accepting   either.  Manhattan Euclidean dissimilarities identical   methods. Canberra index divided number variables   vegdist, dist.  differ   constant multiplier, alternative vegdist   range (0,1).  Function daisy (package   cluster) provides alternative implementation Gower index   also can handle mixed data numeric class variables.    two versions Gower distance (\"gower\", \"altGower\")   differ scaling: \"gower\" divides distances   number observations (rows) scales column unit range,   \"altGower\" omits double-zeros divides number   pairs least one -zero value, scale columns   (Anderson et al. 2006).  can use decostand add   range standardization \"altGower\" (see Examples). Gower   (1971) suggested omitting double zeros presences, often   taken general feature Gower distances. See Examples   implementing Anderson et al. (2006) variant Gower index. dissimilarity indices vegdist designed   community data, give misleading values   negative data entries.  results may also misleading   NA NaN empty sites.  principle,   study species composition without species remove   empty sites community data.","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_dissimilarity.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate dissimilarity between communities — mm_dissimilarity","text":"Aitchison, J. Statistical Analysis Compositional Data (1986).   London, UK: Chapman & Hall. Aitchison, J., Barceló-Vidal, C.,   Martín-Fernández, J.., Pawlowsky-Glahn, V. (2000).   Logratio analysis compositional distance.   Math. Geol. 32, 271–275. Anderson, M.J. Millar, R.B. (2004). Spatial variation effects   habitat temperate reef fish assemblages northeastern New   Zealand.  Journal Experimental Marine Biology Ecology   305, 191–221. Anderson, M.J., Ellingsen, K.E. & McArdle, B.H. (2006). Multivariate   dispersion measure beta diversity. Ecology Letters   9, 683–693. Anderson, M.J & Thompson, .. (2004). Multivariate control charts   ecological environmental monitoring. Ecological     Applications 14, 1921–1935. Cao, Y., Williams, W.P. & Bark, .W. (1997). Similarity measure bias   river benthic Auswuchs community analysis. Water   Environment Research 69, 95–106. Chao, ., Chazdon, R. L., Colwell, R. K. Shen, T. (2005). new   statistical approach assessing similarity species composition   incidence abundance data. Ecology Letters 8, 148–159. Chase, J.M., Kraft, N.J.B., Smith, K.G., Vellend, M. Inouye,   B.D. (2011). Using null models disentangle variation community   dissimilarity variation \\(\\alpha\\)-diversity.   Ecosphere 2:art24 doi:10.1890/ES10-00117.1 Faith, D. P, Minchin, P. R. Belbin, L. (1987).   Compositional dissimilarity robust measure ecological   distance. Vegetatio 69, 57–68. Gower, J. C. (1971). general coefficient similarity   properties. Biometrics 27, 623–637. Krebs, C. J. (1999). Ecological Methodology. Addison Wesley   Longman. Legendre, P. & De Cáceres, M. (2012). Beta diversity   variance community data: dissimilarity coefficients   partitioning. Ecology Letters 16, 951–963.   doi:10.1111/ele.12141 Legendre, P. Legendre, L. (2012) Numerical Ecology. 3rd English   ed. Elsevier. Mardia, K.V., Kent, J.T. Bibby, J.M. (1979). Multivariate analysis.   Academic Press. Martino, C., Morton, J.T., Marotz, C.., Thompson, L.R., Tripathi, .,   Knight, R. & Zengler, K. (2019) novel sparse compositional technique   reveals microbial perturbations. mSystems 4, 1. Mountford, M. D. (1962). index similarity application   classification problems. : P.W.Murphy (ed.),   Progress Soil Zoology, 43–50. Butterworths. Veech, J. . (2013). probabilistic model analysing species   co-occurrence. Global Ecology Biogeography 22, 252–260. Wolda, H. (1981). Similarity indices, sample size   diversity. Oecologia 50, 296–302.","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_dissimilarity.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate dissimilarity between communities — mm_dissimilarity","text":"Jari Oksanen, contributions Tyler Smith (Gower index),   Michael Bedward (Raup–Crick index),   Leo Lahti (Aitchison robust Aitchison distance).","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_find_break.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect time gaps in a datetime series — mm_find_break","title":"Detect time gaps in a datetime series — mm_find_break","text":"Identifies breaks sequence datetime observations based specified time threshold.","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_find_break.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect time gaps in a datetime series — mm_find_break","text":"","code":"mm_find_break(data, datetime, format, threshold = 10, time_unit = \"hours\")"},{"path":"https://stangandaho.github.io/maimer/reference/mm_find_break.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect time gaps in a datetime series — mm_find_break","text":"data data frame containing datetime column. datetime datetime column. format Optional. character string specifying datetime format, passed .POSIXlt. threshold numeric value indicating minimum gap considered break (default 10). time_unit unit threshold. Supported values include \"secs\", \"mins\", \"hours\", \"days\", \"weeks\".","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_find_break.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect time gaps in a datetime series — mm_find_break","text":"tibble columns start, end, duration showing start end break length.","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_find_break.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect time gaps in a datetime series — mm_find_break","text":"","code":"pene <- read.csv(maimer:::table_files()[1])  set_cam <- pene %>%   dplyr::filter(camera == \"CAMERA 3\") %>%   dplyr::mutate(datetimes = as.POSIXlt(datetimes, format = \"%Y-%m-%d %H:%M:%OS\")) %>%   dplyr::arrange(datetimes)  mm_find_break(data = pene, datetime = \"datetimes\", threshold = 5, time_unit = \"days\") #> # A tibble: 3 × 3 #>   start               end                 duration         #>   <dttm>              <dttm>              <drtn>           #> 1 2019-01-24 06:05:52 2023-09-20 16:15:28 1700.423333 days #> 2 2023-09-21 13:33:27 2024-03-02 22:32:10  163.374109 days #> 3 2024-03-02 22:33:06 2024-03-10 10:21:56    7.492245 days"},{"path":"https://stangandaho.github.io/maimer/reference/mm_get_hs.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve hierarchical subject values from image metadata — mm_get_hs","title":"Retrieve hierarchical subject values from image metadata — mm_get_hs","text":"function retrieves values Hierarchical Subject field image's metadata. uses exiftool read metadata processes results extract return unique hierarchical subjects.","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_get_hs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve hierarchical subject values from image metadata — mm_get_hs","text":"","code":"mm_get_hs(path)"},{"path":"https://stangandaho.github.io/maimer/reference/mm_get_hs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve hierarchical subject values from image metadata — mm_get_hs","text":"path character vector specifying full path image file.","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_get_hs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve hierarchical subject values from image metadata — mm_get_hs","text":"character vector unique hierarchical subjects exist, otherwise NULL.","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_get_hs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve hierarchical subject values from image metadata — mm_get_hs","text":"","code":"# Image path image_path <- file.path(system.file(\"img\", package = \"maimer\"), \"large.jpeg\")  # Get Hierarchical Subject from the image mm_get_hs(path = image_path) #> [1] \"Species|Vulture\""},{"path":"https://stangandaho.github.io/maimer/reference/mm_get_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract image metadata — mm_get_metadata","title":"Extract image metadata — mm_get_metadata","text":"function extracts metadata image files located specified path. function can handle individual image files directories containing multiple images. uses exiftool utility read metadata can optionally save extracted metadata CSV file.","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_get_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract image metadata — mm_get_metadata","text":"","code":"mm_get_metadata(path, recursive = FALSE, save_file = FALSE, file_name = \"\")"},{"path":"https://stangandaho.github.io/maimer/reference/mm_get_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract image metadata — mm_get_metadata","text":"path character vector full path names. Either directory path file path. path specified directory, function looks image (.jpeg/JPEG, jpg/JPG) inside extract tags bind single data.frame. recursive logical. listing recurse directories? applied path directory. save_file logical. Extracted metadata write disk? file_name character specifying name file save csv format. left empty save_file TRUE, default name metadata.csv. Note file saved save_file FALSE, even file name provided.","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_get_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract image metadata — mm_get_metadata","text":"data.frame","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_get_metadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract image metadata — mm_get_metadata","text":"","code":"# Image path image_path <- file.path(system.file(\"img\", package = \"maimer\"), \"large.jpeg\")  # Extract metadata from the downloaded image metadata <- mm_get_metadata(path = image_path)  # Extract metadata from all images in a directory (non-recursive) file.copy(image_path, file.path(dirname(image_path), \"large2.jpeg\")) #> [1] TRUE metadata_dir <- mm_get_metadata(path = dirname(image_path), recursive = FALSE) #> Processing image large.jpeg (1 of 2) #> Processing image large2.jpeg (2 of 2)  unlink(file.path(dirname(image_path), \"large2.jpeg\"))"},{"path":"https://stangandaho.github.io/maimer/reference/mm_independence.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate event independence — mm_independence","title":"Evaluate event independence — mm_independence","text":"function calculates difference times evaluates whether events independent based given threshold. useful checking certain events dataset independent based time intervals.","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_independence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate event independence — mm_independence","text":"","code":"mm_independence(   data = NULL,   species_column,   site_column,   datetime,   format,   threshold = 30 * 60,   only = FALSE )"},{"path":"https://stangandaho.github.io/maimer/reference/mm_independence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate event independence — mm_independence","text":"data data.frame, tbl_df, tbl containing event data. include column datetime values. NULL, function use deltatime argument instead data argument. species_column optional column name specifying species grouping. provided, independence assessed separately within species group. site_column optional column name specifying site/camera grouping. provided, independence assessed separately within site group. datetime character string specifying name column data contains datetime values. argument required data provided. format character string defining format used parse datetime values datetime column. threshold numeric value representing time difference threshold (seconds) determine whether events independent. Events considered independent time difference greater equal threshold. default 30 minutes (1800 seconds). logical value indicating whether return rows data identified independent events. TRUE, independent events returned. FALSE, entire data frame returned additional column indicating independence status. default TRUE.","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_independence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate event independence — mm_independence","text":"data provided TRUE, tibble events identified independent. data provided FALSE, tibble original data additional columns indicating independent status deltatime differences (second). data provided, tibble deltatime values independent status.","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_independence.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evaluate event independence — mm_independence","text":"","code":"library(dplyr)  # Load example dataset cam_data <- read.csv(system.file(\"penessoulou_season1.csv\", package = \"maimer\"))  # Independence without considering species occurrence indep1 <- cam_data %>%   mm_independence(data = ., datetime = datetimes, format = \"%Y-%m-%d %H:%M:%S\",                   only = TRUE)  sprintf(\"Independent observations: %s\", nrow(indep1)) #> [1] \"Independent observations: 177\"  # Independence considering species occurrence indep2 <- cam_data %>%   mm_independence(data = ., datetime = datetimes, format = \"%Y-%m-%d %H:%M:%S\",                   only = TRUE, species_column = \"species\")  sprintf(\"Independent observations: %s\", nrow(indep2)) #> [1] \"Independent observations: 183\"  # Use a standalone vector of datetime values dtime <- cam_data$datetimes mm_independence(datetime = dtime, format = \"%Y-%m-%d %H:%M:%S\", only = TRUE) #> # A tibble: 177 × 1 #>    datetime            #>    <dttm>              #>  1 2019-01-20 15:24:41 #>  2 2019-01-21 15:23:38 #>  3 2019-01-23 15:35:20 #>  4 2019-01-24 06:01:07 #>  5 2023-09-20 16:15:28 #>  6 2023-09-21 13:32:45 #>  7 2024-03-02 22:32:10 #>  8 2024-03-10 10:21:56 #>  9 2024-03-10 15:04:38 #> 10 2024-03-10 17:28:11 #> # ℹ 167 more rows"},{"path":"https://stangandaho.github.io/maimer/reference/mm_lognorm_ci.html","id":null,"dir":"Reference","previous_headings":"","what":"Log-normal confidence interval — mm_lognorm_ci","title":"Log-normal confidence interval — mm_lognorm_ci","text":"Calculates approximate log-normal confidence intervals given estimates standard errors.","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_lognorm_ci.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log-normal confidence interval — mm_lognorm_ci","text":"","code":"mm_lognorm_ci(estimate, se, percent = 95)"},{"path":"https://stangandaho.github.io/maimer/reference/mm_lognorm_ci.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log-normal confidence interval — mm_lognorm_ci","text":"estimate Numeric estimate value(s) se Standard error(s) estimate percent Percentage confidence level","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_lognorm_ci.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Log-normal confidence interval — mm_lognorm_ci","text":"dataframe row per estimate input, columns lcl ucl (lower upper confidence limits).","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_lognorm_ci.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Log-normal confidence interval — mm_lognorm_ci","text":"","code":"mm_lognorm_ci(10.13, 3.57) #>   lower_bound upper_bound #> 1     5.18043    19.80857"},{"path":"https://stangandaho.github.io/maimer/reference/mm_overlap_estimates.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimates of coefficient of overlapping — mm_overlap_estimates","title":"Estimates of coefficient of overlapping — mm_overlap_estimates","text":"Estimates coefficient overlapping","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_overlap_estimates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimates of coefficient of overlapping — mm_overlap_estimates","text":"","code":"mm_overlap_estimates(   A,   B,   kmax = 3,   adjust = c(0.8, 1, 4),   n_grid = 128,   type = c(\"all\", \"Dhat1\", \"Dhat4\", \"Dhat5\") )"},{"path":"https://stangandaho.github.io/maimer/reference/mm_overlap_estimates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimates of coefficient of overlapping — mm_overlap_estimates","text":"numeric vector time--day observations (radians) species . B numeric vector time--day observations (radians) species B. kmax integer indicating maximum number modes allowed activity pattern. Default 3. adjust numeric value adjust bandwidth kernel density estimation. Default 1. n_grid integer specifying number grid points density estimation. Default 128. type name estimator use: Dhat4 recommended samples larger 50, otherwise use Dhat1. See Details. default \"\" compatibility older versions.","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_overlap_estimates.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimates of coefficient of overlapping — mm_overlap_estimates","text":"See overlapTrue meaning coefficient overlapping, \\(\\Delta\\). estimators \\(\\Delta\\) use kernel density estimates fitted data approximate true density functions f(t) g(t). Schmid & Schmidt (2006) propose five estimators overlap: Dhat1 calculated vectors densities estimated T equally-spaced times, t, 0 \\(2\\pi\\):  circular distributions, Dhat2 equivalent Dhat1, Dhat3 inapplicable. Dhat4 Dhat5 use vectors densities estimated times observations species, x y:  n, m sample sizes indicator function (1 condition true, 0 otherwise). Dhat5 simply checks curve higher point; even tiny changes data can result large, discontinuous changes Dhat5, can take values > 1. use Dhat5. Comparing curves times actual observations works well enough observations species. Simulations show Dhat4 best smallest sample least 50 observations. Dhat1 compares curves n.grid equally spaced points, best small samples.","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_overlap_estimates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimates of coefficient of overlapping — mm_overlap_estimates","text":"","code":"set.seed(42) species_A <- runif(100, 1.2, 2 * pi) species_B <- runif(100, 0.23, 2 * pi) mm_overlap_estimates(species_A, species_B) #>     Dhat1     Dhat4     Dhat5  #> 0.8579292 0.8573376 0.8400000  mm_overlap_estimates(species_A, species_B, type = \"Dhat4\") #>     Dhat4  #> 0.8573376"},{"path":"https://stangandaho.github.io/maimer/reference/mm_overlap_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate overlap coefficients for multiple species — mm_overlap_matrix","title":"Estimate overlap coefficients for multiple species — mm_overlap_matrix","text":"function calculates pairwise overlap coefficients activity patterns multiple species using time data.","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_overlap_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate overlap coefficients for multiple species — mm_overlap_matrix","text":"","code":"mm_overlap_matrix(   data,   species_column,   time_column,   convert_time = F,   format = \"%H:%M:%S\",   fill_na = NULL,   ... )"},{"path":"https://stangandaho.github.io/maimer/reference/mm_overlap_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate overlap coefficients for multiple species — mm_overlap_matrix","text":"data data.frame tibble containing species time information. species_column column data indicating species names. time_column column data containing time data (either radians time format converted). convert_time Logical. TRUE, time data converted radians using mm_to_radian function. format character string specifying time format (e.g., \"%H:%M:%S\") mm_to_radian() TRUE. Defaults \"%H:%M:%S\". fill_na Optional. numeric value used fill NA values overlap coefficient matrix. Defaults NULL (fill NA values). ... Additional arguments passed overlap::overlapEst()` overlap estimation.","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_overlap_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate overlap coefficients for multiple species — mm_overlap_matrix","text":"square matrix pairwise overlap coefficients, rows columns represent species.","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_overlap_matrix.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimate overlap coefficients for multiple species — mm_overlap_matrix","text":"function calculates pairwise overlap coefficients species dataset. overlap coefficients estimated using overlap package: species pairs sample sizes least 50 observations , Dhat4 estimator used. smaller sample sizes, Dhat1 estimator used (Schmid & Schmidt, 2006).","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_overlap_matrix.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimate overlap coefficients for multiple species — mm_overlap_matrix","text":"Schmid & Schmidt (2006) Nonparametric estimation coefficient overlapping - theory empirical application, Computational Statistics Data Analysis, 50:1583-1596.","code":""},{"path":[]},{"path":"https://stangandaho.github.io/maimer/reference/mm_overlap_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate overlap coefficients for multiple species — mm_overlap_matrix","text":"","code":"# Example dataset data <- data.frame(   species = c(\"SpeciesA\", \"SpeciesA\", \"SpeciesB\", \"SpeciesB\"),   time = c(\"10:30:00\", \"11:45:00\", \"22:15:00\", \"23:30:00\") )  # Calculate overlap coefficients with time conversion overlap_matrix <- mm_overlap_matrix(   data = data,   species_column = species,   time_column = time,   convert_time = TRUE,   format = \"%H:%M:%S\" )  # Fill missing values in the matrix with 0 overlap_matrix_filled <- mm_overlap_matrix(   data = data,   species_column = species,   time_column = time,   convert_time = TRUE,   fill_na = 0 )"},{"path":"https://stangandaho.github.io/maimer/reference/mm_plot_camtrap_activity.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot camera trap activity over time — mm_plot_camtrap_activity","title":"Plot camera trap activity over time — mm_plot_camtrap_activity","text":"Visualizes activity history camera trap deployments show periods data capture. also optionally highlights periods inactivity (break/gap).","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_plot_camtrap_activity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot camera trap activity over time — mm_plot_camtrap_activity","text":"","code":"mm_plot_camtrap_activity(   data,   deployment,   datetime,   threshold = 5,   time_unit = \"days\",   format = NULL,   activity_style = list(width = 0.8, color = \"steelblue\", alpha = 0.7),   break_style = list(width = 0.8, color = \"#c90026\", alpha = 0.9),   show_gaps = TRUE,   ylabel_format = \"%Y-%m-%d\",   ybreak = paste(1, time_unit) )"},{"path":"https://stangandaho.github.io/maimer/reference/mm_plot_camtrap_activity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot camera trap activity over time — mm_plot_camtrap_activity","text":"data data frame containing datetime column. deployment Column name (unquoted) identifies deployment camera ID. datetime datetime column. threshold numeric value indicating minimum gap considered break (default 10). time_unit unit threshold. Supported values include \"secs\", \"mins\", \"hours\", \"days\", \"weeks\". format Optional. character string specifying datetime format, passed .POSIXlt. activity_style list controlling appearance active periods. Can include: width: Line width (default 0.8) color: Color activity bars (default \"steelblue\") alpha: Transparency (default 0.7) break_style list controlling appearance gaps/inactive periods. Can include: width: Line width (default 0.8) color: Color gap bars (default \"#c90026\") alpha: Transparency (default 0.9) show_gaps Logical. TRUE (default), shows vertical bars detected gaps deployment activity. ylabel_format Character. Format y-axis date-time labels. Default \"%Y-%m-%d\". ybreak Character. Spacing y-axis breaks, e.g., \"1 days\" \"12 hours\". Default based time_unit.","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_plot_camtrap_activity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot camera trap activity over time — mm_plot_camtrap_activity","text":"ggplot2 object showing periods activity (optionally gaps) deployment.","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_plot_camtrap_activity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot camera trap activity over time — mm_plot_camtrap_activity","text":"","code":"# Load example data and filter for one project camtrap_data <- read.csv(maimer:::table_files()[1]) %>%   dplyr::filter(project == \"Last\")  # Plot with default styles mm_plot_camtrap_activity(   data = camtrap_data,   deployment = camera,   datetime = datetimes,   threshold = 7,   time_unit = \"days\" )   #' # Customize plot appearance mm_plot_camtrap_activity(   data = camtrap_data,   deployment = camera,   datetime = \"datetimes\",   threshold = 15,   time_unit = \"days\",   ybreak = \"3 days\",   activity_style = list(width = 1.1, color = \"gray10\") )+   ggplot2::theme(axis.text.x = ggplot2::element_text(angle = 45, hjust = 1))  #'"},{"path":"https://stangandaho.github.io/maimer/reference/mm_plot_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot species' activity patterns — mm_plot_density","title":"Plot species' activity patterns — mm_plot_density","text":"function visualizes species' activity patterns based time--day data. uses kernel density estimation estimate activity density.","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_plot_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot species' activity patterns — mm_plot_density","text":"","code":"mm_plot_density(   time,   xscale = 24,   xcenter = c(\"noon\", \"midnight\"),   n_grid = 128,   kmax = 3,   adjust = 1,   rug = FALSE,   linetype = 2,   linecol = \"gray10\",   linewidth = 1,   rug_lentgh = 0.018,   rug_color = \"gray30\",   extend = \"lightgrey\",   extend_alpha = 0.8,   ... )"},{"path":"https://stangandaho.github.io/maimer/reference/mm_plot_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot species' activity patterns — mm_plot_density","text":"time numeric vector time--day observations (radians, 0 \\(2\\pi\\)). xscale numeric value scale x-axis. Default 24 representing time hours. xcenter string indicating center x-axis. Options \"noon\" (default) \"midnight\". n_grid integer specifying number grid points density estimation. Default 128. kmax integer indicating maximum number modes allowed activity pattern. Default 3. adjust numeric value adjust bandwidth kernel density estimation. Default 1. rug logical value indicating whether include rug plot observations. Default FALSE. linetype numeric specifying line types. Default c(1, 2). linecol string specifying colors density lines species B. Default c(\"gray10\", \"gray0\"). linewidth numeric value specifying line widths species B density lines. Default c(1, 1). rug_lentgh numeric value specifying length rug ticks. Default 0.018 (normalized plot coordinates). rug_color string specifying color rug ticks. Default \"gray30\". extend string specifying color extended area beyond activity period. Default \"lightgrey\". extend_alpha numeric value (0 1) transparency extended area. Default 0.8. ... Additional arguments passed geom_rug function.","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_plot_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot species' activity patterns — mm_plot_density","text":"ggplot object representing activity density curves species.","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_plot_density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot species' activity patterns — mm_plot_density","text":"","code":"# Generate random data for two species  set.seed(42)  A <- runif(100, 0, 2 * pi)   # Plot overlap with default settings  mm_plot_density(A) #> Error in mm_plot_density(A): object 'A' not found  # Customize plot with specific colors and line types  mm_plot_density(A, linecol = \"gray10\", linewidth = 0.8,                  xcenter = \"midnight\", rug = TRUE,                  rug_color = 'red', extend_alpha = 0) #> Error in mm_plot_density(A, linecol = \"gray10\", linewidth = 0.8, xcenter = \"midnight\",     rug = TRUE, rug_color = \"red\", extend_alpha = 0): object 'A' not found"},{"path":"https://stangandaho.github.io/maimer/reference/mm_plot_overlap.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot overlap between two species' activity patterns — mm_plot_overlap","title":"Plot overlap between two species' activity patterns — mm_plot_overlap","text":"function visualizes temporal overlap two species' activity patterns based time--day data. uses kernel density estimation estimate activity densities highlights areas overlap two species.","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_plot_overlap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot overlap between two species' activity patterns — mm_plot_overlap","text":"","code":"mm_plot_overlap(   A,   B,   xscale = 24,   xcenter = c(\"noon\", \"midnight\"),   n_grid = 128,   kmax = 3,   adjust = 1,   rug = FALSE,   overlap_color = \"gray40\",   overlap_alpha = 0.8,   linetype = c(1, 2),   linecol = c(\"gray10\", \"gray0\"),   linewidth = c(1, 1),   overlap_only = FALSE,   rug_lentgh = 0.018,   rug_color = \"gray30\",   extend = \"lightgrey\",   extend_alpha = 0.8,   ... )"},{"path":"https://stangandaho.github.io/maimer/reference/mm_plot_overlap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot overlap between two species' activity patterns — mm_plot_overlap","text":"numeric vector time--day observations (radians) species . B numeric vector time--day observations (radians) species B. xscale numeric value scale x-axis. Default 24 representing time hours. xcenter string indicating center x-axis. Options \"noon\" (default) \"midnight\". n_grid integer specifying number grid points density estimation. Default 128. kmax integer indicating maximum number modes allowed activity pattern. Default 3. adjust numeric value adjust bandwidth kernel density estimation. Default 1. rug logical value indicating whether include rug plot observations. Default FALSE. overlap_color string specifying color overlap area. Default \"gray40\". overlap_alpha numeric value (0 1) transparency overlap area. Default 0.8. linetype vector integers specifying line types species B density lines. Default c(1, 2). linecol vector strings specifying colors density lines species B. Default c(\"gray10\", \"gray0\"). linewidth vector numeric values specifying line widths species B density lines. Default c(1, 1). overlap_only logical value indicating whether plot overlap region without individual density lines. Default FALSE. rug_lentgh numeric value specifying length rug ticks. Default 0.018 (normalized plot coordinates). rug_color string specifying color rug ticks. Default \"gray30\". extend string specifying color extended area beyond activity period. Default \"lightgrey\". extend_alpha numeric value (0 1) transparency extended area. Default 0.8. ... Additional arguments passed geom_rug function.","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_plot_overlap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot overlap between two species' activity patterns — mm_plot_overlap","text":"ggplot object representing activity density curves overlap two species. overlap_only = TRUE, overlap region displayed.","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_plot_overlap.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot overlap between two species' activity patterns — mm_plot_overlap","text":"function calculates kernel density estimates two sets time--day data (B) visualizes overlap. time--day data expressed radians (0 2π). Key features plot: x-axis can scaled represent hours (default xscale = 24) units. center x-axis can adjusted \"noon\" \"midnight\". shaded polygon highlights overlap region two density curves. Optionally includes rug plot indicate raw observations. Allows customization line types, colors, widths, transparency. Extended regions (beyond primary activity period) can highlighted clarity.","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_plot_overlap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot overlap between two species' activity patterns — mm_plot_overlap","text":"","code":"if (FALSE) { # \\dontrun{   # Generate random data for two species   set.seed(42)   species_A <- runif(100, 0, 2 * pi)   species_B <- runif(100, 0, 2 * pi)    # Plot overlap with default settings   mm_plot_overlap(A = species_A, B = species_B)    # Customize plot with specific colors and line types   mm_plot_overlap(A = species_A, B = species_B, overlap_color = \"blue\", linecol = c(\"red\", \"green\"))    # Include rug plots and change transparency   mm_plot_overlap(A = species_A, B = species_B, rug = TRUE, overlap_alpha = 0.5) } # }"},{"path":"https://stangandaho.github.io/maimer/reference/mm_plot_overlap_coef.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot overlap coefficient matrix — mm_plot_overlap_coef","title":"Plot overlap coefficient matrix — mm_plot_overlap_coef","text":"Visualizes overlap coefficient matrix.","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_plot_overlap_coef.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot overlap coefficient matrix — mm_plot_overlap_coef","text":"","code":"mm_plot_overlap_coef(   data,   side = c(\"lower\", \"upper\"),   show = c(\"shape\", \"value\"),   shape_type = 21,   shape_size = 0.5,   text_size = 6,   text_font = NA,   excludes = NULL,   color_scale = \"gray3\",   ... )"},{"path":"https://stangandaho.github.io/maimer/reference/mm_plot_overlap_coef.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot overlap coefficient matrix — mm_plot_overlap_coef","text":"data square matrix (e.g mm_overlap_matrix() output) representing overlap coefficients visualized. side character string indicating triangle matrix display. Options \"lower\" (default) \"upper\". show character string specifying whether display \"shape\" (default) \"value\" plot. shape_type Numeric value specifying type shape use plot. Defaults 21 (circle). shape_size Numeric value controlling stroke size shapes. Defaults 0.5. text_size Numeric value specifying size text show = \"value\". Defaults 6. text_font Character string specifying font family use text labels. Defaults NA. excludes vector numeric values exclude plot. Defaults NULL. color_scale character string vector colors define gradient color scale. Defaults \"gray3\". ... Additional arguments passed guide_colorbar function.","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_plot_overlap_coef.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot overlap coefficient matrix — mm_plot_overlap_coef","text":"ggplot object representing overlap coefficient matrix visualization.","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_plot_overlap_coef.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot overlap coefficient matrix — mm_plot_overlap_coef","text":"","code":"library(ggplot2) # Example overlap coefficient matrix overlap_matrix <- matrix(c(1, 0.8, 0.7, 0.8, 1, 0.9, 0.7, 0.9, 1), ncol = 3) colnames(overlap_matrix) <- rownames(overlap_matrix) <- c(\"A\", \"B\", \"C\")  # Plot lower triangle with shapes mm_plot_overlap_coef(overlap_matrix, side = \"lower\", show = \"shape\")   # Plot upper triangle with values mm_plot_overlap_coef(overlap_matrix, side = \"upper\", show = \"value\")"},{"path":"https://stangandaho.github.io/maimer/reference/mm_plot_rose_diagram.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a 24-hour rose diagram of daily activity — mm_plot_rose_diagram","title":"Plot a 24-hour rose diagram of daily activity — mm_plot_rose_diagram","text":"function generates rose diagram (circular bar plot) visualize daily activity patterns 24-hour period. bar represents either absolute relative frequency observations within hourly intervals. plot also includes segment indicating mean activity time, optional segment showing 95% confidence interval activity period.","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_plot_rose_diagram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a 24-hour rose diagram of daily activity — mm_plot_rose_diagram","text":"","code":"mm_plot_rose_diagram(   data = NULL,   times,   frequencies = \"absolute\",   hide_lebels = FALSE,   label_position = NULL,   label_style = list(),   time_range = 1,   ci_segment = TRUE,   mean_segment = TRUE,   ring = TRUE,   color = \"gray20\",   fill = color,   ci_style = list(),   mean_style = list(),   start = -0.12,   width = NULL )"},{"path":"https://stangandaho.github.io/maimer/reference/mm_plot_rose_diagram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a 24-hour rose diagram of daily activity — mm_plot_rose_diagram","text":"data data frame containing time values. NULL, times must provided vector. times numeric vector time values (radians) column name data. frequencies Character. Use \"absolute\" show counts \"relative\" show percentages. Default \"absolute\". hide_lebels Logical. TRUE, frequency value labels top bars hidden. Default FALSE. label_position Numeric. Controls vertical position frequency value labels (shown). label_style list styles labels. Accepts color, size, family. time_range Numeric. Width time bins hours. Default 1 (hourly bins). ci_segment Logical numeric. TRUE, segment representing 95% confidence interval added. numeric, value sets length CI ticks. Default TRUE. mean_segment Logical. TRUE, segment representing mean time added. Default TRUE. ring Logical numeric vector. TRUE, default ring range set. numeric vector length 2 provided, sets custom inner outer limits radial axis. color Color bar border segments. Default \"gray20\". fill Fill color bars. Default color. ci_style list styles confidence interval segment. Accepts color, linetype, linewidth. mean_style list styles mean segment. Accepts color, linetype, linewidth. start Numeric. angle (radians) polar plot starts. Default -0.12. width Numeric. Width bar. Default NULL, uses default width geom_col().","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_plot_rose_diagram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a 24-hour rose diagram of daily activity — mm_plot_rose_diagram","text":"ggplot object representing rose diagram.","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_plot_rose_diagram.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a 24-hour rose diagram of daily activity — mm_plot_rose_diagram","text":"","code":"set.seed(129) library(dplyr) library(ggplot2)  rf <- runif(123, 0, max = 6)  mm_plot_rose_diagram(data = NULL,                      times = rf,                      frequencies = \"relative\",                      label_style = list(size = 4, color = 'red'),                      label_position = 11,                      time_range = 1,                      mean_segment = TRUE,                      ci_segment = 1,                      ring = c(-5, 12),                      color = 'gray20',                      mean_style = list(linetype = 1, linewidth = .5, color = 'red'),                      ci_style = list(linetype = 1, linewidth = .5, color = 'black') )"},{"path":"https://stangandaho.github.io/maimer/reference/mm_read.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a delimited file into a tibble — mm_read","title":"Read a delimited file into a tibble — mm_read","text":"mm_read function reads delimited text file. automatically detects delimiter specified provides easy--use interface importing data additional customization options.","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a delimited file into a tibble — mm_read","text":"","code":"mm_read(file_path, header = TRUE, sep, ...)"},{"path":"https://stangandaho.github.io/maimer/reference/mm_read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a delimited file into a tibble — mm_read","text":"file_path string specifying path file read. header logical value indicating whether file contains header row. Defaults TRUE. sep field separator character. provided, function automatically detects separator. ... Additional arguments passed read.table function fine-tuned control file reading.","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_read.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a delimited file into a tibble — mm_read","text":"tibble containing data specified file.","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_remove_hs.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove specific or all hierarchical subject values from image metadata — mm_remove_hs","title":"Remove specific or all hierarchical subject values from image metadata — mm_remove_hs","text":"mm_remove_hs function removes specific hierarchy Hierarchical Subject field image's metadata, removes entire field specific hierarchy provided. uses exiftool manipulate metadata ensure desired changes applied.","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_remove_hs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove specific or all hierarchical subject values from image metadata — mm_remove_hs","text":"","code":"mm_remove_hs(path, hierarchy = NULL, intern = TRUE, quiet = TRUE, ...)"},{"path":"https://stangandaho.github.io/maimer/reference/mm_remove_hs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove specific or all hierarchical subject values from image metadata — mm_remove_hs","text":"path character vector specifying full path image file. hierarchy named character vector, e.g c(\"Species\" = \"Vulture\") specifying hierarchy removed. NULL, entire Hierarchical Subject field removed. intern TRUE output returned character vector. quiet Suppress output command . ... additional arguments passed system2()","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_remove_hs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove specific or all hierarchical subject values from image metadata — mm_remove_hs","text":"message indicating image updated","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_remove_hs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove specific or all hierarchical subject values from image metadata — mm_remove_hs","text":"","code":"# Image path image_path <- file.path(system.file(\"img\", package = \"maimer\"), \"large.jpeg\")  # Get Hierarchical Subject from the image no_hs <- mm_get_hs(path = image_path) mm_create_hs(image_path, c(\"A\" = \"AB\")) #> [1]  mm_remove_hs(image_path, c(\"A\" = \"AB\")) #> [1] Hierarchy A|AB does not exist. No change applied to large.jpeg"},{"path":"https://stangandaho.github.io/maimer/reference/mm_solartime.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform time to solar time anchored to sunrise and sunset — mm_solartime","title":"Transform time to solar time anchored to sunrise and sunset — mm_solartime","text":"function converts local time solar time based sunrise sunset times given location. Solar time timekeeping system day defined position sun sky, sunrise marking start day sunset marking end.","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_solartime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform time to solar time anchored to sunrise and sunset — mm_solartime","text":"","code":"mm_solartime(   data = NULL,   date,   longitude,   latitude,   crs = NULL,   format,   time_zone,   ... )"},{"path":"https://stangandaho.github.io/maimer/reference/mm_solartime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform time to solar time anchored to sunrise and sunset — mm_solartime","text":"data data frame containing date, longitude, latitude columns. NULL, function use date, longitude, latitude parameters directly. Default NULL. date vector date-time values column name data representing date-time values converted solar time. can character vector POSIXlt object. longitude numeric vector column name data representing longitude location(s). Longitude decimal degrees. latitude numeric vector column name data representing latitude location(s). Latitude decimal degrees. crs coordinate reference system (CRS) string object specifying current CRS input coordinates. provided, function transform coordinates longitude latitude (WGS84). useful input coordinates projected system (e.g., UTM). Default NULL. format character string giving date-time format used strptime(). time_zone numeric vector representing time zone offset(s) UTC (hours). data provided, match number unique locations data. ... Additional arguments passed .POSIXlt date parsing.","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_solartime.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform time to solar time anchored to sunrise and sunset — mm_solartime","text":"tibble following columns: input: original date-time values. clock: local clock time. solar: calculated solar time. data provided, tibble also include longitude latitude columns.","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_solartime.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Transform time to solar time anchored to sunrise and sunset — mm_solartime","text":"function calculates solar time first determining sunrise sunset times given location(s) date(s). uses times anchor solar time calculation. solar time computed transforming local clock time based position sun sky. data provided, function process unique location data return tibble solar time date-time value. data NULL, function process date, longitude, latitude parameters directly.","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_solartime.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Transform time to solar time anchored to sunrise and sunset — mm_solartime","text":"Rowcliffe, M. (2023). activity: Animal Activity Statistics. R package version 1.3.4. https://CRAN.R-project.org/package=activity","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_solartime.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform time to solar time anchored to sunrise and sunset — mm_solartime","text":"","code":"library(dplyr)  read.csv(system.file(\"penessoulou_season1.csv\", package = \"maimer\")) %>%  dplyr::filter(species == \"Erythrocebus patas\") %>%  # Select independent events based on a given threshold  maimer::mm_independence(species_column = species,                           datetime = datetimes, threshold = 60*5, # 5 minutes                           format = \"%Y-%m-%d %H:%M:%S\",                           only = TRUE) %>%  # Transform Time to Solar Time  mm_solartime(data = ., date = datetime, longitude = longitude, latitude = latitude,                crs = \"EPSG:32631\", time_zone = 1) #> # A tibble: 71 × 5 #>    longitude latitude datetime            clock solar #>        <dbl>    <dbl> <dttm>              <dbl> <dbl> #>  1      1.57     9.28 2024-03-17 15:14:29  3.99  3.97 #>  2      1.57     9.28 2024-03-20 11:32:33  3.02  3.00 #>  3      1.57     9.28 2024-03-21 14:34:27  3.82  3.80 #>  4      1.57     9.28 2024-03-21 14:54:21  3.90  3.89 #>  5      1.57     9.28 2024-03-22 14:23:41  3.77  3.75 #>  6      1.57     9.28 2024-03-22 14:51:09  3.89  3.88 #>  7      1.57     9.28 2024-03-25 13:38:37  3.57  3.56 #>  8      1.57     9.28 2024-03-25 13:50:19  3.62  3.61 #>  9      1.57     9.28 2024-03-28 17:06:38  4.48  4.48 #> 10      1.57     9.28 2024-03-29 11:22:19  2.98  2.97 #> # ℹ 61 more rows"},{"path":"https://stangandaho.github.io/maimer/reference/mm_spatial_coverage.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate observed spatial coverage of species — mm_spatial_coverage","title":"Calculate observed spatial coverage of species — mm_spatial_coverage","text":"function calculates Observed Spatial Coverage species like Home Range, based camera trap data. term home range typically associated dynamic movement data, recorded radio-tracking GPS devices, provide continuous near-continuous tracking individual animal's movements. Since camera traps static capture presence/absence activity within specific locations, concept home range might fully apply.","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_spatial_coverage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate observed spatial coverage of species — mm_spatial_coverage","text":"","code":"mm_spatial_coverage(   data,   site_column,   size_column = NULL,   longitude,   latitude,   crs = c(4326, NULL),   study_area = NULL,   resolution,   spread_factor = 0.1 )"},{"path":"https://stangandaho.github.io/maimer/reference/mm_spatial_coverage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate observed spatial coverage of species — mm_spatial_coverage","text":"data data frame containing species occurrence records, including site, longitude, latitude, optionally size (abundance). site_column Column name specifying site identifier. size_column Optional column specifying abundance species site. Defaults NULL, case counts per site used. longitude Column name specifying longitude observation sites. latitude Column name specifying latitude observation sites. crs vector length two specifying coordinate reference systems: c(crs1, crs2). crs1 represents current CRS data (e.g., 4326 latitude/longitude). crs2 represents CRS transform (e.g., \"EPSG:32631\", UTM EPSG code) accurate distance calculations. crs2 NULL, transformation applied. Defaults c(4326, NULL) study_area optional simple feature (sf) polygon representing study area. provided, raster extends cover area. resolution Numeric value specifying spatial resolution (grid size) rasterization. spread_factor scale factor half-normal distribution. Higher values create spread-distribution, lower values make concentrated. value must ]0; 1]","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_spatial_coverage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate observed spatial coverage of species — mm_spatial_coverage","text":"list containing: Coverage raster: raster object representing species abundance across space. Coverage stats: tibble spatial coverage statistics, including area (km²), average abundance, maximum abundance, standard deviation.","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_spatial_coverage.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate observed spatial coverage of species — mm_spatial_coverage","text":"function applies half-normal kernel model species abundance space, using scale rate control spread distribution: $$\\bar{K}(x) = \\frac{\\sum w * \\text{e}^{(-0.5 * (\\frac{x}{\\sigma})^2)}}{N}$$ : \\(\\bar{K}(x)\\) mean abundance kernel across sites, \\(w\\) species abundance site, \\(\\sigma\\) standard deviation spatial distance (scaled spread_factor), \\(N\\) total number sites.","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_spatial_coverage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate observed spatial coverage of species — mm_spatial_coverage","text":"","code":"library(dplyr) cam_data <- system.file(\"penessoulou_season2.csv\", package = \"maimer\") %>%   read.csv() %>%   dplyr::filter(Species == \"Erythrocebus patas\")  spc <- mm_spatial_coverage(   data = cam_data,   site_column = Camera,   crs = \"EPSG:32631\", ,   resolution = 30,   spread_factor = 0.4,   size_column = Count,   longitude = Longitude,   latitude = Latitude )  ## Abundance stats spc[[2]] %>%   dplyr::select(-1) #> # A tibble: 1 × 4 #>   `Spatial coverage (km²)` `Average abundance` `Maximum abundance` #>                      <dbl>               <dbl>               <dbl> #> 1                     22.6                   7                  13 #> # ℹ 1 more variable: `Standard Deviation` <dbl>  ## Plot spatial coverage library(ggplot2) spc_vect <- terra::as.polygons(spc[[1]]) %>%   sf::st_as_sf()  ggplot() +   geom_sf(data = spc_vect, aes(fill = Abundance), color = NA) +   theme_minimal() +   scale_fill_viridis_c()"},{"path":"https://stangandaho.github.io/maimer/reference/mm_stack_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Stack a list of data frame — mm_stack_df","title":"Stack a list of data frame — mm_stack_df","text":"function takes list data frames stacks single data frame. ensures columns input data frames list included output, filling missing columns NA values necessary.","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_stack_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stack a list of data frame — mm_stack_df","text":"","code":"mm_stack_df(df_list)"},{"path":"https://stangandaho.github.io/maimer/reference/mm_stack_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stack a list of data frame — mm_stack_df","text":"df_list list data frame stacked","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_stack_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stack a list of data frame — mm_stack_df","text":"data frame","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_stack_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Stack a list of data frame — mm_stack_df","text":"","code":"x <- data.frame(age = 15, fruit = \"Apple\", weight = 12) y <- data.frame(age = 51, fruit = \"Tomato\") z <- data.frame(age = 26, fruit = \"Lemo\", weight = 12, height = 45) alldf <- list(x,y,z) mm_stack_df(alldf) #> # A tibble: 3 × 4 #>     age fruit  weight height #>   <dbl> <chr>   <dbl>  <dbl> #> 1    15 Apple      12     NA #> 2    51 Tomato     NA     NA #> 3    26 Lemo       12     45"},{"path":"https://stangandaho.github.io/maimer/reference/mm_standardize.html","id":null,"dir":"Reference","previous_headings":"","what":"Standardize community data matrix — mm_standardize","title":"Standardize community data matrix — mm_standardize","text":"function standardizes given data matrix using different methods total sum scaling, max normalization, frequency scaling, standardization, presence-absence transformation, chi-square transformation, Hellinger transformation, log transformation, others.","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_standardize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standardize community data matrix — mm_standardize","text":"","code":"mm_standardize(   data,   method,   margin,   range_global,   logbase = 2,   na.rm = FALSE,   ... )"},{"path":"https://stangandaho.github.io/maimer/reference/mm_standardize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standardize community data matrix — mm_standardize","text":"data numeric matrix data frame standardized. method character string specifying standardization method (see details). Available methods : \"total\": Divides entry total sum given margin. \"max\": Divides entry maximum value given margin. \"frequency\": Frequency transformation. \"normalize\": Normalization Euclidean norm. \"range\": Standardizes range (min-max scaling). \"rank\": Converts values ranks. \"rrank\": Relative rank transformation. \"standardize\": Standardization (z-score normalization). \"pa\": Presence-absence transformation (binary). \"chi.square\": Chi-square standardization. \"hellinger\": Hellinger transformation. \"log\": Log transformation. \"clr\": Centered log-ratio transformation. \"rclr\": Robust centered log-ratio transformation. \"alr\": Additive log-ratio transformation. margin integer specifying margin standardization: 1: Rows 2: Columns range_global matrix specifying range standardization (optional, used \"range\" method). logbase base logarithmic transformation (default 2). na.rm Logical. TRUE, missing values (NA) removed calculations. ... Additional arguments passed transformation functions.","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_standardize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Standardize community data matrix — mm_standardize","text":"standardized matrix tibble attributes specifying transformation applied.","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_standardize.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Standardize community data matrix — mm_standardize","text":"function provides following standardization methods community data: \"total\": Divides margin total (default margin = 1). \"max\": Divides margin maximum (default margin = 2). \"frequency\": Divides margin total multiplies number non-zero items, ensuring average non-zero entries one (Oksanen 1983; default margin = 2). \"normalize\": Scales data sum squares along specified margin equals one (default margin = 1). \"range\": Standardizes values range [0,1] (default margin = 2). values constant, transformed 0. \"rank\", \"rrank\": \"rank\" replaces abundance values increasing ranks, leaving zeros unchanged. \"rrank\" similar uses relative ranks maximum 1 (default margin = 1). \"standardize\": Scales x zero mean unit variance (default margin = 2). \"pa\": Converts x presence/absence scale (0/1). \"chi.square\": Divides row sums square root column sums, adjusts square root matrix total (Legendre & Gallagher 2001). used Euclidean distance, distances similar Chi-square distances correspondence analysis (default margin = 1). \"hellinger\": Computes square root method = \"total\" (Legendre & Gallagher 2001). \"log\": Logarithmic transformation suggested Anderson et al. (2006): $$\\log_b (x) + 1$$ \\(x > 0\\), \\(b\\) base logarithm. Zeros remain unchanged. Higher bases give less weight quantities presences. \"alr\": Additive log ratio (ALR) transformation (Aitchison 1986). Reduces skewness compositional bias. Requires positive values; pseudocounts can added. transformation defined : $$alr = [\\log(x_1 / x_D), ..., \\log(x_{D-1} / x_D)]$$ denominator sample \\(x_D\\) can chosen arbitrarily. \"clr\": Centered log ratio (CLR) transformation (Aitchison 1986). Common microbial ecology (Gloor et al. 2017). supports positive data; pseudocounts can used handle zeros. transformation defined : $$clr = \\log(x / g(x)) = \\log x - \\log g(x)$$ \\(x\\) single value, \\(g(x)\\) geometric mean \\(x\\). \"rclr\": Robust CLR transformation. Unlike CLR, method allows zeros without requiring pseudocounts. divides values geometric mean observed (non-zero) features, preserving zeros (Martino et al. 2019). transformation defined : $$rclr = \\log(x / g(x > 0))$$ \\(x\\) single value, \\(g(x > 0)\\) geometric mean sample-wide values \\(x\\) positive (\\(x > 0\\)). Standardization, contrasted transformation, means entries transformed relative entries. methods default margin. margin=1 means rows (sites normal data set) margin=2 means columns (species normal data set). Command wisconsin shortcut common Wisconsin double standardization species (margin=2) first standardized maxima (max) sites (margin=1) site totals (tot). standardization methods give nonsense results negative data entries normally occur community data. empty sites species (constant method =  \"range\"), many standardization change NaN. Function decobackstand can used transform standardized data back original. possible standardization may implemented cases possible. round-errors back-transformation exact, wise overwrite original data. zap=TRUE original zeros exact.","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_standardize.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Standardize community data matrix — mm_standardize","text":"function adapted decostand function vegan R package, modifications improved handling.","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_standardize.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Standardize community data matrix — mm_standardize","text":"Aitchison, J. Statistical Analysis Compositional Data (1986). London, UK: Chapman & Hall. Anderson, M.J., Ellingsen, K.E. & McArdle, B.H. (2006) Multivariate dispersion measure beta diversity. Ecology Letters 9, 683–693. Egozcue, J.J., Pawlowsky-Glahn, V., Mateu-Figueras, G., Barcel'o-Vidal, C. (2003) Isometric logratio transformations compositional data analysis. Mathematical Geology 35, 279–300. Gloor, G.B., Macklaim, J.M., Pawlowsky-Glahn, V. & Egozcue, J.J. (2017) Microbiome Datasets Compositional: Optional. Frontiers Microbiology 8, 2224. Legendre, P. & Gallagher, E.D. (2001) Ecologically meaningful transformations ordination species data. Oecologia 129, 271–280. Martino, C., Morton, J.T., Marotz, C.., Thompson, L.R., Tripathi, ., Knight, R. & Zengler, K. (2019) novel sparse compositional technique reveals microbial perturbations. mSystems 4, 1. Oksanen, J. (1983) Ordination boreal heath-like vegetation principal component analysis, correspondence analysis multidimensional scaling. Vegetatio 52, 181–189.","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_standardize.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Standardize community data matrix — mm_standardize","text":"","code":"# Example usage with sample data cam_data <- read.csv(system.file('penessoulou_season1.csv', package = 'maimer')) cam_data <- cam_data %>%   mm_to_community(site_column = camera, species_column = species,                   size_column = number, values_fill = 0)  standardized_data <- mm_standardize(data = cam_data[, 2:11], method = \"total\") standardized_data #> # A tibble: 13 × 10 #>    `Syncerus caffer` `Lepus crawshayi` `Erythrocebus patas` #>                <dbl>             <dbl>                <dbl> #>  1            0.981              0                   0.0169 #>  2            0                  0.375               0.5    #>  3            0.430              0                   0.522  #>  4            0.941              0                   0      #>  5            0                  0                   0.0714 #>  6            0.480              0                   0.341  #>  7            0                  0                   1      #>  8            0.247              0                   0.306  #>  9            0                  0                   0      #> 10            0                  0                   0      #> 11            0                  0                   0      #> 12            0                  0                   0      #> 13            0.0240             0                   0.974  #> # ℹ 7 more variables: `Tragelaphus scriptus` <dbl>, #> #   `Chlorocebus aethiops` <dbl>, `Canis adustus` <dbl>, #> #   `Mellivora capensis` <dbl>, `Sylvicapra grimmia` <dbl>, #> #   `Thryonomys swinderianus` <dbl>, `Genetta genetta` <dbl>"},{"path":"https://stangandaho.github.io/maimer/reference/mm_summarise_camtrap_activity.html","id":null,"dir":"Reference","previous_headings":"","what":"Create activity summary statistics — mm_summarise_camtrap_activity","title":"Create activity summary statistics — mm_summarise_camtrap_activity","text":"Calculates summary statistics camera trap activity periods.","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_summarise_camtrap_activity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create activity summary statistics — mm_summarise_camtrap_activity","text":"","code":"mm_summarise_camtrap_activity(   data,   deployment,   datetime,   threshold = 5,   time_unit = \"days\",   format = NULL )"},{"path":"https://stangandaho.github.io/maimer/reference/mm_summarise_camtrap_activity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create activity summary statistics — mm_summarise_camtrap_activity","text":"data data frame containing datetime column. deployment Character. Column name deployment identifiers. datetime datetime column. threshold numeric value indicating minimum gap considered break (default 10). time_unit unit threshold. Supported values include \"secs\", \"mins\", \"hours\", \"days\", \"weeks\". format Optional. character string specifying datetime format, passed .POSIXlt.","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_summarise_camtrap_activity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create activity summary statistics — mm_summarise_camtrap_activity","text":"tibble activity summary statistics deployment.","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_summarise_camtrap_activity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create activity summary statistics — mm_summarise_camtrap_activity","text":"","code":"# Get activity summary camtrap_data <- read.csv(maimer:::table_files()[1]) %>% dplyr::filter(project == \"Last\")    mm_summarise_camtrap_activity(data = camtrap_data,                                 deployment = \"camera\",                                 datetime = datetimes,                                 threshold = 15,                                 time_unit = \"days\") #> # A tibble: 11 × 11 #>    deployment   n_records first_record        last_record         total_duration #>    <chr>            <int> <dttm>              <dttm>                       <dbl> #>  1 CAMERA 10          724 2024-03-10 20:09:27 2024-05-09 22:43:34          60.1  #>  2 CAMERA 3             8 2024-03-12 00:07:36 2024-04-01 13:09:35          20.5  #>  3 CAMERA 5           202 2024-03-12 02:54:31 2024-05-02 05:33:28          51.1  #>  4 CAMERA 8           113 2024-03-21 03:52:51 2024-05-10 20:07:12          50.7  #>  5 CAMERA 2            14 2024-03-23 12:36:25 2024-04-01 01:22:52           8.53 #>  6 CAMERA 1           264 2024-03-24 08:03:07 2024-04-26 01:00:52          32.7  #>  7 CAMERA 12            3 2024-03-25 09:43:58 2024-03-25 09:43:59           0    #>  8 CAMERA 4            21 2024-03-27 09:33:07 2024-04-05 00:14:29           8.61 #>  9 CAMERA 11            3 2024-04-04 21:58:33 2024-04-04 21:58:33           0    #> 10 CAMERA 3 - …         4 2024-04-27 23:00:05 2024-05-12 23:30:09          15.0  #> 11 CAMERA 1 - …        31 2024-05-05 03:46:58 2024-05-07 00:00:37           1.84 #> # ℹ 6 more variables: active_duration <dbl>, break_duration <dbl>, #> #   activity_rate <dbl>, n_active_periods <int>, avg_break_duration <dbl>, #> #   n_breaks <dbl>"},{"path":"https://stangandaho.github.io/maimer/reference/mm_survey_design.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a survey design for camera trap deployment — mm_survey_design","title":"Create a survey design for camera trap deployment — mm_survey_design","text":"function designs survey deploying camera traps within specified study area. supports various sampling methods, including random, regular, clustered sampling, options minimum distance constraints padding around study area.","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_survey_design.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a survey design for camera trap deployment — mm_survey_design","text":"","code":"mm_survey_design(   study_area,   method = \"random\",   total_site,   total_cluster,   type_in = \"random\",   min_distance = NULL,   distance = NULL,   padding = 10,   nest_padding = 0,   set_seed = NULL,   verbose = TRUE )"},{"path":"https://stangandaho.github.io/maimer/reference/mm_survey_design.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a survey design for camera trap deployment — mm_survey_design","text":"study_area sf polygon representing area survey conducted. method character string specifying sampling method. Options include: \"random\": Randomly distributes camera trap sites within study area. \"regular\": Creates regularly spaced grid sites. \"regular_cluster\": Generates regularly spaced clusters within sites sampled.. \"random_cluster\": Creates randomly clusters within sites sampled. \"mask\":  Uses existing features study_area object define sampling areas, user-defined site allocation. total_site integer specifying number sites sampled per cluster (\"regular_cluster\" \"random_cluster\") total number sites (\"random\" \"regular\" methods). \"mask\" method, can single value (applied features) vector specifying number sites per feature study_area. total_cluster integer defining number clusters (required \"random_cluster\"). type_in character string indicating within-cluster sampling type. Options: \"regular\": Places sites structured grid within cluster feature (\"mask\" method). \"random\": Distributes sites randomly within cluster feature (\"mask\" method). min_distance numeric value specifying minimum allowed distance sampled sites (applied random methods). distance numeric vector specifying distance (x y spacing) grid cells regular sampling methods. single value provided, used dimensions. padding numeric value defining buffer distance exclude areas near edge study area. nest_padding numeric value defining additional buffer applied within cluster mask feature avoid placing sites near edges units. set_seed optional integer setting random seed ensure reproducibility. verbose logical indicating whether display warnings messages (default: TRUE).","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_survey_design.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a survey design for camera trap deployment — mm_survey_design","text":"sf object containing sampled points within study area.","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_survey_design.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Create a survey design for camera trap deployment — mm_survey_design","text":"function ensures study area projected coordinate reference system (CRS) proceeding. geographic CRS detected, error raised.","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_survey_design.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a survey design for camera trap deployment — mm_survey_design","text":"","code":"library(ggplot2) # Load example dataset data(\"pendjari\")  # Transform study area to a projected coordinate system pendjari_trans <- pendjari %>%   sf::st_transform(crs = \"EPSG:32631\")  # Random sampling method with 15 sites, ensuring a minimum distance of 5000 meters between sites random_sdes <- mm_survey_design(study_area = pendjari_trans, method = \"random\", verbose = TRUE,                                 total_site = 15, min_distance = 5000, padding = 2000,                                 set_seed = 123)  # Regular sampling method using a grid with cell sizes of 4000m x 6000m regular_sdes <- mm_survey_design(study_area = pendjari_trans, method = \"regular\", verbose = TRUE,                                  distance = c(4000, 6000), padding = 2500, set_seed = 123)  # Random-cluster sampling: 8 clusters, each containing 5 sites, ensuring a # minimum site distance of 2000 meters rand_c_sdes <- mm_survey_design(study_area = pendjari_trans,                                 method = \"random_cluster\", verbose = TRUE,                                 total_cluster = 8, total_site = 5,                                 distance = c(7000, 3000), min_distance = 2000,                                 padding = 2000, nest_padding = 500, set_seed = 123) #> Warning: Cluster size doesn't allow to have 5 sites per #>                                 cluster. Try to adjust distance and min_distance  # Random-cluster sampling with regularly distributed sites: 22 clusters, each # with 8 regularly spaced sites rand_c_reg_sdes <- mm_survey_design(study_area = pendjari_trans,                                     method = \"random_cluster\", verbose = TRUE,                                     total_cluster = 22, total_site = 8, type_in = \"regular\",                                     distance = c(6000, 3000),                                     padding = 1000, nest_padding = 0, set_seed = 123)  # Regular-cluster sampling: Grid with 3 sites per cluster, ensuring a minimum # distance of 2000 meters between sites reg_c_sdes <- mm_survey_design(study_area = pendjari_trans,                                method = \"regular_cluster\", verbose = TRUE,                                total_site = 3, distance = c(7000, 6000),                                min_distance = 2000, padding = 2000, set_seed = 123) #> Simple feature collection with 28 features and 1 field #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 300935.6 ymin: 1188880 xmax: 375203.1 ymax: 1250255 #> Projected CRS: WGS 84 / UTM zone 31N #> First 10 features: #>      cluster                        x #> 1  cluster_1 POINT (330170.3 1249595) #> 2  cluster_1 POINT (332860.8 1249894) #> 3  cluster_2 POINT (343060.1 1249925) #> 4  cluster_2 POINT (347059.9 1249727) #> 5  cluster_3 POINT (358208.8 1248588) #> 6  cluster_3 POINT (360620.6 1248825) #> 7  cluster_4 POINT (375203.1 1248952) #> 8  cluster_4 POINT (370870.3 1250255) #> 9  cluster_5 POINT (314593.9 1238168) #> 10 cluster_5 POINT (319216.6 1238048) #> Warning: Cluster size doesn't allow to have 3 sites #>                                 per cluster. Try to adjust distance and min_distance  # Regular-cluster sampling with regularly distributed sites within clusters reg_c_reg_sdes <- mm_survey_design(study_area = pendjari_trans,                                    method = \"regular_cluster\", verbose = TRUE,                                    total_site = 3, distance = c(7000, 6000), type_in = \"regular\",                                    padding = 1000, set_seed = 123) # A plot with ggplot()+   geom_sf(data = pendjari_trans)+   geom_sf(data = reg_c_reg_sdes)   # Mask-based sampling: Sites are sampled within existing features of the study area mask_sdes <- mm_survey_design(study_area = pendjari_trans,                               method = \"mask\", verbose = TRUE,                               total_site = 13, distance = c(7000, 6000),                               min_distance = 2000, nest_padding = 2000, set_seed = 123) #> Warning: Maximum number of points could not exced 11 with #>                             minimum distance of 2000.  # Mask-based sampling with regularly spaced sites per feature mask_regular_sdes <- mm_survey_design(study_area = pendjari_trans,                                       method = \"mask\", verbose = TRUE, type_in = \"regular\",                                       total_site = c(8, 2, 13), distance = c(7000, 6000),                                       min_distance = 2000, nest_padding = 1000, set_seed = 123)  mask_regular_sdes #> Simple feature collection with 21 features and 0 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 283116.6 ymin: 1180635 xmax: 376253.4 ymax: 1259724 #> Projected CRS: WGS 84 / UTM zone 31N #> First 10 features: #>                    geometry #> 1  POINT (311276.4 1180635) #> 2  POINT (311276.4 1194715) #> 3  POINT (325356.3 1194715) #> 4  POINT (297196.5 1208795) #> 5  POINT (311276.4 1208795) #> 6  POINT (325356.3 1208795) #> 7  POINT (283116.6 1222875) #> 8  POINT (297196.5 1222875) #> 9  POINT (365397.8 1231289) #> 10 POINT (374269.6 1240161)"},{"path":"https://stangandaho.github.io/maimer/reference/mm_temporal_shift.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the temporal shift of one species' activity over two periods — mm_temporal_shift","title":"Calculate the temporal shift of one species' activity over two periods — mm_temporal_shift","text":"function estimates analyzes temporal shift activity species two time periods using kernel density estimation. computes activity distributions determines magnitude direction shift.","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_temporal_shift.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the temporal shift of one species' activity over two periods — mm_temporal_shift","text":"","code":"mm_temporal_shift(   first_period,   second_period,   convert_time = FALSE,   xscale = 24,   xcenter = c(\"noon\", \"midnight\"),   n_grid = 128,   kmax = 3,   adjust = 1,   width_at = 1/2,   format = \"%H:%M:%S\",   time_zone,   plot = TRUE,   linestyle_1 = list(),   linestyle_2 = list(),   posestyle_1 = list(),   posestyle_2 = list(),   ... )"},{"path":"https://stangandaho.github.io/maimer/reference/mm_temporal_shift.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the temporal shift of one species' activity over two periods — mm_temporal_shift","text":"first_period numeric vector representing activity times radians first period. second_period numeric vector representing activity times radians second period. convert_time Logical. TRUE, converts times radians analysis. xscale numeric value scale x-axis. Default 24 representing time hours. xcenter string indicating center x-axis. Options \"noon\" (default) \"midnight\". n_grid integer specifying number grid points density estimation. Default 128. kmax integer indicating maximum number modes allowed activity pattern. Default 3. adjust numeric value adjust bandwidth kernel density estimation. Default 1. width_at Numeric. fraction maximum density activity width measured (default 0.5). format Character. Format time input (default \"%H:%M:%S\"). Used convert_time = TRUE. time_zone Character. Time zone time conversion. Required convert_time = TRUE. plot Logical. TRUE, generates plot comparing activity distributions two periods. linestyle_1 List. Line style settings first period's density plot. Includes linetype, linewidth, color. linestyle_2 List. Line style settings second period's density plot. Includes linetype, linewidth, color. posestyle_1 List. Marker style settings first period's density range. Includes shape, size, color, alpha. posestyle_2 List. Marker style settings second period's density range. Includes shape, size, color, alpha. ... Additional arguments (currently unused).","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_temporal_shift.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the temporal shift of one species' activity over two periods — mm_temporal_shift","text":"list containing: tibble : First period range: start end times active periods first dataset. Second period range: start end times active periods second dataset. Shift size (hour): absolute difference activity duration two periods. Move: categorical description shift (\"Forward\", \"Backward\", \"Expanded\", \"Contracted\", etc.). plot (optional): ggplot2 object visualizing density distributions plot = TRUE.","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_temporal_shift.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the temporal shift of one species' activity over two periods — mm_temporal_shift","text":"","code":"library(ggplot2) # Using radians as input  first_period <- c(1.3, 2.3, 2.5, 5.2, 6.1, 2.3)  # Example timestamps for period 1 second_period <- c(1.8, 2.2, 2.5)  # Example timestamps for period 2 result <- mm_temporal_shift(first_period, second_period, plot = TRUE, xcenter = \"noon\",                             linestyle_1 = list(color = \"gray10\", linetype = 1, linewidth = 1),                             linestyle_2 = list(color = \"#b70000\", linetype = 5, linewidth = .5))  result #> [[1]] #> # A tibble: 1 × 4 #>   `First period range` `Second period range` `Shift size (in hour)` Move     #>   <chr>                <chr>                                  <dbl> <chr>    #> 1 06:59:32 - 10:34:58  06:25:31 - 10:12:18                     0.19 Backward #>  #> $plot  #>   # customize the graph associated result result$plot+   labs(color = \"Periods\")+   theme(legend.position = \"top\")   # Using time strings as input first_period <- c(\"12:03:05\", \"13:10:09\", \"14:08:10\", \"14:18:30\", \"18:22:11\") second_period <- c(\"13:00:20\", \"14:20:10\", \"15:55:20\", \"16:03:01\", \"16:47:00\") result <- mm_temporal_shift(first_period, second_period,                             convert_time = TRUE,                             format = \"%H:%M:%S\",                             time_zone = \"UTC\")"},{"path":"https://stangandaho.github.io/maimer/reference/mm_to_community.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert data to a community matrix — mm_to_community","title":"Convert data to a community matrix — mm_to_community","text":"function transforms input data community matrix rows represent sites, columns represent species, values indicate count abundance species site.","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_to_community.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert data to a community matrix — mm_to_community","text":"","code":"mm_to_community(   data,   site_column,   species_column,   size_column,   values_fill = NULL )"},{"path":"https://stangandaho.github.io/maimer/reference/mm_to_community.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert data to a community matrix — mm_to_community","text":"data data frame containing input data. site_column column data frame representing site identifiers. Can specified string unquoted column name. species_column column data frame representing species identifiers. Can specified string unquoted column name. size_column (Optional) column representing size abundance species site. provided, counts species occurrences calculated. values_fill (Optional) value fill missing cells resulting community matrix. Defaults NULL.","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_to_community.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert data to a community matrix — mm_to_community","text":"tibble rows represent sites, columns represent species, values represent count abundance species.","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_to_community.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert data to a community matrix — mm_to_community","text":"function creates site--species matrix suitable ecological analysis. size_column provided, function counts occurrences species per site. size_column provided, values used measure species abundance.","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_to_community.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert data to a community matrix — mm_to_community","text":"","code":"# Example data df <- dplyr::tibble(   site = c(\"A\", \"A\", \"B\", \"B\", \"C\"),   species = c(\"sp1\", \"sp2\", \"sp1\", \"sp3\", \"sp2\"),   abundance = c(5, 2, 3, 1, 4) )  # Convert to community matrix with counts mm_to_community(df, site_column = site, species_column = species) #> # A tibble: 3 × 4 #>   site    sp1   sp2   sp3 #>   <chr> <int> <int> <int> #> 1 A         1     1    NA #> 2 B         1    NA     1 #> 3 C        NA     1    NA  # Convert to community matrix with abundance mm_to_community(df, site_column = site, species_column = species, size_column = abundance) #> # A tibble: 3 × 4 #>   site    sp1   sp2   sp3 #>   <chr> <dbl> <dbl> <dbl> #> 1 A         5     2    NA #> 2 B         3    NA     1 #> 3 C        NA     4    NA  # Fill missing cells with 0 mm_to_community(df, site_column = site, species_column = species, values_fill = 0) #> # A tibble: 3 × 4 #>   site    sp1   sp2   sp3 #>   <chr> <int> <int> <int> #> 1 A         1     1     0 #> 2 B         1     0     1 #> 3 C         0     1     0"},{"path":"https://stangandaho.github.io/maimer/reference/mm_to_occupancy.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert camera trap data to occupancy format — mm_to_occupancy","title":"Convert camera trap data to occupancy format — mm_to_occupancy","text":"function transforms camera trap detection data occupancy format suitable analysis. aggregates detections user-defined time windows optionally converts counts presence-absence (0/1) data.","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_to_occupancy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert camera trap data to occupancy format — mm_to_occupancy","text":"","code":"mm_to_occupancy(   data,   date_column,   format = \"%Y-%m-%d\",   site_column,   species_column,   size_column,   by_day = 7,   presence_absence = TRUE )"},{"path":"https://stangandaho.github.io/maimer/reference/mm_to_occupancy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert camera trap data to occupancy format — mm_to_occupancy","text":"data data frame containing camera trap detection records. date_column name column containing detection dates. format character string. specified converting character representation, try c(\"%Y-%m-%d\", \"%Y/%m/%d\") one one, give error none works. Otherwise, processing via strptime() whose help page describes available conversion specifications. site_column name column identifying sampling sites. species_column name column containing species names. Can NULL species information needed. size_column name column representing detection counts. by_day integer specifying number days per time window (default: 7). presence_absence Logical. TRUE, converts counts presence-absence data (1 = detected, 0 = detected). Default TRUE.","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_to_occupancy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert camera trap data to occupancy format — mm_to_occupancy","text":"wide-format data frame rows represent sites (optionally species), columns represent detection windows. Values indicate either detection counts presence-absence (0/1).","code":""},{"path":[]},{"path":"https://stangandaho.github.io/maimer/reference/mm_to_occupancy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert camera trap data to occupancy format — mm_to_occupancy","text":"","code":"data <- data.frame(   date = c(\"01-01-2023\", \"03-01-2023\", \"10-01-2023\", \"15-01-2023\"),   site = c(\"A\", \"A\", \"B\", \"B\"),   species = c(\"Tiger\", \"Tiger\", \"Deer\", \"Deer\"),   count = c(1, 2, 3, 1) )  occupancy_data <- mm_to_occupancy(   data,   date_column = date,   site_column = site,   species_column = species,   size_column = count,   by_day = 7,   presence_absence = TRUE )  occupancy_data #> # A tibble: 4 × 732 #>   site  species `1-01-20 to 1-01-26` `1-01-27 to 1-02-02` `1-02-03 to 1-02-09` #>   <chr> <chr>                  <dbl>                <dbl>                <dbl> #> 1 A     Deer                       0                    0                    0 #> 2 A     Tiger                      0                    0                    0 #> 3 B     Deer                       0                    0                    0 #> 4 B     Tiger                      0                    0                    0 #> # ℹ 727 more variables: `1-02-10 to 1-02-16` <dbl>, `1-02-17 to 1-02-23` <dbl>, #> #   `1-02-24 to 1-03-02` <dbl>, `1-03-03 to 1-03-09` <dbl>, #> #   `1-03-10 to 1-03-16` <dbl>, `1-03-17 to 1-03-23` <dbl>, #> #   `1-03-24 to 1-03-30` <dbl>, `1-03-31 to 1-04-06` <dbl>, #> #   `1-04-07 to 1-04-13` <dbl>, `1-04-14 to 1-04-20` <dbl>, #> #   `1-04-21 to 1-04-27` <dbl>, `1-04-28 to 1-05-04` <dbl>, #> #   `1-05-05 to 1-05-11` <dbl>, `1-05-12 to 1-05-18` <dbl>, …"},{"path":"https://stangandaho.github.io/maimer/reference/mm_to_radian.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert time to radians — mm_to_radian","title":"Convert time to radians — mm_to_radian","text":"function converts time values radians, often used circular statistics time--day analyses.","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_to_radian.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert time to radians — mm_to_radian","text":"","code":"mm_to_radian(data, times, format = \"%H:%M:%S\", time_zone = \"UTC\")"},{"path":"https://stangandaho.github.io/maimer/reference/mm_to_radian.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert time to radians — mm_to_radian","text":"data data frame containing column time values. Optional. NULL, times parameter treated standalone vector. times column name data vector time values converted. Time values format recognized .POSIXct(). format string specifying format time values, using standard POSIX formatting syntax. Default \"%H:%M:%S\". time_zone string specifying time zone interpreting time values. Default \"UTC\".","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_to_radian.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert time to radians — mm_to_radian","text":"data provided, function returns input data frame additional column named time_radian. data provided, function returns numeric vector time values converted radians.","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_to_radian.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert time to radians — mm_to_radian","text":"function converts time values radians based 24-hour clock: full day (24 hours) corresponds \\(2\\pi\\) radians. fractional time day calculated : $$\\text{Fraction day} = \\frac{\\text{hours}}{24} + \\frac{\\text{minutes}}{1440} + \\frac{\\text{seconds}}{86400}$$ example, time 23 hours, 6 minutes, 12 seconds: $$\\text{Fraction day} = \\frac{23}{24} + \\frac{6}{1440} + \\frac{12}{86400}$$ convert fraction radians: $$\\text{Radians} = \\text{Fraction day} \\times 2\\pi$$","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_to_radian.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert time to radians — mm_to_radian","text":"","code":"if (FALSE) { # \\dontrun{   # Convert a standalone vector of time values   times <- c(\"00:00:00\", \"06:00:00\", \"12:00:00\", \"18:00:00\")   mm_to_radian(times = times, format = \"%H:%M:%S\")    # Convert a column of time values in a data frame   data <- data.frame(times = c(\"00:00:00\", \"06:00:00\", \"12:00:00\", \"18:00:00\"))   mm_to_radian(data = data, times = times, format = \"%H:%M:%S\") } # }"},{"path":"https://stangandaho.github.io/maimer/reference/mm_to_time.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert radian to time — mm_to_time","title":"Convert radian to time — mm_to_time","text":"function converts angle radians (representing fraction full circle) time format '%H:%M:%S'. conversion assumes radian value represents fraction 24-hour day (.e., 0 radians midnight \\(2\\pi\\) radians next midnight).","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_to_time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert radian to time — mm_to_time","text":"","code":"mm_to_time(radian)"},{"path":"https://stangandaho.github.io/maimer/reference/mm_to_time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert radian to time — mm_to_time","text":"radian numeric value vector representing angle radians. value must lie within range \\([0, 2\\pi]\\), 0 corresponds midnight (00:00:00) \\(2\\pi\\) corresponds next midnight (24:00:00).","code":""},{"path":"https://stangandaho.github.io/maimer/reference/mm_to_time.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert radian to time — mm_to_time","text":"character string representing time format '%H:%M:%S'.","code":""},{"path":[]},{"path":"https://stangandaho.github.io/maimer/reference/mm_to_time.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert radian to time — mm_to_time","text":"","code":"# Convert 1.6 radians to time mm_to_time(1.6) #> [1] \"06:06:42\" # Output: \"06:06:42\""},{"path":"https://stangandaho.github.io/maimer/reference/pendjari.html","id":null,"dir":"Reference","previous_headings":"","what":"Pendjari national park and surrounding areas — pendjari","title":"Pendjari national park and surrounding areas — pendjari","text":"dataset containing spatial boundaries Pendjari National Park surrounding hunting zones Benin.","code":""},{"path":"https://stangandaho.github.io/maimer/reference/pendjari.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pendjari national park and surrounding areas — pendjari","text":"","code":"pendjari"},{"path":"https://stangandaho.github.io/maimer/reference/pendjari.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Pendjari national park and surrounding areas — pendjari","text":"tibble 3 rows 2 columns: NOM name protected area hunting zone. geometry spatial geometry area, stored decimal degrees (EPSG:4326).","code":""},{"path":"https://stangandaho.github.io/maimer/reference/pendjari.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Pendjari national park and surrounding areas — pendjari","text":"dataset includes following areas: Pendjari Hunting Zone Konkombri Hunting Zone Pendjari National Park","code":""},{"path":"https://stangandaho.github.io/maimer/reference/pendjari.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pendjari national park and surrounding areas — pendjari","text":"","code":"# Load the dataset data(\"pendjari\")  # Plot the data library(sf) #> Linking to GEOS 3.12.1, GDAL 3.8.4, PROJ 9.4.0; sf_use_s2() is TRUE plot(pendjari, main = \"Pendjari National Park and Surrounding Areas\") legend(\"topright\", legend = pendjari$NAME, fill = c(\"gray10\", \"gray50\", \"gray90\"))"},{"path":"https://stangandaho.github.io/maimer/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"Pipe operator Pipe operator","code":""},{"path":"https://stangandaho.github.io/maimer/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs  lhs %<>% rhs"},{"path":[]},{"path":"https://stangandaho.github.io/maimer/news/index.html","id":"id_2025-0-2-0","dir":"Changelog","previous_headings":"","what":"2025-06-26","title":"maimer 0.2.0","text":"mm_correct_datetime() correct datetime stamps camera trap datasets using deployment-specific correction table. Supports multiple datetime formats, offset directions.","code":""},{"path":"https://stangandaho.github.io/maimer/news/index.html","id":"id_2025-0-2-0-1","dir":"Changelog","previous_headings":"","what":"2025-06-25","title":"maimer 0.2.0","text":"mm_plot_camtrap_activity() function visualize camera trap deployment activity optional gap indicators. mm_summarise_camtrap_activity() function compute summary statistics camera trap deployment activity, including active durations, gaps, activity rates, etc.","code":""},{"path":"https://stangandaho.github.io/maimer/news/index.html","id":"id_2025-0-2-0-2","dir":"Changelog","previous_headings":"","what":"2025-06-24","title":"maimer 0.2.0","text":"Improved handling non-numeric variables mm_describe_df(). Added support detecting sampling breaks using mm_find_break(). Added function compute confidence intervals (mm_ci() mm_lognorm_ci()) Fixed NSE-related warnings","code":""},{"path":"https://stangandaho.github.io/maimer/news/index.html","id":"first-release-highlights-0-2-0","dir":"Changelog","previous_headings":"","what":"First Release Highlights","title":"maimer 0.2.0","text":"Initial release maimer Provides tidyverse-friendly functions data cleaning, transformation, visualization. Includes support alpha & beta diversity, species activity overlap, temporal analysis. Integrates ggplot2 customizable visualizations. Features interactive Shiny app image metadata handling","code":""}]
